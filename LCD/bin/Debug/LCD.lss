
bin\Debug\LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000013cc  00001460  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00001468  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 00000180  00000000  00000000  0000146b  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000001f6  00000000  00000000  000015eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002433  00000000  00000000  000017e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000127e  00000000  00000000  00003c14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000013e8  00000000  00000000  00004e92  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e0  00000000  00000000  0000627c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003a1  00000000  00000000  0000645c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000088e  00000000  00000000  000067fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  0000708b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ec ec       	ldi	r30, 0xCC	; 204
      7c:	f3 e1       	ldi	r31, 0x13	; 19
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	a8 30       	cpi	r26, 0x08	; 8
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>
      8a:	0e 94 4b 00 	call	0x96	; 0x96 <main>
      8e:	0c 94 e4 09 	jmp	0x13c8	; 0x13c8 <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <main>:
#define ENABLE          1
void text(unsigned char commands);
void cursour(unsigned char commands);
void on_off();
int main(void)
{
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	df 93       	push	r29
      9c:	cf 93       	push	r28
      9e:	cd b7       	in	r28, 0x3d	; 61
      a0:	de b7       	in	r29, 0x3e	; 62
      a2:	cc 54       	subi	r28, 0x4C	; 76
      a4:	d0 40       	sbci	r29, 0x00	; 0
      a6:	0f b6       	in	r0, 0x3f	; 63
      a8:	f8 94       	cli
      aa:	de bf       	out	0x3e, r29	; 62
      ac:	0f be       	out	0x3f, r0	; 63
      ae:	cd bf       	out	0x3d, r28	; 61
    ddr_control |= 1<<REGIS_SELECT |1<<READ_WRITE |1<<ENABLE ;
      b0:	a4 e2       	ldi	r26, 0x24	; 36
      b2:	b0 e0       	ldi	r27, 0x00	; 0
      b4:	e4 e2       	ldi	r30, 0x24	; 36
      b6:	f0 e0       	ldi	r31, 0x00	; 0
      b8:	80 81       	ld	r24, Z
      ba:	8e 60       	ori	r24, 0x0E	; 14
      bc:	8c 93       	st	X, r24
      be:	fe 01       	movw	r30, r28
      c0:	e7 5b       	subi	r30, 0xB7	; 183
      c2:	ff 4f       	sbci	r31, 0xFF	; 255
      c4:	80 e0       	ldi	r24, 0x00	; 0
      c6:	90 e0       	ldi	r25, 0x00	; 0
      c8:	a0 e7       	ldi	r26, 0x70	; 112
      ca:	b1 e4       	ldi	r27, 0x41	; 65
      cc:	80 83       	st	Z, r24
      ce:	91 83       	std	Z+1, r25	; 0x01
      d0:	a2 83       	std	Z+2, r26	; 0x02
      d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
      d4:	8e 01       	movw	r16, r28
      d6:	0b 5b       	subi	r16, 0xBB	; 187
      d8:	1f 4f       	sbci	r17, 0xFF	; 255
      da:	fe 01       	movw	r30, r28
      dc:	e7 5b       	subi	r30, 0xB7	; 183
      de:	ff 4f       	sbci	r31, 0xFF	; 255
      e0:	60 81       	ld	r22, Z
      e2:	71 81       	ldd	r23, Z+1	; 0x01
      e4:	82 81       	ldd	r24, Z+2	; 0x02
      e6:	93 81       	ldd	r25, Z+3	; 0x03
      e8:	20 e0       	ldi	r18, 0x00	; 0
      ea:	30 e0       	ldi	r19, 0x00	; 0
      ec:	4a e7       	ldi	r20, 0x7A	; 122
      ee:	55 e4       	ldi	r21, 0x45	; 69
      f0:	0e 94 7d 05 	call	0xafa	; 0xafa <__mulsf3>
      f4:	dc 01       	movw	r26, r24
      f6:	cb 01       	movw	r24, r22
      f8:	f8 01       	movw	r30, r16
      fa:	80 83       	st	Z, r24
      fc:	91 83       	std	Z+1, r25	; 0x01
      fe:	a2 83       	std	Z+2, r26	; 0x02
     100:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     102:	fe 01       	movw	r30, r28
     104:	eb 5b       	subi	r30, 0xBB	; 187
     106:	ff 4f       	sbci	r31, 0xFF	; 255
     108:	60 81       	ld	r22, Z
     10a:	71 81       	ldd	r23, Z+1	; 0x01
     10c:	82 81       	ldd	r24, Z+2	; 0x02
     10e:	93 81       	ldd	r25, Z+3	; 0x03
     110:	20 e0       	ldi	r18, 0x00	; 0
     112:	30 e0       	ldi	r19, 0x00	; 0
     114:	40 e8       	ldi	r20, 0x80	; 128
     116:	5f e3       	ldi	r21, 0x3F	; 63
     118:	0e 94 83 07 	call	0xf06	; 0xf06 <__ltsf2>
     11c:	88 23       	and	r24, r24
     11e:	44 f4       	brge	.+16     	; 0x130 <main+0x9a>
		__ticks = 1;
     120:	fe 01       	movw	r30, r28
     122:	ed 5b       	subi	r30, 0xBD	; 189
     124:	ff 4f       	sbci	r31, 0xFF	; 255
     126:	81 e0       	ldi	r24, 0x01	; 1
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	91 83       	std	Z+1, r25	; 0x01
     12c:	80 83       	st	Z, r24
     12e:	64 c0       	rjmp	.+200    	; 0x1f8 <main+0x162>
	else if (__tmp > 65535)
     130:	fe 01       	movw	r30, r28
     132:	eb 5b       	subi	r30, 0xBB	; 187
     134:	ff 4f       	sbci	r31, 0xFF	; 255
     136:	60 81       	ld	r22, Z
     138:	71 81       	ldd	r23, Z+1	; 0x01
     13a:	82 81       	ldd	r24, Z+2	; 0x02
     13c:	93 81       	ldd	r25, Z+3	; 0x03
     13e:	20 e0       	ldi	r18, 0x00	; 0
     140:	3f ef       	ldi	r19, 0xFF	; 255
     142:	4f e7       	ldi	r20, 0x7F	; 127
     144:	57 e4       	ldi	r21, 0x47	; 71
     146:	0e 94 23 07 	call	0xe46	; 0xe46 <__gtsf2>
     14a:	18 16       	cp	r1, r24
     14c:	0c f0       	brlt	.+2      	; 0x150 <main+0xba>
     14e:	43 c0       	rjmp	.+134    	; 0x1d6 <main+0x140>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     150:	fe 01       	movw	r30, r28
     152:	e7 5b       	subi	r30, 0xB7	; 183
     154:	ff 4f       	sbci	r31, 0xFF	; 255
     156:	60 81       	ld	r22, Z
     158:	71 81       	ldd	r23, Z+1	; 0x01
     15a:	82 81       	ldd	r24, Z+2	; 0x02
     15c:	93 81       	ldd	r25, Z+3	; 0x03
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	40 e2       	ldi	r20, 0x20	; 32
     164:	51 e4       	ldi	r21, 0x41	; 65
     166:	0e 94 7d 05 	call	0xafa	; 0xafa <__mulsf3>
     16a:	dc 01       	movw	r26, r24
     16c:	cb 01       	movw	r24, r22
     16e:	8e 01       	movw	r16, r28
     170:	0d 5b       	subi	r16, 0xBD	; 189
     172:	1f 4f       	sbci	r17, 0xFF	; 255
     174:	bc 01       	movw	r22, r24
     176:	cd 01       	movw	r24, r26
     178:	0e 94 a7 03 	call	0x74e	; 0x74e <__fixunssfsi>
     17c:	dc 01       	movw	r26, r24
     17e:	cb 01       	movw	r24, r22
     180:	f8 01       	movw	r30, r16
     182:	91 83       	std	Z+1, r25	; 0x01
     184:	80 83       	st	Z, r24
     186:	1f c0       	rjmp	.+62     	; 0x1c6 <main+0x130>
     188:	fe 01       	movw	r30, r28
     18a:	ef 5b       	subi	r30, 0xBF	; 191
     18c:	ff 4f       	sbci	r31, 0xFF	; 255
     18e:	80 e9       	ldi	r24, 0x90	; 144
     190:	91 e0       	ldi	r25, 0x01	; 1
     192:	91 83       	std	Z+1, r25	; 0x01
     194:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     196:	fe 01       	movw	r30, r28
     198:	ef 5b       	subi	r30, 0xBF	; 191
     19a:	ff 4f       	sbci	r31, 0xFF	; 255
     19c:	80 81       	ld	r24, Z
     19e:	91 81       	ldd	r25, Z+1	; 0x01
     1a0:	01 97       	sbiw	r24, 0x01	; 1
     1a2:	f1 f7       	brne	.-4      	; 0x1a0 <main+0x10a>
     1a4:	fe 01       	movw	r30, r28
     1a6:	ef 5b       	subi	r30, 0xBF	; 191
     1a8:	ff 4f       	sbci	r31, 0xFF	; 255
     1aa:	91 83       	std	Z+1, r25	; 0x01
     1ac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1ae:	de 01       	movw	r26, r28
     1b0:	ad 5b       	subi	r26, 0xBD	; 189
     1b2:	bf 4f       	sbci	r27, 0xFF	; 255
     1b4:	fe 01       	movw	r30, r28
     1b6:	ed 5b       	subi	r30, 0xBD	; 189
     1b8:	ff 4f       	sbci	r31, 0xFF	; 255
     1ba:	80 81       	ld	r24, Z
     1bc:	91 81       	ldd	r25, Z+1	; 0x01
     1be:	01 97       	sbiw	r24, 0x01	; 1
     1c0:	11 96       	adiw	r26, 0x01	; 1
     1c2:	9c 93       	st	X, r25
     1c4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1c6:	fe 01       	movw	r30, r28
     1c8:	ed 5b       	subi	r30, 0xBD	; 189
     1ca:	ff 4f       	sbci	r31, 0xFF	; 255
     1cc:	80 81       	ld	r24, Z
     1ce:	91 81       	ldd	r25, Z+1	; 0x01
     1d0:	00 97       	sbiw	r24, 0x00	; 0
     1d2:	d1 f6       	brne	.-76     	; 0x188 <main+0xf2>
     1d4:	24 c0       	rjmp	.+72     	; 0x21e <main+0x188>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1d6:	8e 01       	movw	r16, r28
     1d8:	0d 5b       	subi	r16, 0xBD	; 189
     1da:	1f 4f       	sbci	r17, 0xFF	; 255
     1dc:	fe 01       	movw	r30, r28
     1de:	eb 5b       	subi	r30, 0xBB	; 187
     1e0:	ff 4f       	sbci	r31, 0xFF	; 255
     1e2:	60 81       	ld	r22, Z
     1e4:	71 81       	ldd	r23, Z+1	; 0x01
     1e6:	82 81       	ldd	r24, Z+2	; 0x02
     1e8:	93 81       	ldd	r25, Z+3	; 0x03
     1ea:	0e 94 a7 03 	call	0x74e	; 0x74e <__fixunssfsi>
     1ee:	dc 01       	movw	r26, r24
     1f0:	cb 01       	movw	r24, r22
     1f2:	f8 01       	movw	r30, r16
     1f4:	91 83       	std	Z+1, r25	; 0x01
     1f6:	80 83       	st	Z, r24
     1f8:	fe 01       	movw	r30, r28
     1fa:	ed 5b       	subi	r30, 0xBD	; 189
     1fc:	ff 4f       	sbci	r31, 0xFF	; 255
     1fe:	80 81       	ld	r24, Z
     200:	91 81       	ldd	r25, Z+1	; 0x01
     202:	fe 01       	movw	r30, r28
     204:	ff 96       	adiw	r30, 0x3f	; 63
     206:	91 83       	std	Z+1, r25	; 0x01
     208:	80 83       	st	Z, r24
     20a:	fe 01       	movw	r30, r28
     20c:	ff 96       	adiw	r30, 0x3f	; 63
     20e:	80 81       	ld	r24, Z
     210:	91 81       	ldd	r25, Z+1	; 0x01
     212:	01 97       	sbiw	r24, 0x01	; 1
     214:	f1 f7       	brne	.-4      	; 0x212 <main+0x17c>
     216:	fe 01       	movw	r30, r28
     218:	ff 96       	adiw	r30, 0x3f	; 63
     21a:	91 83       	std	Z+1, r25	; 0x01
     21c:	80 83       	st	Z, r24
    _delay_ms(15);
cursour(0x01);
     21e:	81 e0       	ldi	r24, 0x01	; 1
     220:	0e 94 49 03 	call	0x692	; 0x692 <cursour>
     224:	80 e0       	ldi	r24, 0x00	; 0
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	a0 e0       	ldi	r26, 0x00	; 0
     22a:	b0 e4       	ldi	r27, 0x40	; 64
     22c:	8b af       	std	Y+59, r24	; 0x3b
     22e:	9c af       	std	Y+60, r25	; 0x3c
     230:	ad af       	std	Y+61, r26	; 0x3d
     232:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     234:	6b ad       	ldd	r22, Y+59	; 0x3b
     236:	7c ad       	ldd	r23, Y+60	; 0x3c
     238:	8d ad       	ldd	r24, Y+61	; 0x3d
     23a:	9e ad       	ldd	r25, Y+62	; 0x3e
     23c:	20 e0       	ldi	r18, 0x00	; 0
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	4a e7       	ldi	r20, 0x7A	; 122
     242:	55 e4       	ldi	r21, 0x45	; 69
     244:	0e 94 7d 05 	call	0xafa	; 0xafa <__mulsf3>
     248:	dc 01       	movw	r26, r24
     24a:	cb 01       	movw	r24, r22
     24c:	8f ab       	std	Y+55, r24	; 0x37
     24e:	98 af       	std	Y+56, r25	; 0x38
     250:	a9 af       	std	Y+57, r26	; 0x39
     252:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
     254:	6f a9       	ldd	r22, Y+55	; 0x37
     256:	78 ad       	ldd	r23, Y+56	; 0x38
     258:	89 ad       	ldd	r24, Y+57	; 0x39
     25a:	9a ad       	ldd	r25, Y+58	; 0x3a
     25c:	20 e0       	ldi	r18, 0x00	; 0
     25e:	30 e0       	ldi	r19, 0x00	; 0
     260:	40 e8       	ldi	r20, 0x80	; 128
     262:	5f e3       	ldi	r21, 0x3F	; 63
     264:	0e 94 83 07 	call	0xf06	; 0xf06 <__ltsf2>
     268:	88 23       	and	r24, r24
     26a:	2c f4       	brge	.+10     	; 0x276 <main+0x1e0>
		__ticks = 1;
     26c:	81 e0       	ldi	r24, 0x01	; 1
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	9e ab       	std	Y+54, r25	; 0x36
     272:	8d ab       	std	Y+53, r24	; 0x35
     274:	3f c0       	rjmp	.+126    	; 0x2f4 <main+0x25e>
	else if (__tmp > 65535)
     276:	6f a9       	ldd	r22, Y+55	; 0x37
     278:	78 ad       	ldd	r23, Y+56	; 0x38
     27a:	89 ad       	ldd	r24, Y+57	; 0x39
     27c:	9a ad       	ldd	r25, Y+58	; 0x3a
     27e:	20 e0       	ldi	r18, 0x00	; 0
     280:	3f ef       	ldi	r19, 0xFF	; 255
     282:	4f e7       	ldi	r20, 0x7F	; 127
     284:	57 e4       	ldi	r21, 0x47	; 71
     286:	0e 94 23 07 	call	0xe46	; 0xe46 <__gtsf2>
     28a:	18 16       	cp	r1, r24
     28c:	4c f5       	brge	.+82     	; 0x2e0 <main+0x24a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     28e:	6b ad       	ldd	r22, Y+59	; 0x3b
     290:	7c ad       	ldd	r23, Y+60	; 0x3c
     292:	8d ad       	ldd	r24, Y+61	; 0x3d
     294:	9e ad       	ldd	r25, Y+62	; 0x3e
     296:	20 e0       	ldi	r18, 0x00	; 0
     298:	30 e0       	ldi	r19, 0x00	; 0
     29a:	40 e2       	ldi	r20, 0x20	; 32
     29c:	51 e4       	ldi	r21, 0x41	; 65
     29e:	0e 94 7d 05 	call	0xafa	; 0xafa <__mulsf3>
     2a2:	dc 01       	movw	r26, r24
     2a4:	cb 01       	movw	r24, r22
     2a6:	bc 01       	movw	r22, r24
     2a8:	cd 01       	movw	r24, r26
     2aa:	0e 94 a7 03 	call	0x74e	; 0x74e <__fixunssfsi>
     2ae:	dc 01       	movw	r26, r24
     2b0:	cb 01       	movw	r24, r22
     2b2:	9e ab       	std	Y+54, r25	; 0x36
     2b4:	8d ab       	std	Y+53, r24	; 0x35
     2b6:	0f c0       	rjmp	.+30     	; 0x2d6 <main+0x240>
     2b8:	80 e9       	ldi	r24, 0x90	; 144
     2ba:	91 e0       	ldi	r25, 0x01	; 1
     2bc:	9c ab       	std	Y+52, r25	; 0x34
     2be:	8b ab       	std	Y+51, r24	; 0x33
     2c0:	8b a9       	ldd	r24, Y+51	; 0x33
     2c2:	9c a9       	ldd	r25, Y+52	; 0x34
     2c4:	01 97       	sbiw	r24, 0x01	; 1
     2c6:	f1 f7       	brne	.-4      	; 0x2c4 <main+0x22e>
     2c8:	9c ab       	std	Y+52, r25	; 0x34
     2ca:	8b ab       	std	Y+51, r24	; 0x33
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2cc:	8d a9       	ldd	r24, Y+53	; 0x35
     2ce:	9e a9       	ldd	r25, Y+54	; 0x36
     2d0:	01 97       	sbiw	r24, 0x01	; 1
     2d2:	9e ab       	std	Y+54, r25	; 0x36
     2d4:	8d ab       	std	Y+53, r24	; 0x35
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2d6:	8d a9       	ldd	r24, Y+53	; 0x35
     2d8:	9e a9       	ldd	r25, Y+54	; 0x36
     2da:	00 97       	sbiw	r24, 0x00	; 0
     2dc:	69 f7       	brne	.-38     	; 0x2b8 <main+0x222>
     2de:	14 c0       	rjmp	.+40     	; 0x308 <main+0x272>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2e0:	6f a9       	ldd	r22, Y+55	; 0x37
     2e2:	78 ad       	ldd	r23, Y+56	; 0x38
     2e4:	89 ad       	ldd	r24, Y+57	; 0x39
     2e6:	9a ad       	ldd	r25, Y+58	; 0x3a
     2e8:	0e 94 a7 03 	call	0x74e	; 0x74e <__fixunssfsi>
     2ec:	dc 01       	movw	r26, r24
     2ee:	cb 01       	movw	r24, r22
     2f0:	9e ab       	std	Y+54, r25	; 0x36
     2f2:	8d ab       	std	Y+53, r24	; 0x35
     2f4:	8d a9       	ldd	r24, Y+53	; 0x35
     2f6:	9e a9       	ldd	r25, Y+54	; 0x36
     2f8:	9a ab       	std	Y+50, r25	; 0x32
     2fa:	89 ab       	std	Y+49, r24	; 0x31
     2fc:	89 a9       	ldd	r24, Y+49	; 0x31
     2fe:	9a a9       	ldd	r25, Y+50	; 0x32
     300:	01 97       	sbiw	r24, 0x01	; 1
     302:	f1 f7       	brne	.-4      	; 0x300 <main+0x26a>
     304:	9a ab       	std	Y+50, r25	; 0x32
     306:	89 ab       	std	Y+49, r24	; 0x31
_delay_ms(2);
cursour(0x38);
     308:	88 e3       	ldi	r24, 0x38	; 56
     30a:	0e 94 49 03 	call	0x692	; 0x692 <cursour>
     30e:	80 e0       	ldi	r24, 0x00	; 0
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	a8 e4       	ldi	r26, 0x48	; 72
     314:	b2 e4       	ldi	r27, 0x42	; 66
     316:	8d a7       	std	Y+45, r24	; 0x2d
     318:	9e a7       	std	Y+46, r25	; 0x2e
     31a:	af a7       	std	Y+47, r26	; 0x2f
     31c:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     31e:	6d a5       	ldd	r22, Y+45	; 0x2d
     320:	7e a5       	ldd	r23, Y+46	; 0x2e
     322:	8f a5       	ldd	r24, Y+47	; 0x2f
     324:	98 a9       	ldd	r25, Y+48	; 0x30
     326:	2b ea       	ldi	r18, 0xAB	; 171
     328:	3a ea       	ldi	r19, 0xAA	; 170
     32a:	4a ea       	ldi	r20, 0xAA	; 170
     32c:	50 e4       	ldi	r21, 0x40	; 64
     32e:	0e 94 7d 05 	call	0xafa	; 0xafa <__mulsf3>
     332:	dc 01       	movw	r26, r24
     334:	cb 01       	movw	r24, r22
     336:	89 a7       	std	Y+41, r24	; 0x29
     338:	9a a7       	std	Y+42, r25	; 0x2a
     33a:	ab a7       	std	Y+43, r26	; 0x2b
     33c:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
     33e:	69 a5       	ldd	r22, Y+41	; 0x29
     340:	7a a5       	ldd	r23, Y+42	; 0x2a
     342:	8b a5       	ldd	r24, Y+43	; 0x2b
     344:	9c a5       	ldd	r25, Y+44	; 0x2c
     346:	20 e0       	ldi	r18, 0x00	; 0
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	40 e8       	ldi	r20, 0x80	; 128
     34c:	5f e3       	ldi	r21, 0x3F	; 63
     34e:	0e 94 83 07 	call	0xf06	; 0xf06 <__ltsf2>
     352:	88 23       	and	r24, r24
     354:	1c f4       	brge	.+6      	; 0x35c <main+0x2c6>
		__ticks = 1;
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	88 a7       	std	Y+40, r24	; 0x28
     35a:	91 c0       	rjmp	.+290    	; 0x47e <main+0x3e8>
	else if (__tmp > 255)
     35c:	69 a5       	ldd	r22, Y+41	; 0x29
     35e:	7a a5       	ldd	r23, Y+42	; 0x2a
     360:	8b a5       	ldd	r24, Y+43	; 0x2b
     362:	9c a5       	ldd	r25, Y+44	; 0x2c
     364:	20 e0       	ldi	r18, 0x00	; 0
     366:	30 e0       	ldi	r19, 0x00	; 0
     368:	4f e7       	ldi	r20, 0x7F	; 127
     36a:	53 e4       	ldi	r21, 0x43	; 67
     36c:	0e 94 23 07 	call	0xe46	; 0xe46 <__gtsf2>
     370:	18 16       	cp	r1, r24
     372:	0c f0       	brlt	.+2      	; 0x376 <main+0x2e0>
     374:	7b c0       	rjmp	.+246    	; 0x46c <main+0x3d6>
	{
		_delay_ms(__us / 1000.0);
     376:	6d a5       	ldd	r22, Y+45	; 0x2d
     378:	7e a5       	ldd	r23, Y+46	; 0x2e
     37a:	8f a5       	ldd	r24, Y+47	; 0x2f
     37c:	98 a9       	ldd	r25, Y+48	; 0x30
     37e:	20 e0       	ldi	r18, 0x00	; 0
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	4a e7       	ldi	r20, 0x7A	; 122
     384:	54 e4       	ldi	r21, 0x44	; 68
     386:	0e 94 77 06 	call	0xcee	; 0xcee <__divsf3>
     38a:	dc 01       	movw	r26, r24
     38c:	cb 01       	movw	r24, r22
     38e:	8c a3       	std	Y+36, r24	; 0x24
     390:	9d a3       	std	Y+37, r25	; 0x25
     392:	ae a3       	std	Y+38, r26	; 0x26
     394:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     396:	6c a1       	ldd	r22, Y+36	; 0x24
     398:	7d a1       	ldd	r23, Y+37	; 0x25
     39a:	8e a1       	ldd	r24, Y+38	; 0x26
     39c:	9f a1       	ldd	r25, Y+39	; 0x27
     39e:	20 e0       	ldi	r18, 0x00	; 0
     3a0:	30 e0       	ldi	r19, 0x00	; 0
     3a2:	4a e7       	ldi	r20, 0x7A	; 122
     3a4:	55 e4       	ldi	r21, 0x45	; 69
     3a6:	0e 94 7d 05 	call	0xafa	; 0xafa <__mulsf3>
     3aa:	dc 01       	movw	r26, r24
     3ac:	cb 01       	movw	r24, r22
     3ae:	88 a3       	std	Y+32, r24	; 0x20
     3b0:	99 a3       	std	Y+33, r25	; 0x21
     3b2:	aa a3       	std	Y+34, r26	; 0x22
     3b4:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
     3b6:	68 a1       	ldd	r22, Y+32	; 0x20
     3b8:	79 a1       	ldd	r23, Y+33	; 0x21
     3ba:	8a a1       	ldd	r24, Y+34	; 0x22
     3bc:	9b a1       	ldd	r25, Y+35	; 0x23
     3be:	20 e0       	ldi	r18, 0x00	; 0
     3c0:	30 e0       	ldi	r19, 0x00	; 0
     3c2:	40 e8       	ldi	r20, 0x80	; 128
     3c4:	5f e3       	ldi	r21, 0x3F	; 63
     3c6:	0e 94 83 07 	call	0xf06	; 0xf06 <__ltsf2>
     3ca:	88 23       	and	r24, r24
     3cc:	2c f4       	brge	.+10     	; 0x3d8 <main+0x342>
		__ticks = 1;
     3ce:	81 e0       	ldi	r24, 0x01	; 1
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	9f 8f       	std	Y+31, r25	; 0x1f
     3d4:	8e 8f       	std	Y+30, r24	; 0x1e
     3d6:	3f c0       	rjmp	.+126    	; 0x456 <main+0x3c0>
	else if (__tmp > 65535)
     3d8:	68 a1       	ldd	r22, Y+32	; 0x20
     3da:	79 a1       	ldd	r23, Y+33	; 0x21
     3dc:	8a a1       	ldd	r24, Y+34	; 0x22
     3de:	9b a1       	ldd	r25, Y+35	; 0x23
     3e0:	20 e0       	ldi	r18, 0x00	; 0
     3e2:	3f ef       	ldi	r19, 0xFF	; 255
     3e4:	4f e7       	ldi	r20, 0x7F	; 127
     3e6:	57 e4       	ldi	r21, 0x47	; 71
     3e8:	0e 94 23 07 	call	0xe46	; 0xe46 <__gtsf2>
     3ec:	18 16       	cp	r1, r24
     3ee:	4c f5       	brge	.+82     	; 0x442 <main+0x3ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3f0:	6c a1       	ldd	r22, Y+36	; 0x24
     3f2:	7d a1       	ldd	r23, Y+37	; 0x25
     3f4:	8e a1       	ldd	r24, Y+38	; 0x26
     3f6:	9f a1       	ldd	r25, Y+39	; 0x27
     3f8:	20 e0       	ldi	r18, 0x00	; 0
     3fa:	30 e0       	ldi	r19, 0x00	; 0
     3fc:	40 e2       	ldi	r20, 0x20	; 32
     3fe:	51 e4       	ldi	r21, 0x41	; 65
     400:	0e 94 7d 05 	call	0xafa	; 0xafa <__mulsf3>
     404:	dc 01       	movw	r26, r24
     406:	cb 01       	movw	r24, r22
     408:	bc 01       	movw	r22, r24
     40a:	cd 01       	movw	r24, r26
     40c:	0e 94 a7 03 	call	0x74e	; 0x74e <__fixunssfsi>
     410:	dc 01       	movw	r26, r24
     412:	cb 01       	movw	r24, r22
     414:	9f 8f       	std	Y+31, r25	; 0x1f
     416:	8e 8f       	std	Y+30, r24	; 0x1e
     418:	0f c0       	rjmp	.+30     	; 0x438 <main+0x3a2>
     41a:	80 e9       	ldi	r24, 0x90	; 144
     41c:	91 e0       	ldi	r25, 0x01	; 1
     41e:	9d 8f       	std	Y+29, r25	; 0x1d
     420:	8c 8f       	std	Y+28, r24	; 0x1c
     422:	8c 8d       	ldd	r24, Y+28	; 0x1c
     424:	9d 8d       	ldd	r25, Y+29	; 0x1d
     426:	01 97       	sbiw	r24, 0x01	; 1
     428:	f1 f7       	brne	.-4      	; 0x426 <main+0x390>
     42a:	9d 8f       	std	Y+29, r25	; 0x1d
     42c:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     42e:	8e 8d       	ldd	r24, Y+30	; 0x1e
     430:	9f 8d       	ldd	r25, Y+31	; 0x1f
     432:	01 97       	sbiw	r24, 0x01	; 1
     434:	9f 8f       	std	Y+31, r25	; 0x1f
     436:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     438:	8e 8d       	ldd	r24, Y+30	; 0x1e
     43a:	9f 8d       	ldd	r25, Y+31	; 0x1f
     43c:	00 97       	sbiw	r24, 0x00	; 0
     43e:	69 f7       	brne	.-38     	; 0x41a <main+0x384>
     440:	24 c0       	rjmp	.+72     	; 0x48a <main+0x3f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     442:	68 a1       	ldd	r22, Y+32	; 0x20
     444:	79 a1       	ldd	r23, Y+33	; 0x21
     446:	8a a1       	ldd	r24, Y+34	; 0x22
     448:	9b a1       	ldd	r25, Y+35	; 0x23
     44a:	0e 94 a7 03 	call	0x74e	; 0x74e <__fixunssfsi>
     44e:	dc 01       	movw	r26, r24
     450:	cb 01       	movw	r24, r22
     452:	9f 8f       	std	Y+31, r25	; 0x1f
     454:	8e 8f       	std	Y+30, r24	; 0x1e
     456:	8e 8d       	ldd	r24, Y+30	; 0x1e
     458:	9f 8d       	ldd	r25, Y+31	; 0x1f
     45a:	9b 8f       	std	Y+27, r25	; 0x1b
     45c:	8a 8f       	std	Y+26, r24	; 0x1a
     45e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     460:	9b 8d       	ldd	r25, Y+27	; 0x1b
     462:	01 97       	sbiw	r24, 0x01	; 1
     464:	f1 f7       	brne	.-4      	; 0x462 <main+0x3cc>
     466:	9b 8f       	std	Y+27, r25	; 0x1b
     468:	8a 8f       	std	Y+26, r24	; 0x1a
     46a:	0f c0       	rjmp	.+30     	; 0x48a <main+0x3f4>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     46c:	69 a5       	ldd	r22, Y+41	; 0x29
     46e:	7a a5       	ldd	r23, Y+42	; 0x2a
     470:	8b a5       	ldd	r24, Y+43	; 0x2b
     472:	9c a5       	ldd	r25, Y+44	; 0x2c
     474:	0e 94 a7 03 	call	0x74e	; 0x74e <__fixunssfsi>
     478:	dc 01       	movw	r26, r24
     47a:	cb 01       	movw	r24, r22
     47c:	88 a7       	std	Y+40, r24	; 0x28
     47e:	88 a5       	ldd	r24, Y+40	; 0x28
     480:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     482:	89 8d       	ldd	r24, Y+25	; 0x19
     484:	8a 95       	dec	r24
     486:	f1 f7       	brne	.-4      	; 0x484 <main+0x3ee>
     488:	89 8f       	std	Y+25, r24	; 0x19
_delay_us(50);
cursour(0b00001110);
     48a:	8e e0       	ldi	r24, 0x0E	; 14
     48c:	0e 94 49 03 	call	0x692	; 0x692 <cursour>
     490:	80 e0       	ldi	r24, 0x00	; 0
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	a8 e4       	ldi	r26, 0x48	; 72
     496:	b2 e4       	ldi	r27, 0x42	; 66
     498:	8d 8b       	std	Y+21, r24	; 0x15
     49a:	9e 8b       	std	Y+22, r25	; 0x16
     49c:	af 8b       	std	Y+23, r26	; 0x17
     49e:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     4a0:	6d 89       	ldd	r22, Y+21	; 0x15
     4a2:	7e 89       	ldd	r23, Y+22	; 0x16
     4a4:	8f 89       	ldd	r24, Y+23	; 0x17
     4a6:	98 8d       	ldd	r25, Y+24	; 0x18
     4a8:	2b ea       	ldi	r18, 0xAB	; 171
     4aa:	3a ea       	ldi	r19, 0xAA	; 170
     4ac:	4a ea       	ldi	r20, 0xAA	; 170
     4ae:	50 e4       	ldi	r21, 0x40	; 64
     4b0:	0e 94 7d 05 	call	0xafa	; 0xafa <__mulsf3>
     4b4:	dc 01       	movw	r26, r24
     4b6:	cb 01       	movw	r24, r22
     4b8:	89 8b       	std	Y+17, r24	; 0x11
     4ba:	9a 8b       	std	Y+18, r25	; 0x12
     4bc:	ab 8b       	std	Y+19, r26	; 0x13
     4be:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     4c0:	69 89       	ldd	r22, Y+17	; 0x11
     4c2:	7a 89       	ldd	r23, Y+18	; 0x12
     4c4:	8b 89       	ldd	r24, Y+19	; 0x13
     4c6:	9c 89       	ldd	r25, Y+20	; 0x14
     4c8:	20 e0       	ldi	r18, 0x00	; 0
     4ca:	30 e0       	ldi	r19, 0x00	; 0
     4cc:	40 e8       	ldi	r20, 0x80	; 128
     4ce:	5f e3       	ldi	r21, 0x3F	; 63
     4d0:	0e 94 83 07 	call	0xf06	; 0xf06 <__ltsf2>
     4d4:	88 23       	and	r24, r24
     4d6:	1c f4       	brge	.+6      	; 0x4de <main+0x448>
		__ticks = 1;
     4d8:	81 e0       	ldi	r24, 0x01	; 1
     4da:	88 8b       	std	Y+16, r24	; 0x10
     4dc:	91 c0       	rjmp	.+290    	; 0x600 <main+0x56a>
	else if (__tmp > 255)
     4de:	69 89       	ldd	r22, Y+17	; 0x11
     4e0:	7a 89       	ldd	r23, Y+18	; 0x12
     4e2:	8b 89       	ldd	r24, Y+19	; 0x13
     4e4:	9c 89       	ldd	r25, Y+20	; 0x14
     4e6:	20 e0       	ldi	r18, 0x00	; 0
     4e8:	30 e0       	ldi	r19, 0x00	; 0
     4ea:	4f e7       	ldi	r20, 0x7F	; 127
     4ec:	53 e4       	ldi	r21, 0x43	; 67
     4ee:	0e 94 23 07 	call	0xe46	; 0xe46 <__gtsf2>
     4f2:	18 16       	cp	r1, r24
     4f4:	0c f0       	brlt	.+2      	; 0x4f8 <main+0x462>
     4f6:	7b c0       	rjmp	.+246    	; 0x5ee <main+0x558>
	{
		_delay_ms(__us / 1000.0);
     4f8:	6d 89       	ldd	r22, Y+21	; 0x15
     4fa:	7e 89       	ldd	r23, Y+22	; 0x16
     4fc:	8f 89       	ldd	r24, Y+23	; 0x17
     4fe:	98 8d       	ldd	r25, Y+24	; 0x18
     500:	20 e0       	ldi	r18, 0x00	; 0
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	4a e7       	ldi	r20, 0x7A	; 122
     506:	54 e4       	ldi	r21, 0x44	; 68
     508:	0e 94 77 06 	call	0xcee	; 0xcee <__divsf3>
     50c:	dc 01       	movw	r26, r24
     50e:	cb 01       	movw	r24, r22
     510:	8c 87       	std	Y+12, r24	; 0x0c
     512:	9d 87       	std	Y+13, r25	; 0x0d
     514:	ae 87       	std	Y+14, r26	; 0x0e
     516:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     518:	6c 85       	ldd	r22, Y+12	; 0x0c
     51a:	7d 85       	ldd	r23, Y+13	; 0x0d
     51c:	8e 85       	ldd	r24, Y+14	; 0x0e
     51e:	9f 85       	ldd	r25, Y+15	; 0x0f
     520:	20 e0       	ldi	r18, 0x00	; 0
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	4a e7       	ldi	r20, 0x7A	; 122
     526:	55 e4       	ldi	r21, 0x45	; 69
     528:	0e 94 7d 05 	call	0xafa	; 0xafa <__mulsf3>
     52c:	dc 01       	movw	r26, r24
     52e:	cb 01       	movw	r24, r22
     530:	88 87       	std	Y+8, r24	; 0x08
     532:	99 87       	std	Y+9, r25	; 0x09
     534:	aa 87       	std	Y+10, r26	; 0x0a
     536:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     538:	68 85       	ldd	r22, Y+8	; 0x08
     53a:	79 85       	ldd	r23, Y+9	; 0x09
     53c:	8a 85       	ldd	r24, Y+10	; 0x0a
     53e:	9b 85       	ldd	r25, Y+11	; 0x0b
     540:	20 e0       	ldi	r18, 0x00	; 0
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	40 e8       	ldi	r20, 0x80	; 128
     546:	5f e3       	ldi	r21, 0x3F	; 63
     548:	0e 94 83 07 	call	0xf06	; 0xf06 <__ltsf2>
     54c:	88 23       	and	r24, r24
     54e:	2c f4       	brge	.+10     	; 0x55a <main+0x4c4>
		__ticks = 1;
     550:	81 e0       	ldi	r24, 0x01	; 1
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	9f 83       	std	Y+7, r25	; 0x07
     556:	8e 83       	std	Y+6, r24	; 0x06
     558:	3f c0       	rjmp	.+126    	; 0x5d8 <main+0x542>
	else if (__tmp > 65535)
     55a:	68 85       	ldd	r22, Y+8	; 0x08
     55c:	79 85       	ldd	r23, Y+9	; 0x09
     55e:	8a 85       	ldd	r24, Y+10	; 0x0a
     560:	9b 85       	ldd	r25, Y+11	; 0x0b
     562:	20 e0       	ldi	r18, 0x00	; 0
     564:	3f ef       	ldi	r19, 0xFF	; 255
     566:	4f e7       	ldi	r20, 0x7F	; 127
     568:	57 e4       	ldi	r21, 0x47	; 71
     56a:	0e 94 23 07 	call	0xe46	; 0xe46 <__gtsf2>
     56e:	18 16       	cp	r1, r24
     570:	4c f5       	brge	.+82     	; 0x5c4 <main+0x52e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     572:	6c 85       	ldd	r22, Y+12	; 0x0c
     574:	7d 85       	ldd	r23, Y+13	; 0x0d
     576:	8e 85       	ldd	r24, Y+14	; 0x0e
     578:	9f 85       	ldd	r25, Y+15	; 0x0f
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	40 e2       	ldi	r20, 0x20	; 32
     580:	51 e4       	ldi	r21, 0x41	; 65
     582:	0e 94 7d 05 	call	0xafa	; 0xafa <__mulsf3>
     586:	dc 01       	movw	r26, r24
     588:	cb 01       	movw	r24, r22
     58a:	bc 01       	movw	r22, r24
     58c:	cd 01       	movw	r24, r26
     58e:	0e 94 a7 03 	call	0x74e	; 0x74e <__fixunssfsi>
     592:	dc 01       	movw	r26, r24
     594:	cb 01       	movw	r24, r22
     596:	9f 83       	std	Y+7, r25	; 0x07
     598:	8e 83       	std	Y+6, r24	; 0x06
     59a:	0f c0       	rjmp	.+30     	; 0x5ba <main+0x524>
     59c:	80 e9       	ldi	r24, 0x90	; 144
     59e:	91 e0       	ldi	r25, 0x01	; 1
     5a0:	9d 83       	std	Y+5, r25	; 0x05
     5a2:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     5a4:	8c 81       	ldd	r24, Y+4	; 0x04
     5a6:	9d 81       	ldd	r25, Y+5	; 0x05
     5a8:	01 97       	sbiw	r24, 0x01	; 1
     5aa:	f1 f7       	brne	.-4      	; 0x5a8 <main+0x512>
     5ac:	9d 83       	std	Y+5, r25	; 0x05
     5ae:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5b0:	8e 81       	ldd	r24, Y+6	; 0x06
     5b2:	9f 81       	ldd	r25, Y+7	; 0x07
     5b4:	01 97       	sbiw	r24, 0x01	; 1
     5b6:	9f 83       	std	Y+7, r25	; 0x07
     5b8:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5ba:	8e 81       	ldd	r24, Y+6	; 0x06
     5bc:	9f 81       	ldd	r25, Y+7	; 0x07
     5be:	00 97       	sbiw	r24, 0x00	; 0
     5c0:	69 f7       	brne	.-38     	; 0x59c <main+0x506>
     5c2:	24 c0       	rjmp	.+72     	; 0x60c <main+0x576>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     5c4:	68 85       	ldd	r22, Y+8	; 0x08
     5c6:	79 85       	ldd	r23, Y+9	; 0x09
     5c8:	8a 85       	ldd	r24, Y+10	; 0x0a
     5ca:	9b 85       	ldd	r25, Y+11	; 0x0b
     5cc:	0e 94 a7 03 	call	0x74e	; 0x74e <__fixunssfsi>
     5d0:	dc 01       	movw	r26, r24
     5d2:	cb 01       	movw	r24, r22
     5d4:	9f 83       	std	Y+7, r25	; 0x07
     5d6:	8e 83       	std	Y+6, r24	; 0x06
     5d8:	8e 81       	ldd	r24, Y+6	; 0x06
     5da:	9f 81       	ldd	r25, Y+7	; 0x07
     5dc:	9b 83       	std	Y+3, r25	; 0x03
     5de:	8a 83       	std	Y+2, r24	; 0x02
     5e0:	8a 81       	ldd	r24, Y+2	; 0x02
     5e2:	9b 81       	ldd	r25, Y+3	; 0x03
     5e4:	01 97       	sbiw	r24, 0x01	; 1
     5e6:	f1 f7       	brne	.-4      	; 0x5e4 <main+0x54e>
     5e8:	9b 83       	std	Y+3, r25	; 0x03
     5ea:	8a 83       	std	Y+2, r24	; 0x02
     5ec:	0f c0       	rjmp	.+30     	; 0x60c <main+0x576>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     5ee:	69 89       	ldd	r22, Y+17	; 0x11
     5f0:	7a 89       	ldd	r23, Y+18	; 0x12
     5f2:	8b 89       	ldd	r24, Y+19	; 0x13
     5f4:	9c 89       	ldd	r25, Y+20	; 0x14
     5f6:	0e 94 a7 03 	call	0x74e	; 0x74e <__fixunssfsi>
     5fa:	dc 01       	movw	r26, r24
     5fc:	cb 01       	movw	r24, r22
     5fe:	88 8b       	std	Y+16, r24	; 0x10
     600:	88 89       	ldd	r24, Y+16	; 0x10
     602:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     604:	89 81       	ldd	r24, Y+1	; 0x01
     606:	8a 95       	dec	r24
     608:	f1 f7       	brne	.-4      	; 0x606 <main+0x570>
     60a:	89 83       	std	Y+1, r24	; 0x01
_delay_us(50);

text('Z');
     60c:	8a e5       	ldi	r24, 0x5A	; 90
     60e:	0e 94 78 03 	call	0x6f0	; 0x6f0 <text>
text(0x42);
     612:	82 e4       	ldi	r24, 0x42	; 66
     614:	0e 94 78 03 	call	0x6f0	; 0x6f0 <text>
text(0x43);
     618:	83 e4       	ldi	r24, 0x43	; 67
     61a:	0e 94 78 03 	call	0x6f0	; 0x6f0 <text>
     61e:	ff cf       	rjmp	.-2      	; 0x61e <main+0x588>

00000620 <busy_check>:
//text(0x44);
    while(1)
    {
    }
}
void busy_check(){
     620:	df 93       	push	r29
     622:	cf 93       	push	r28
     624:	cd b7       	in	r28, 0x3d	; 61
     626:	de b7       	in	r29, 0x3e	; 62
ddr_pin=0;
     628:	ea e2       	ldi	r30, 0x2A	; 42
     62a:	f0 e0       	ldi	r31, 0x00	; 0
     62c:	10 82       	st	Z, r1
LCD_PIN |=1<<READ_WRITE;
     62e:	ab e2       	ldi	r26, 0x2B	; 43
     630:	b0 e0       	ldi	r27, 0x00	; 0
     632:	eb e2       	ldi	r30, 0x2B	; 43
     634:	f0 e0       	ldi	r31, 0x00	; 0
     636:	80 81       	ld	r24, Z
     638:	84 60       	ori	r24, 0x04	; 4
     63a:	8c 93       	st	X, r24
LCD_PIN &=~ 1<<REGIS_SELECT;
     63c:	ab e2       	ldi	r26, 0x2B	; 43
     63e:	b0 e0       	ldi	r27, 0x00	; 0
     640:	eb e2       	ldi	r30, 0x2B	; 43
     642:	f0 e0       	ldi	r31, 0x00	; 0
     644:	80 81       	ld	r24, Z
     646:	80 7f       	andi	r24, 0xF0	; 240
     648:	8c 93       	st	X, r24
     64a:	02 c0       	rjmp	.+4      	; 0x650 <busy_check+0x30>
while(LCD_PIN >=0x80)
{
    on_off();
     64c:	0e 94 34 03 	call	0x668	; 0x668 <on_off>
}
void busy_check(){
ddr_pin=0;
LCD_PIN |=1<<READ_WRITE;
LCD_PIN &=~ 1<<REGIS_SELECT;
while(LCD_PIN >=0x80)
     650:	eb e2       	ldi	r30, 0x2B	; 43
     652:	f0 e0       	ldi	r31, 0x00	; 0
     654:	80 81       	ld	r24, Z
     656:	88 23       	and	r24, r24
     658:	cc f3       	brlt	.-14     	; 0x64c <busy_check+0x2c>
{
    on_off();
}
ddr_pin=0xFF;
     65a:	ea e2       	ldi	r30, 0x2A	; 42
     65c:	f0 e0       	ldi	r31, 0x00	; 0
     65e:	8f ef       	ldi	r24, 0xFF	; 255
     660:	80 83       	st	Z, r24
}
     662:	cf 91       	pop	r28
     664:	df 91       	pop	r29
     666:	08 95       	ret

00000668 <on_off>:

void on_off(){
     668:	df 93       	push	r29
     66a:	cf 93       	push	r28
     66c:	cd b7       	in	r28, 0x3d	; 61
     66e:	de b7       	in	r29, 0x3e	; 62
LCD_CONTROL |=1<<ENABLE;
     670:	a5 e2       	ldi	r26, 0x25	; 37
     672:	b0 e0       	ldi	r27, 0x00	; 0
     674:	e5 e2       	ldi	r30, 0x25	; 37
     676:	f0 e0       	ldi	r31, 0x00	; 0
     678:	80 81       	ld	r24, Z
     67a:	82 60       	ori	r24, 0x02	; 2
     67c:	8c 93       	st	X, r24
//asm volatile ("nop");
//asm volatile ("nop");
LCD_CONTROL &=~1<<ENABLE;
     67e:	a5 e2       	ldi	r26, 0x25	; 37
     680:	b0 e0       	ldi	r27, 0x00	; 0
     682:	e5 e2       	ldi	r30, 0x25	; 37
     684:	f0 e0       	ldi	r31, 0x00	; 0
     686:	80 81       	ld	r24, Z
     688:	8c 7f       	andi	r24, 0xFC	; 252
     68a:	8c 93       	st	X, r24
}
     68c:	cf 91       	pop	r28
     68e:	df 91       	pop	r29
     690:	08 95       	ret

00000692 <cursour>:

void cursour(unsigned char commands)
{
     692:	df 93       	push	r29
     694:	cf 93       	push	r28
     696:	0f 92       	push	r0
     698:	cd b7       	in	r28, 0x3d	; 61
     69a:	de b7       	in	r29, 0x3e	; 62
     69c:	89 83       	std	Y+1, r24	; 0x01
busy_check();
     69e:	0e 94 10 03 	call	0x620	; 0x620 <busy_check>
LCD_CONTROL |=1<<ENABLE;
     6a2:	a5 e2       	ldi	r26, 0x25	; 37
     6a4:	b0 e0       	ldi	r27, 0x00	; 0
     6a6:	e5 e2       	ldi	r30, 0x25	; 37
     6a8:	f0 e0       	ldi	r31, 0x00	; 0
     6aa:	80 81       	ld	r24, Z
     6ac:	82 60       	ori	r24, 0x02	; 2
     6ae:	8c 93       	st	X, r24
LCD_PIN =commands;        //LCD_CONTROL IS PORTD
     6b0:	eb e2       	ldi	r30, 0x2B	; 43
     6b2:	f0 e0       	ldi	r31, 0x00	; 0
     6b4:	89 81       	ldd	r24, Y+1	; 0x01
     6b6:	80 83       	st	Z, r24
LCD_CONTROL &=~(1<<READ_WRITE);
     6b8:	a5 e2       	ldi	r26, 0x25	; 37
     6ba:	b0 e0       	ldi	r27, 0x00	; 0
     6bc:	e5 e2       	ldi	r30, 0x25	; 37
     6be:	f0 e0       	ldi	r31, 0x00	; 0
     6c0:	80 81       	ld	r24, Z
     6c2:	8b 7f       	andi	r24, 0xFB	; 251
     6c4:	8c 93       	st	X, r24
LCD_CONTROL &=~(1<<REGIS_SELECT);
     6c6:	a5 e2       	ldi	r26, 0x25	; 37
     6c8:	b0 e0       	ldi	r27, 0x00	; 0
     6ca:	e5 e2       	ldi	r30, 0x25	; 37
     6cc:	f0 e0       	ldi	r31, 0x00	; 0
     6ce:	80 81       	ld	r24, Z
     6d0:	87 7f       	andi	r24, 0xF7	; 247
     6d2:	8c 93       	st	X, r24
//on_off();
LCD_CONTROL &=~1<<ENABLE;
     6d4:	a5 e2       	ldi	r26, 0x25	; 37
     6d6:	b0 e0       	ldi	r27, 0x00	; 0
     6d8:	e5 e2       	ldi	r30, 0x25	; 37
     6da:	f0 e0       	ldi	r31, 0x00	; 0
     6dc:	80 81       	ld	r24, Z
     6de:	8c 7f       	andi	r24, 0xFC	; 252
     6e0:	8c 93       	st	X, r24
LCD_PIN=0;
     6e2:	eb e2       	ldi	r30, 0x2B	; 43
     6e4:	f0 e0       	ldi	r31, 0x00	; 0
     6e6:	10 82       	st	Z, r1

}
     6e8:	0f 90       	pop	r0
     6ea:	cf 91       	pop	r28
     6ec:	df 91       	pop	r29
     6ee:	08 95       	ret

000006f0 <text>:

void text(unsigned char commands)
{
     6f0:	df 93       	push	r29
     6f2:	cf 93       	push	r28
     6f4:	0f 92       	push	r0
     6f6:	cd b7       	in	r28, 0x3d	; 61
     6f8:	de b7       	in	r29, 0x3e	; 62
     6fa:	89 83       	std	Y+1, r24	; 0x01
busy_check();
     6fc:	0e 94 10 03 	call	0x620	; 0x620 <busy_check>
LCD_CONTROL |=1<<ENABLE;
     700:	a5 e2       	ldi	r26, 0x25	; 37
     702:	b0 e0       	ldi	r27, 0x00	; 0
     704:	e5 e2       	ldi	r30, 0x25	; 37
     706:	f0 e0       	ldi	r31, 0x00	; 0
     708:	80 81       	ld	r24, Z
     70a:	82 60       	ori	r24, 0x02	; 2
     70c:	8c 93       	st	X, r24
LCD_PIN =commands;
     70e:	eb e2       	ldi	r30, 0x2B	; 43
     710:	f0 e0       	ldi	r31, 0x00	; 0
     712:	89 81       	ldd	r24, Y+1	; 0x01
     714:	80 83       	st	Z, r24
LCD_CONTROL &=~(1<<READ_WRITE);
     716:	a5 e2       	ldi	r26, 0x25	; 37
     718:	b0 e0       	ldi	r27, 0x00	; 0
     71a:	e5 e2       	ldi	r30, 0x25	; 37
     71c:	f0 e0       	ldi	r31, 0x00	; 0
     71e:	80 81       	ld	r24, Z
     720:	8b 7f       	andi	r24, 0xFB	; 251
     722:	8c 93       	st	X, r24
LCD_CONTROL |=1<<REGIS_SELECT;
     724:	a5 e2       	ldi	r26, 0x25	; 37
     726:	b0 e0       	ldi	r27, 0x00	; 0
     728:	e5 e2       	ldi	r30, 0x25	; 37
     72a:	f0 e0       	ldi	r31, 0x00	; 0
     72c:	80 81       	ld	r24, Z
     72e:	88 60       	ori	r24, 0x08	; 8
     730:	8c 93       	st	X, r24
//on_off();
LCD_CONTROL &=~1<<ENABLE;
     732:	a5 e2       	ldi	r26, 0x25	; 37
     734:	b0 e0       	ldi	r27, 0x00	; 0
     736:	e5 e2       	ldi	r30, 0x25	; 37
     738:	f0 e0       	ldi	r31, 0x00	; 0
     73a:	80 81       	ld	r24, Z
     73c:	8c 7f       	andi	r24, 0xFC	; 252
     73e:	8c 93       	st	X, r24
LCD_PIN=0;
     740:	eb e2       	ldi	r30, 0x2B	; 43
     742:	f0 e0       	ldi	r31, 0x00	; 0
     744:	10 82       	st	Z, r1
}
     746:	0f 90       	pop	r0
     748:	cf 91       	pop	r28
     74a:	df 91       	pop	r29
     74c:	08 95       	ret

0000074e <__fixunssfsi>:
     74e:	ef 92       	push	r14
     750:	ff 92       	push	r15
     752:	0f 93       	push	r16
     754:	1f 93       	push	r17
     756:	7b 01       	movw	r14, r22
     758:	8c 01       	movw	r16, r24
     75a:	20 e0       	ldi	r18, 0x00	; 0
     75c:	30 e0       	ldi	r19, 0x00	; 0
     75e:	40 e0       	ldi	r20, 0x00	; 0
     760:	5f e4       	ldi	r21, 0x4F	; 79
     762:	0e 94 53 07 	call	0xea6	; 0xea6 <__gesf2>
     766:	88 23       	and	r24, r24
     768:	8c f0       	brlt	.+34     	; 0x78c <__fixunssfsi+0x3e>
     76a:	c8 01       	movw	r24, r16
     76c:	b7 01       	movw	r22, r14
     76e:	20 e0       	ldi	r18, 0x00	; 0
     770:	30 e0       	ldi	r19, 0x00	; 0
     772:	40 e0       	ldi	r20, 0x00	; 0
     774:	5f e4       	ldi	r21, 0x4F	; 79
     776:	0e 94 1f 05 	call	0xa3e	; 0xa3e <__subsf3>
     77a:	0e 94 b3 07 	call	0xf66	; 0xf66 <__fixsfsi>
     77e:	9b 01       	movw	r18, r22
     780:	ac 01       	movw	r20, r24
     782:	20 50       	subi	r18, 0x00	; 0
     784:	30 40       	sbci	r19, 0x00	; 0
     786:	40 40       	sbci	r20, 0x00	; 0
     788:	50 48       	sbci	r21, 0x80	; 128
     78a:	06 c0       	rjmp	.+12     	; 0x798 <__fixunssfsi+0x4a>
     78c:	c8 01       	movw	r24, r16
     78e:	b7 01       	movw	r22, r14
     790:	0e 94 b3 07 	call	0xf66	; 0xf66 <__fixsfsi>
     794:	9b 01       	movw	r18, r22
     796:	ac 01       	movw	r20, r24
     798:	b9 01       	movw	r22, r18
     79a:	ca 01       	movw	r24, r20
     79c:	1f 91       	pop	r17
     79e:	0f 91       	pop	r16
     7a0:	ff 90       	pop	r15
     7a2:	ef 90       	pop	r14
     7a4:	08 95       	ret

000007a6 <_fpadd_parts>:
     7a6:	a0 e0       	ldi	r26, 0x00	; 0
     7a8:	b0 e0       	ldi	r27, 0x00	; 0
     7aa:	e9 ed       	ldi	r30, 0xD9	; 217
     7ac:	f3 e0       	ldi	r31, 0x03	; 3
     7ae:	0c 94 ad 09 	jmp	0x135a	; 0x135a <__prologue_saves__>
     7b2:	dc 01       	movw	r26, r24
     7b4:	2b 01       	movw	r4, r22
     7b6:	fa 01       	movw	r30, r20
     7b8:	9c 91       	ld	r25, X
     7ba:	92 30       	cpi	r25, 0x02	; 2
     7bc:	08 f4       	brcc	.+2      	; 0x7c0 <_fpadd_parts+0x1a>
     7be:	39 c1       	rjmp	.+626    	; 0xa32 <__stack+0x133>
     7c0:	eb 01       	movw	r28, r22
     7c2:	88 81       	ld	r24, Y
     7c4:	82 30       	cpi	r24, 0x02	; 2
     7c6:	08 f4       	brcc	.+2      	; 0x7ca <_fpadd_parts+0x24>
     7c8:	33 c1       	rjmp	.+614    	; 0xa30 <__stack+0x131>
     7ca:	94 30       	cpi	r25, 0x04	; 4
     7cc:	69 f4       	brne	.+26     	; 0x7e8 <_fpadd_parts+0x42>
     7ce:	84 30       	cpi	r24, 0x04	; 4
     7d0:	09 f0       	breq	.+2      	; 0x7d4 <_fpadd_parts+0x2e>
     7d2:	2f c1       	rjmp	.+606    	; 0xa32 <__stack+0x133>
     7d4:	11 96       	adiw	r26, 0x01	; 1
     7d6:	9c 91       	ld	r25, X
     7d8:	11 97       	sbiw	r26, 0x01	; 1
     7da:	89 81       	ldd	r24, Y+1	; 0x01
     7dc:	98 17       	cp	r25, r24
     7de:	09 f4       	brne	.+2      	; 0x7e2 <_fpadd_parts+0x3c>
     7e0:	28 c1       	rjmp	.+592    	; 0xa32 <__stack+0x133>
     7e2:	a0 e0       	ldi	r26, 0x00	; 0
     7e4:	b1 e0       	ldi	r27, 0x01	; 1
     7e6:	25 c1       	rjmp	.+586    	; 0xa32 <__stack+0x133>
     7e8:	84 30       	cpi	r24, 0x04	; 4
     7ea:	09 f4       	brne	.+2      	; 0x7ee <_fpadd_parts+0x48>
     7ec:	21 c1       	rjmp	.+578    	; 0xa30 <__stack+0x131>
     7ee:	82 30       	cpi	r24, 0x02	; 2
     7f0:	a9 f4       	brne	.+42     	; 0x81c <_fpadd_parts+0x76>
     7f2:	92 30       	cpi	r25, 0x02	; 2
     7f4:	09 f0       	breq	.+2      	; 0x7f8 <_fpadd_parts+0x52>
     7f6:	1d c1       	rjmp	.+570    	; 0xa32 <__stack+0x133>
     7f8:	9a 01       	movw	r18, r20
     7fa:	ad 01       	movw	r20, r26
     7fc:	88 e0       	ldi	r24, 0x08	; 8
     7fe:	ea 01       	movw	r28, r20
     800:	09 90       	ld	r0, Y+
     802:	ae 01       	movw	r20, r28
     804:	e9 01       	movw	r28, r18
     806:	09 92       	st	Y+, r0
     808:	9e 01       	movw	r18, r28
     80a:	81 50       	subi	r24, 0x01	; 1
     80c:	c1 f7       	brne	.-16     	; 0x7fe <_fpadd_parts+0x58>
     80e:	e2 01       	movw	r28, r4
     810:	89 81       	ldd	r24, Y+1	; 0x01
     812:	11 96       	adiw	r26, 0x01	; 1
     814:	9c 91       	ld	r25, X
     816:	89 23       	and	r24, r25
     818:	81 83       	std	Z+1, r24	; 0x01
     81a:	08 c1       	rjmp	.+528    	; 0xa2c <__stack+0x12d>
     81c:	92 30       	cpi	r25, 0x02	; 2
     81e:	09 f4       	brne	.+2      	; 0x822 <_fpadd_parts+0x7c>
     820:	07 c1       	rjmp	.+526    	; 0xa30 <__stack+0x131>
     822:	12 96       	adiw	r26, 0x02	; 2
     824:	2d 90       	ld	r2, X+
     826:	3c 90       	ld	r3, X
     828:	13 97       	sbiw	r26, 0x03	; 3
     82a:	eb 01       	movw	r28, r22
     82c:	8a 81       	ldd	r24, Y+2	; 0x02
     82e:	9b 81       	ldd	r25, Y+3	; 0x03
     830:	14 96       	adiw	r26, 0x04	; 4
     832:	ad 90       	ld	r10, X+
     834:	bd 90       	ld	r11, X+
     836:	cd 90       	ld	r12, X+
     838:	dc 90       	ld	r13, X
     83a:	17 97       	sbiw	r26, 0x07	; 7
     83c:	ec 80       	ldd	r14, Y+4	; 0x04
     83e:	fd 80       	ldd	r15, Y+5	; 0x05
     840:	0e 81       	ldd	r16, Y+6	; 0x06
     842:	1f 81       	ldd	r17, Y+7	; 0x07
     844:	91 01       	movw	r18, r2
     846:	28 1b       	sub	r18, r24
     848:	39 0b       	sbc	r19, r25
     84a:	b9 01       	movw	r22, r18
     84c:	37 ff       	sbrs	r19, 7
     84e:	04 c0       	rjmp	.+8      	; 0x858 <_fpadd_parts+0xb2>
     850:	66 27       	eor	r22, r22
     852:	77 27       	eor	r23, r23
     854:	62 1b       	sub	r22, r18
     856:	73 0b       	sbc	r23, r19
     858:	60 32       	cpi	r22, 0x20	; 32
     85a:	71 05       	cpc	r23, r1
     85c:	0c f0       	brlt	.+2      	; 0x860 <_fpadd_parts+0xba>
     85e:	61 c0       	rjmp	.+194    	; 0x922 <__stack+0x23>
     860:	12 16       	cp	r1, r18
     862:	13 06       	cpc	r1, r19
     864:	6c f5       	brge	.+90     	; 0x8c0 <_fpadd_parts+0x11a>
     866:	37 01       	movw	r6, r14
     868:	48 01       	movw	r8, r16
     86a:	06 2e       	mov	r0, r22
     86c:	04 c0       	rjmp	.+8      	; 0x876 <_fpadd_parts+0xd0>
     86e:	96 94       	lsr	r9
     870:	87 94       	ror	r8
     872:	77 94       	ror	r7
     874:	67 94       	ror	r6
     876:	0a 94       	dec	r0
     878:	d2 f7       	brpl	.-12     	; 0x86e <_fpadd_parts+0xc8>
     87a:	21 e0       	ldi	r18, 0x01	; 1
     87c:	30 e0       	ldi	r19, 0x00	; 0
     87e:	40 e0       	ldi	r20, 0x00	; 0
     880:	50 e0       	ldi	r21, 0x00	; 0
     882:	04 c0       	rjmp	.+8      	; 0x88c <_fpadd_parts+0xe6>
     884:	22 0f       	add	r18, r18
     886:	33 1f       	adc	r19, r19
     888:	44 1f       	adc	r20, r20
     88a:	55 1f       	adc	r21, r21
     88c:	6a 95       	dec	r22
     88e:	d2 f7       	brpl	.-12     	; 0x884 <_fpadd_parts+0xde>
     890:	21 50       	subi	r18, 0x01	; 1
     892:	30 40       	sbci	r19, 0x00	; 0
     894:	40 40       	sbci	r20, 0x00	; 0
     896:	50 40       	sbci	r21, 0x00	; 0
     898:	2e 21       	and	r18, r14
     89a:	3f 21       	and	r19, r15
     89c:	40 23       	and	r20, r16
     89e:	51 23       	and	r21, r17
     8a0:	21 15       	cp	r18, r1
     8a2:	31 05       	cpc	r19, r1
     8a4:	41 05       	cpc	r20, r1
     8a6:	51 05       	cpc	r21, r1
     8a8:	21 f0       	breq	.+8      	; 0x8b2 <_fpadd_parts+0x10c>
     8aa:	21 e0       	ldi	r18, 0x01	; 1
     8ac:	30 e0       	ldi	r19, 0x00	; 0
     8ae:	40 e0       	ldi	r20, 0x00	; 0
     8b0:	50 e0       	ldi	r21, 0x00	; 0
     8b2:	79 01       	movw	r14, r18
     8b4:	8a 01       	movw	r16, r20
     8b6:	e6 28       	or	r14, r6
     8b8:	f7 28       	or	r15, r7
     8ba:	08 29       	or	r16, r8
     8bc:	19 29       	or	r17, r9
     8be:	3c c0       	rjmp	.+120    	; 0x938 <__stack+0x39>
     8c0:	23 2b       	or	r18, r19
     8c2:	d1 f1       	breq	.+116    	; 0x938 <__stack+0x39>
     8c4:	26 0e       	add	r2, r22
     8c6:	37 1e       	adc	r3, r23
     8c8:	35 01       	movw	r6, r10
     8ca:	46 01       	movw	r8, r12
     8cc:	06 2e       	mov	r0, r22
     8ce:	04 c0       	rjmp	.+8      	; 0x8d8 <_fpadd_parts+0x132>
     8d0:	96 94       	lsr	r9
     8d2:	87 94       	ror	r8
     8d4:	77 94       	ror	r7
     8d6:	67 94       	ror	r6
     8d8:	0a 94       	dec	r0
     8da:	d2 f7       	brpl	.-12     	; 0x8d0 <_fpadd_parts+0x12a>
     8dc:	21 e0       	ldi	r18, 0x01	; 1
     8de:	30 e0       	ldi	r19, 0x00	; 0
     8e0:	40 e0       	ldi	r20, 0x00	; 0
     8e2:	50 e0       	ldi	r21, 0x00	; 0
     8e4:	04 c0       	rjmp	.+8      	; 0x8ee <_fpadd_parts+0x148>
     8e6:	22 0f       	add	r18, r18
     8e8:	33 1f       	adc	r19, r19
     8ea:	44 1f       	adc	r20, r20
     8ec:	55 1f       	adc	r21, r21
     8ee:	6a 95       	dec	r22
     8f0:	d2 f7       	brpl	.-12     	; 0x8e6 <_fpadd_parts+0x140>
     8f2:	21 50       	subi	r18, 0x01	; 1
     8f4:	30 40       	sbci	r19, 0x00	; 0
     8f6:	40 40       	sbci	r20, 0x00	; 0
     8f8:	50 40       	sbci	r21, 0x00	; 0
     8fa:	2a 21       	and	r18, r10
     8fc:	3b 21       	and	r19, r11
     8fe:	4c 21       	and	r20, r12
     900:	5d 21       	and	r21, r13
     902:	21 15       	cp	r18, r1
     904:	31 05       	cpc	r19, r1
     906:	41 05       	cpc	r20, r1
     908:	51 05       	cpc	r21, r1
     90a:	21 f0       	breq	.+8      	; 0x914 <__stack+0x15>
     90c:	21 e0       	ldi	r18, 0x01	; 1
     90e:	30 e0       	ldi	r19, 0x00	; 0
     910:	40 e0       	ldi	r20, 0x00	; 0
     912:	50 e0       	ldi	r21, 0x00	; 0
     914:	59 01       	movw	r10, r18
     916:	6a 01       	movw	r12, r20
     918:	a6 28       	or	r10, r6
     91a:	b7 28       	or	r11, r7
     91c:	c8 28       	or	r12, r8
     91e:	d9 28       	or	r13, r9
     920:	0b c0       	rjmp	.+22     	; 0x938 <__stack+0x39>
     922:	82 15       	cp	r24, r2
     924:	93 05       	cpc	r25, r3
     926:	2c f0       	brlt	.+10     	; 0x932 <__stack+0x33>
     928:	1c 01       	movw	r2, r24
     92a:	aa 24       	eor	r10, r10
     92c:	bb 24       	eor	r11, r11
     92e:	65 01       	movw	r12, r10
     930:	03 c0       	rjmp	.+6      	; 0x938 <__stack+0x39>
     932:	ee 24       	eor	r14, r14
     934:	ff 24       	eor	r15, r15
     936:	87 01       	movw	r16, r14
     938:	11 96       	adiw	r26, 0x01	; 1
     93a:	9c 91       	ld	r25, X
     93c:	d2 01       	movw	r26, r4
     93e:	11 96       	adiw	r26, 0x01	; 1
     940:	8c 91       	ld	r24, X
     942:	98 17       	cp	r25, r24
     944:	09 f4       	brne	.+2      	; 0x948 <__stack+0x49>
     946:	45 c0       	rjmp	.+138    	; 0x9d2 <__stack+0xd3>
     948:	99 23       	and	r25, r25
     94a:	39 f0       	breq	.+14     	; 0x95a <__stack+0x5b>
     94c:	a8 01       	movw	r20, r16
     94e:	97 01       	movw	r18, r14
     950:	2a 19       	sub	r18, r10
     952:	3b 09       	sbc	r19, r11
     954:	4c 09       	sbc	r20, r12
     956:	5d 09       	sbc	r21, r13
     958:	06 c0       	rjmp	.+12     	; 0x966 <__stack+0x67>
     95a:	a6 01       	movw	r20, r12
     95c:	95 01       	movw	r18, r10
     95e:	2e 19       	sub	r18, r14
     960:	3f 09       	sbc	r19, r15
     962:	40 0b       	sbc	r20, r16
     964:	51 0b       	sbc	r21, r17
     966:	57 fd       	sbrc	r21, 7
     968:	08 c0       	rjmp	.+16     	; 0x97a <__stack+0x7b>
     96a:	11 82       	std	Z+1, r1	; 0x01
     96c:	33 82       	std	Z+3, r3	; 0x03
     96e:	22 82       	std	Z+2, r2	; 0x02
     970:	24 83       	std	Z+4, r18	; 0x04
     972:	35 83       	std	Z+5, r19	; 0x05
     974:	46 83       	std	Z+6, r20	; 0x06
     976:	57 83       	std	Z+7, r21	; 0x07
     978:	1d c0       	rjmp	.+58     	; 0x9b4 <__stack+0xb5>
     97a:	81 e0       	ldi	r24, 0x01	; 1
     97c:	81 83       	std	Z+1, r24	; 0x01
     97e:	33 82       	std	Z+3, r3	; 0x03
     980:	22 82       	std	Z+2, r2	; 0x02
     982:	88 27       	eor	r24, r24
     984:	99 27       	eor	r25, r25
     986:	dc 01       	movw	r26, r24
     988:	82 1b       	sub	r24, r18
     98a:	93 0b       	sbc	r25, r19
     98c:	a4 0b       	sbc	r26, r20
     98e:	b5 0b       	sbc	r27, r21
     990:	84 83       	std	Z+4, r24	; 0x04
     992:	95 83       	std	Z+5, r25	; 0x05
     994:	a6 83       	std	Z+6, r26	; 0x06
     996:	b7 83       	std	Z+7, r27	; 0x07
     998:	0d c0       	rjmp	.+26     	; 0x9b4 <__stack+0xb5>
     99a:	22 0f       	add	r18, r18
     99c:	33 1f       	adc	r19, r19
     99e:	44 1f       	adc	r20, r20
     9a0:	55 1f       	adc	r21, r21
     9a2:	24 83       	std	Z+4, r18	; 0x04
     9a4:	35 83       	std	Z+5, r19	; 0x05
     9a6:	46 83       	std	Z+6, r20	; 0x06
     9a8:	57 83       	std	Z+7, r21	; 0x07
     9aa:	82 81       	ldd	r24, Z+2	; 0x02
     9ac:	93 81       	ldd	r25, Z+3	; 0x03
     9ae:	01 97       	sbiw	r24, 0x01	; 1
     9b0:	93 83       	std	Z+3, r25	; 0x03
     9b2:	82 83       	std	Z+2, r24	; 0x02
     9b4:	24 81       	ldd	r18, Z+4	; 0x04
     9b6:	35 81       	ldd	r19, Z+5	; 0x05
     9b8:	46 81       	ldd	r20, Z+6	; 0x06
     9ba:	57 81       	ldd	r21, Z+7	; 0x07
     9bc:	da 01       	movw	r26, r20
     9be:	c9 01       	movw	r24, r18
     9c0:	01 97       	sbiw	r24, 0x01	; 1
     9c2:	a1 09       	sbc	r26, r1
     9c4:	b1 09       	sbc	r27, r1
     9c6:	8f 5f       	subi	r24, 0xFF	; 255
     9c8:	9f 4f       	sbci	r25, 0xFF	; 255
     9ca:	af 4f       	sbci	r26, 0xFF	; 255
     9cc:	bf 43       	sbci	r27, 0x3F	; 63
     9ce:	28 f3       	brcs	.-54     	; 0x99a <__stack+0x9b>
     9d0:	0b c0       	rjmp	.+22     	; 0x9e8 <__stack+0xe9>
     9d2:	91 83       	std	Z+1, r25	; 0x01
     9d4:	33 82       	std	Z+3, r3	; 0x03
     9d6:	22 82       	std	Z+2, r2	; 0x02
     9d8:	ea 0c       	add	r14, r10
     9da:	fb 1c       	adc	r15, r11
     9dc:	0c 1d       	adc	r16, r12
     9de:	1d 1d       	adc	r17, r13
     9e0:	e4 82       	std	Z+4, r14	; 0x04
     9e2:	f5 82       	std	Z+5, r15	; 0x05
     9e4:	06 83       	std	Z+6, r16	; 0x06
     9e6:	17 83       	std	Z+7, r17	; 0x07
     9e8:	83 e0       	ldi	r24, 0x03	; 3
     9ea:	80 83       	st	Z, r24
     9ec:	24 81       	ldd	r18, Z+4	; 0x04
     9ee:	35 81       	ldd	r19, Z+5	; 0x05
     9f0:	46 81       	ldd	r20, Z+6	; 0x06
     9f2:	57 81       	ldd	r21, Z+7	; 0x07
     9f4:	57 ff       	sbrs	r21, 7
     9f6:	1a c0       	rjmp	.+52     	; 0xa2c <__stack+0x12d>
     9f8:	c9 01       	movw	r24, r18
     9fa:	aa 27       	eor	r26, r26
     9fc:	97 fd       	sbrc	r25, 7
     9fe:	a0 95       	com	r26
     a00:	ba 2f       	mov	r27, r26
     a02:	81 70       	andi	r24, 0x01	; 1
     a04:	90 70       	andi	r25, 0x00	; 0
     a06:	a0 70       	andi	r26, 0x00	; 0
     a08:	b0 70       	andi	r27, 0x00	; 0
     a0a:	56 95       	lsr	r21
     a0c:	47 95       	ror	r20
     a0e:	37 95       	ror	r19
     a10:	27 95       	ror	r18
     a12:	82 2b       	or	r24, r18
     a14:	93 2b       	or	r25, r19
     a16:	a4 2b       	or	r26, r20
     a18:	b5 2b       	or	r27, r21
     a1a:	84 83       	std	Z+4, r24	; 0x04
     a1c:	95 83       	std	Z+5, r25	; 0x05
     a1e:	a6 83       	std	Z+6, r26	; 0x06
     a20:	b7 83       	std	Z+7, r27	; 0x07
     a22:	82 81       	ldd	r24, Z+2	; 0x02
     a24:	93 81       	ldd	r25, Z+3	; 0x03
     a26:	01 96       	adiw	r24, 0x01	; 1
     a28:	93 83       	std	Z+3, r25	; 0x03
     a2a:	82 83       	std	Z+2, r24	; 0x02
     a2c:	df 01       	movw	r26, r30
     a2e:	01 c0       	rjmp	.+2      	; 0xa32 <__stack+0x133>
     a30:	d2 01       	movw	r26, r4
     a32:	cd 01       	movw	r24, r26
     a34:	cd b7       	in	r28, 0x3d	; 61
     a36:	de b7       	in	r29, 0x3e	; 62
     a38:	e2 e1       	ldi	r30, 0x12	; 18
     a3a:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__epilogue_restores__>

00000a3e <__subsf3>:
     a3e:	a0 e2       	ldi	r26, 0x20	; 32
     a40:	b0 e0       	ldi	r27, 0x00	; 0
     a42:	e5 e2       	ldi	r30, 0x25	; 37
     a44:	f5 e0       	ldi	r31, 0x05	; 5
     a46:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <__prologue_saves__+0x18>
     a4a:	69 83       	std	Y+1, r22	; 0x01
     a4c:	7a 83       	std	Y+2, r23	; 0x02
     a4e:	8b 83       	std	Y+3, r24	; 0x03
     a50:	9c 83       	std	Y+4, r25	; 0x04
     a52:	2d 83       	std	Y+5, r18	; 0x05
     a54:	3e 83       	std	Y+6, r19	; 0x06
     a56:	4f 83       	std	Y+7, r20	; 0x07
     a58:	58 87       	std	Y+8, r21	; 0x08
     a5a:	e9 e0       	ldi	r30, 0x09	; 9
     a5c:	ee 2e       	mov	r14, r30
     a5e:	f1 2c       	mov	r15, r1
     a60:	ec 0e       	add	r14, r28
     a62:	fd 1e       	adc	r15, r29
     a64:	ce 01       	movw	r24, r28
     a66:	01 96       	adiw	r24, 0x01	; 1
     a68:	b7 01       	movw	r22, r14
     a6a:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     a6e:	8e 01       	movw	r16, r28
     a70:	0f 5e       	subi	r16, 0xEF	; 239
     a72:	1f 4f       	sbci	r17, 0xFF	; 255
     a74:	ce 01       	movw	r24, r28
     a76:	05 96       	adiw	r24, 0x05	; 5
     a78:	b8 01       	movw	r22, r16
     a7a:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     a7e:	8a 89       	ldd	r24, Y+18	; 0x12
     a80:	91 e0       	ldi	r25, 0x01	; 1
     a82:	89 27       	eor	r24, r25
     a84:	8a 8b       	std	Y+18, r24	; 0x12
     a86:	c7 01       	movw	r24, r14
     a88:	b8 01       	movw	r22, r16
     a8a:	ae 01       	movw	r20, r28
     a8c:	47 5e       	subi	r20, 0xE7	; 231
     a8e:	5f 4f       	sbci	r21, 0xFF	; 255
     a90:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <_fpadd_parts>
     a94:	0e 94 07 08 	call	0x100e	; 0x100e <__pack_f>
     a98:	a0 96       	adiw	r28, 0x20	; 32
     a9a:	e6 e0       	ldi	r30, 0x06	; 6
     a9c:	0c 94 d5 09 	jmp	0x13aa	; 0x13aa <__epilogue_restores__+0x18>

00000aa0 <__addsf3>:
     aa0:	a0 e2       	ldi	r26, 0x20	; 32
     aa2:	b0 e0       	ldi	r27, 0x00	; 0
     aa4:	e6 e5       	ldi	r30, 0x56	; 86
     aa6:	f5 e0       	ldi	r31, 0x05	; 5
     aa8:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <__prologue_saves__+0x18>
     aac:	69 83       	std	Y+1, r22	; 0x01
     aae:	7a 83       	std	Y+2, r23	; 0x02
     ab0:	8b 83       	std	Y+3, r24	; 0x03
     ab2:	9c 83       	std	Y+4, r25	; 0x04
     ab4:	2d 83       	std	Y+5, r18	; 0x05
     ab6:	3e 83       	std	Y+6, r19	; 0x06
     ab8:	4f 83       	std	Y+7, r20	; 0x07
     aba:	58 87       	std	Y+8, r21	; 0x08
     abc:	f9 e0       	ldi	r31, 0x09	; 9
     abe:	ef 2e       	mov	r14, r31
     ac0:	f1 2c       	mov	r15, r1
     ac2:	ec 0e       	add	r14, r28
     ac4:	fd 1e       	adc	r15, r29
     ac6:	ce 01       	movw	r24, r28
     ac8:	01 96       	adiw	r24, 0x01	; 1
     aca:	b7 01       	movw	r22, r14
     acc:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     ad0:	8e 01       	movw	r16, r28
     ad2:	0f 5e       	subi	r16, 0xEF	; 239
     ad4:	1f 4f       	sbci	r17, 0xFF	; 255
     ad6:	ce 01       	movw	r24, r28
     ad8:	05 96       	adiw	r24, 0x05	; 5
     ada:	b8 01       	movw	r22, r16
     adc:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     ae0:	c7 01       	movw	r24, r14
     ae2:	b8 01       	movw	r22, r16
     ae4:	ae 01       	movw	r20, r28
     ae6:	47 5e       	subi	r20, 0xE7	; 231
     ae8:	5f 4f       	sbci	r21, 0xFF	; 255
     aea:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <_fpadd_parts>
     aee:	0e 94 07 08 	call	0x100e	; 0x100e <__pack_f>
     af2:	a0 96       	adiw	r28, 0x20	; 32
     af4:	e6 e0       	ldi	r30, 0x06	; 6
     af6:	0c 94 d5 09 	jmp	0x13aa	; 0x13aa <__epilogue_restores__+0x18>

00000afa <__mulsf3>:
     afa:	a0 e2       	ldi	r26, 0x20	; 32
     afc:	b0 e0       	ldi	r27, 0x00	; 0
     afe:	e3 e8       	ldi	r30, 0x83	; 131
     b00:	f5 e0       	ldi	r31, 0x05	; 5
     b02:	0c 94 ad 09 	jmp	0x135a	; 0x135a <__prologue_saves__>
     b06:	69 83       	std	Y+1, r22	; 0x01
     b08:	7a 83       	std	Y+2, r23	; 0x02
     b0a:	8b 83       	std	Y+3, r24	; 0x03
     b0c:	9c 83       	std	Y+4, r25	; 0x04
     b0e:	2d 83       	std	Y+5, r18	; 0x05
     b10:	3e 83       	std	Y+6, r19	; 0x06
     b12:	4f 83       	std	Y+7, r20	; 0x07
     b14:	58 87       	std	Y+8, r21	; 0x08
     b16:	ce 01       	movw	r24, r28
     b18:	01 96       	adiw	r24, 0x01	; 1
     b1a:	be 01       	movw	r22, r28
     b1c:	67 5f       	subi	r22, 0xF7	; 247
     b1e:	7f 4f       	sbci	r23, 0xFF	; 255
     b20:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     b24:	ce 01       	movw	r24, r28
     b26:	05 96       	adiw	r24, 0x05	; 5
     b28:	be 01       	movw	r22, r28
     b2a:	6f 5e       	subi	r22, 0xEF	; 239
     b2c:	7f 4f       	sbci	r23, 0xFF	; 255
     b2e:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     b32:	99 85       	ldd	r25, Y+9	; 0x09
     b34:	92 30       	cpi	r25, 0x02	; 2
     b36:	88 f0       	brcs	.+34     	; 0xb5a <__mulsf3+0x60>
     b38:	89 89       	ldd	r24, Y+17	; 0x11
     b3a:	82 30       	cpi	r24, 0x02	; 2
     b3c:	c8 f0       	brcs	.+50     	; 0xb70 <__mulsf3+0x76>
     b3e:	94 30       	cpi	r25, 0x04	; 4
     b40:	19 f4       	brne	.+6      	; 0xb48 <__mulsf3+0x4e>
     b42:	82 30       	cpi	r24, 0x02	; 2
     b44:	51 f4       	brne	.+20     	; 0xb5a <__mulsf3+0x60>
     b46:	04 c0       	rjmp	.+8      	; 0xb50 <__mulsf3+0x56>
     b48:	84 30       	cpi	r24, 0x04	; 4
     b4a:	29 f4       	brne	.+10     	; 0xb56 <__mulsf3+0x5c>
     b4c:	92 30       	cpi	r25, 0x02	; 2
     b4e:	81 f4       	brne	.+32     	; 0xb70 <__mulsf3+0x76>
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	91 e0       	ldi	r25, 0x01	; 1
     b54:	c6 c0       	rjmp	.+396    	; 0xce2 <__mulsf3+0x1e8>
     b56:	92 30       	cpi	r25, 0x02	; 2
     b58:	49 f4       	brne	.+18     	; 0xb6c <__mulsf3+0x72>
     b5a:	20 e0       	ldi	r18, 0x00	; 0
     b5c:	9a 85       	ldd	r25, Y+10	; 0x0a
     b5e:	8a 89       	ldd	r24, Y+18	; 0x12
     b60:	98 13       	cpse	r25, r24
     b62:	21 e0       	ldi	r18, 0x01	; 1
     b64:	2a 87       	std	Y+10, r18	; 0x0a
     b66:	ce 01       	movw	r24, r28
     b68:	09 96       	adiw	r24, 0x09	; 9
     b6a:	bb c0       	rjmp	.+374    	; 0xce2 <__mulsf3+0x1e8>
     b6c:	82 30       	cpi	r24, 0x02	; 2
     b6e:	49 f4       	brne	.+18     	; 0xb82 <__mulsf3+0x88>
     b70:	20 e0       	ldi	r18, 0x00	; 0
     b72:	9a 85       	ldd	r25, Y+10	; 0x0a
     b74:	8a 89       	ldd	r24, Y+18	; 0x12
     b76:	98 13       	cpse	r25, r24
     b78:	21 e0       	ldi	r18, 0x01	; 1
     b7a:	2a 8b       	std	Y+18, r18	; 0x12
     b7c:	ce 01       	movw	r24, r28
     b7e:	41 96       	adiw	r24, 0x11	; 17
     b80:	b0 c0       	rjmp	.+352    	; 0xce2 <__mulsf3+0x1e8>
     b82:	2d 84       	ldd	r2, Y+13	; 0x0d
     b84:	3e 84       	ldd	r3, Y+14	; 0x0e
     b86:	4f 84       	ldd	r4, Y+15	; 0x0f
     b88:	58 88       	ldd	r5, Y+16	; 0x10
     b8a:	6d 88       	ldd	r6, Y+21	; 0x15
     b8c:	7e 88       	ldd	r7, Y+22	; 0x16
     b8e:	8f 88       	ldd	r8, Y+23	; 0x17
     b90:	98 8c       	ldd	r9, Y+24	; 0x18
     b92:	ee 24       	eor	r14, r14
     b94:	ff 24       	eor	r15, r15
     b96:	87 01       	movw	r16, r14
     b98:	aa 24       	eor	r10, r10
     b9a:	bb 24       	eor	r11, r11
     b9c:	65 01       	movw	r12, r10
     b9e:	40 e0       	ldi	r20, 0x00	; 0
     ba0:	50 e0       	ldi	r21, 0x00	; 0
     ba2:	60 e0       	ldi	r22, 0x00	; 0
     ba4:	70 e0       	ldi	r23, 0x00	; 0
     ba6:	e0 e0       	ldi	r30, 0x00	; 0
     ba8:	f0 e0       	ldi	r31, 0x00	; 0
     baa:	c1 01       	movw	r24, r2
     bac:	81 70       	andi	r24, 0x01	; 1
     bae:	90 70       	andi	r25, 0x00	; 0
     bb0:	89 2b       	or	r24, r25
     bb2:	e9 f0       	breq	.+58     	; 0xbee <__mulsf3+0xf4>
     bb4:	e6 0c       	add	r14, r6
     bb6:	f7 1c       	adc	r15, r7
     bb8:	08 1d       	adc	r16, r8
     bba:	19 1d       	adc	r17, r9
     bbc:	9a 01       	movw	r18, r20
     bbe:	ab 01       	movw	r20, r22
     bc0:	2a 0d       	add	r18, r10
     bc2:	3b 1d       	adc	r19, r11
     bc4:	4c 1d       	adc	r20, r12
     bc6:	5d 1d       	adc	r21, r13
     bc8:	80 e0       	ldi	r24, 0x00	; 0
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	a0 e0       	ldi	r26, 0x00	; 0
     bce:	b0 e0       	ldi	r27, 0x00	; 0
     bd0:	e6 14       	cp	r14, r6
     bd2:	f7 04       	cpc	r15, r7
     bd4:	08 05       	cpc	r16, r8
     bd6:	19 05       	cpc	r17, r9
     bd8:	20 f4       	brcc	.+8      	; 0xbe2 <__mulsf3+0xe8>
     bda:	81 e0       	ldi	r24, 0x01	; 1
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	a0 e0       	ldi	r26, 0x00	; 0
     be0:	b0 e0       	ldi	r27, 0x00	; 0
     be2:	ba 01       	movw	r22, r20
     be4:	a9 01       	movw	r20, r18
     be6:	48 0f       	add	r20, r24
     be8:	59 1f       	adc	r21, r25
     bea:	6a 1f       	adc	r22, r26
     bec:	7b 1f       	adc	r23, r27
     bee:	aa 0c       	add	r10, r10
     bf0:	bb 1c       	adc	r11, r11
     bf2:	cc 1c       	adc	r12, r12
     bf4:	dd 1c       	adc	r13, r13
     bf6:	97 fe       	sbrs	r9, 7
     bf8:	08 c0       	rjmp	.+16     	; 0xc0a <__mulsf3+0x110>
     bfa:	81 e0       	ldi	r24, 0x01	; 1
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	a0 e0       	ldi	r26, 0x00	; 0
     c00:	b0 e0       	ldi	r27, 0x00	; 0
     c02:	a8 2a       	or	r10, r24
     c04:	b9 2a       	or	r11, r25
     c06:	ca 2a       	or	r12, r26
     c08:	db 2a       	or	r13, r27
     c0a:	31 96       	adiw	r30, 0x01	; 1
     c0c:	e0 32       	cpi	r30, 0x20	; 32
     c0e:	f1 05       	cpc	r31, r1
     c10:	49 f0       	breq	.+18     	; 0xc24 <__mulsf3+0x12a>
     c12:	66 0c       	add	r6, r6
     c14:	77 1c       	adc	r7, r7
     c16:	88 1c       	adc	r8, r8
     c18:	99 1c       	adc	r9, r9
     c1a:	56 94       	lsr	r5
     c1c:	47 94       	ror	r4
     c1e:	37 94       	ror	r3
     c20:	27 94       	ror	r2
     c22:	c3 cf       	rjmp	.-122    	; 0xbaa <__mulsf3+0xb0>
     c24:	fa 85       	ldd	r31, Y+10	; 0x0a
     c26:	ea 89       	ldd	r30, Y+18	; 0x12
     c28:	2b 89       	ldd	r18, Y+19	; 0x13
     c2a:	3c 89       	ldd	r19, Y+20	; 0x14
     c2c:	8b 85       	ldd	r24, Y+11	; 0x0b
     c2e:	9c 85       	ldd	r25, Y+12	; 0x0c
     c30:	28 0f       	add	r18, r24
     c32:	39 1f       	adc	r19, r25
     c34:	2e 5f       	subi	r18, 0xFE	; 254
     c36:	3f 4f       	sbci	r19, 0xFF	; 255
     c38:	17 c0       	rjmp	.+46     	; 0xc68 <__mulsf3+0x16e>
     c3a:	ca 01       	movw	r24, r20
     c3c:	81 70       	andi	r24, 0x01	; 1
     c3e:	90 70       	andi	r25, 0x00	; 0
     c40:	89 2b       	or	r24, r25
     c42:	61 f0       	breq	.+24     	; 0xc5c <__mulsf3+0x162>
     c44:	16 95       	lsr	r17
     c46:	07 95       	ror	r16
     c48:	f7 94       	ror	r15
     c4a:	e7 94       	ror	r14
     c4c:	80 e0       	ldi	r24, 0x00	; 0
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	a0 e0       	ldi	r26, 0x00	; 0
     c52:	b0 e8       	ldi	r27, 0x80	; 128
     c54:	e8 2a       	or	r14, r24
     c56:	f9 2a       	or	r15, r25
     c58:	0a 2b       	or	r16, r26
     c5a:	1b 2b       	or	r17, r27
     c5c:	76 95       	lsr	r23
     c5e:	67 95       	ror	r22
     c60:	57 95       	ror	r21
     c62:	47 95       	ror	r20
     c64:	2f 5f       	subi	r18, 0xFF	; 255
     c66:	3f 4f       	sbci	r19, 0xFF	; 255
     c68:	77 fd       	sbrc	r23, 7
     c6a:	e7 cf       	rjmp	.-50     	; 0xc3a <__mulsf3+0x140>
     c6c:	0c c0       	rjmp	.+24     	; 0xc86 <__mulsf3+0x18c>
     c6e:	44 0f       	add	r20, r20
     c70:	55 1f       	adc	r21, r21
     c72:	66 1f       	adc	r22, r22
     c74:	77 1f       	adc	r23, r23
     c76:	17 fd       	sbrc	r17, 7
     c78:	41 60       	ori	r20, 0x01	; 1
     c7a:	ee 0c       	add	r14, r14
     c7c:	ff 1c       	adc	r15, r15
     c7e:	00 1f       	adc	r16, r16
     c80:	11 1f       	adc	r17, r17
     c82:	21 50       	subi	r18, 0x01	; 1
     c84:	30 40       	sbci	r19, 0x00	; 0
     c86:	40 30       	cpi	r20, 0x00	; 0
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	59 07       	cpc	r21, r25
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	69 07       	cpc	r22, r25
     c90:	90 e4       	ldi	r25, 0x40	; 64
     c92:	79 07       	cpc	r23, r25
     c94:	60 f3       	brcs	.-40     	; 0xc6e <__mulsf3+0x174>
     c96:	2b 8f       	std	Y+27, r18	; 0x1b
     c98:	3c 8f       	std	Y+28, r19	; 0x1c
     c9a:	db 01       	movw	r26, r22
     c9c:	ca 01       	movw	r24, r20
     c9e:	8f 77       	andi	r24, 0x7F	; 127
     ca0:	90 70       	andi	r25, 0x00	; 0
     ca2:	a0 70       	andi	r26, 0x00	; 0
     ca4:	b0 70       	andi	r27, 0x00	; 0
     ca6:	80 34       	cpi	r24, 0x40	; 64
     ca8:	91 05       	cpc	r25, r1
     caa:	a1 05       	cpc	r26, r1
     cac:	b1 05       	cpc	r27, r1
     cae:	61 f4       	brne	.+24     	; 0xcc8 <__mulsf3+0x1ce>
     cb0:	47 fd       	sbrc	r20, 7
     cb2:	0a c0       	rjmp	.+20     	; 0xcc8 <__mulsf3+0x1ce>
     cb4:	e1 14       	cp	r14, r1
     cb6:	f1 04       	cpc	r15, r1
     cb8:	01 05       	cpc	r16, r1
     cba:	11 05       	cpc	r17, r1
     cbc:	29 f0       	breq	.+10     	; 0xcc8 <__mulsf3+0x1ce>
     cbe:	40 5c       	subi	r20, 0xC0	; 192
     cc0:	5f 4f       	sbci	r21, 0xFF	; 255
     cc2:	6f 4f       	sbci	r22, 0xFF	; 255
     cc4:	7f 4f       	sbci	r23, 0xFF	; 255
     cc6:	40 78       	andi	r20, 0x80	; 128
     cc8:	1a 8e       	std	Y+26, r1	; 0x1a
     cca:	fe 17       	cp	r31, r30
     ccc:	11 f0       	breq	.+4      	; 0xcd2 <__mulsf3+0x1d8>
     cce:	81 e0       	ldi	r24, 0x01	; 1
     cd0:	8a 8f       	std	Y+26, r24	; 0x1a
     cd2:	4d 8f       	std	Y+29, r20	; 0x1d
     cd4:	5e 8f       	std	Y+30, r21	; 0x1e
     cd6:	6f 8f       	std	Y+31, r22	; 0x1f
     cd8:	78 a3       	std	Y+32, r23	; 0x20
     cda:	83 e0       	ldi	r24, 0x03	; 3
     cdc:	89 8f       	std	Y+25, r24	; 0x19
     cde:	ce 01       	movw	r24, r28
     ce0:	49 96       	adiw	r24, 0x19	; 25
     ce2:	0e 94 07 08 	call	0x100e	; 0x100e <__pack_f>
     ce6:	a0 96       	adiw	r28, 0x20	; 32
     ce8:	e2 e1       	ldi	r30, 0x12	; 18
     cea:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__epilogue_restores__>

00000cee <__divsf3>:
     cee:	a8 e1       	ldi	r26, 0x18	; 24
     cf0:	b0 e0       	ldi	r27, 0x00	; 0
     cf2:	ed e7       	ldi	r30, 0x7D	; 125
     cf4:	f6 e0       	ldi	r31, 0x06	; 6
     cf6:	0c 94 b5 09 	jmp	0x136a	; 0x136a <__prologue_saves__+0x10>
     cfa:	69 83       	std	Y+1, r22	; 0x01
     cfc:	7a 83       	std	Y+2, r23	; 0x02
     cfe:	8b 83       	std	Y+3, r24	; 0x03
     d00:	9c 83       	std	Y+4, r25	; 0x04
     d02:	2d 83       	std	Y+5, r18	; 0x05
     d04:	3e 83       	std	Y+6, r19	; 0x06
     d06:	4f 83       	std	Y+7, r20	; 0x07
     d08:	58 87       	std	Y+8, r21	; 0x08
     d0a:	b9 e0       	ldi	r27, 0x09	; 9
     d0c:	eb 2e       	mov	r14, r27
     d0e:	f1 2c       	mov	r15, r1
     d10:	ec 0e       	add	r14, r28
     d12:	fd 1e       	adc	r15, r29
     d14:	ce 01       	movw	r24, r28
     d16:	01 96       	adiw	r24, 0x01	; 1
     d18:	b7 01       	movw	r22, r14
     d1a:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     d1e:	8e 01       	movw	r16, r28
     d20:	0f 5e       	subi	r16, 0xEF	; 239
     d22:	1f 4f       	sbci	r17, 0xFF	; 255
     d24:	ce 01       	movw	r24, r28
     d26:	05 96       	adiw	r24, 0x05	; 5
     d28:	b8 01       	movw	r22, r16
     d2a:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     d2e:	29 85       	ldd	r18, Y+9	; 0x09
     d30:	22 30       	cpi	r18, 0x02	; 2
     d32:	08 f4       	brcc	.+2      	; 0xd36 <__divsf3+0x48>
     d34:	7e c0       	rjmp	.+252    	; 0xe32 <__divsf3+0x144>
     d36:	39 89       	ldd	r19, Y+17	; 0x11
     d38:	32 30       	cpi	r19, 0x02	; 2
     d3a:	10 f4       	brcc	.+4      	; 0xd40 <__divsf3+0x52>
     d3c:	b8 01       	movw	r22, r16
     d3e:	7c c0       	rjmp	.+248    	; 0xe38 <__divsf3+0x14a>
     d40:	8a 85       	ldd	r24, Y+10	; 0x0a
     d42:	9a 89       	ldd	r25, Y+18	; 0x12
     d44:	89 27       	eor	r24, r25
     d46:	8a 87       	std	Y+10, r24	; 0x0a
     d48:	24 30       	cpi	r18, 0x04	; 4
     d4a:	11 f0       	breq	.+4      	; 0xd50 <__divsf3+0x62>
     d4c:	22 30       	cpi	r18, 0x02	; 2
     d4e:	31 f4       	brne	.+12     	; 0xd5c <__divsf3+0x6e>
     d50:	23 17       	cp	r18, r19
     d52:	09 f0       	breq	.+2      	; 0xd56 <__divsf3+0x68>
     d54:	6e c0       	rjmp	.+220    	; 0xe32 <__divsf3+0x144>
     d56:	60 e0       	ldi	r22, 0x00	; 0
     d58:	71 e0       	ldi	r23, 0x01	; 1
     d5a:	6e c0       	rjmp	.+220    	; 0xe38 <__divsf3+0x14a>
     d5c:	34 30       	cpi	r19, 0x04	; 4
     d5e:	39 f4       	brne	.+14     	; 0xd6e <__divsf3+0x80>
     d60:	1d 86       	std	Y+13, r1	; 0x0d
     d62:	1e 86       	std	Y+14, r1	; 0x0e
     d64:	1f 86       	std	Y+15, r1	; 0x0f
     d66:	18 8a       	std	Y+16, r1	; 0x10
     d68:	1c 86       	std	Y+12, r1	; 0x0c
     d6a:	1b 86       	std	Y+11, r1	; 0x0b
     d6c:	04 c0       	rjmp	.+8      	; 0xd76 <__divsf3+0x88>
     d6e:	32 30       	cpi	r19, 0x02	; 2
     d70:	21 f4       	brne	.+8      	; 0xd7a <__divsf3+0x8c>
     d72:	84 e0       	ldi	r24, 0x04	; 4
     d74:	89 87       	std	Y+9, r24	; 0x09
     d76:	b7 01       	movw	r22, r14
     d78:	5f c0       	rjmp	.+190    	; 0xe38 <__divsf3+0x14a>
     d7a:	2b 85       	ldd	r18, Y+11	; 0x0b
     d7c:	3c 85       	ldd	r19, Y+12	; 0x0c
     d7e:	8b 89       	ldd	r24, Y+19	; 0x13
     d80:	9c 89       	ldd	r25, Y+20	; 0x14
     d82:	28 1b       	sub	r18, r24
     d84:	39 0b       	sbc	r19, r25
     d86:	3c 87       	std	Y+12, r19	; 0x0c
     d88:	2b 87       	std	Y+11, r18	; 0x0b
     d8a:	ed 84       	ldd	r14, Y+13	; 0x0d
     d8c:	fe 84       	ldd	r15, Y+14	; 0x0e
     d8e:	0f 85       	ldd	r16, Y+15	; 0x0f
     d90:	18 89       	ldd	r17, Y+16	; 0x10
     d92:	ad 88       	ldd	r10, Y+21	; 0x15
     d94:	be 88       	ldd	r11, Y+22	; 0x16
     d96:	cf 88       	ldd	r12, Y+23	; 0x17
     d98:	d8 8c       	ldd	r13, Y+24	; 0x18
     d9a:	ea 14       	cp	r14, r10
     d9c:	fb 04       	cpc	r15, r11
     d9e:	0c 05       	cpc	r16, r12
     da0:	1d 05       	cpc	r17, r13
     da2:	40 f4       	brcc	.+16     	; 0xdb4 <__divsf3+0xc6>
     da4:	ee 0c       	add	r14, r14
     da6:	ff 1c       	adc	r15, r15
     da8:	00 1f       	adc	r16, r16
     daa:	11 1f       	adc	r17, r17
     dac:	21 50       	subi	r18, 0x01	; 1
     dae:	30 40       	sbci	r19, 0x00	; 0
     db0:	3c 87       	std	Y+12, r19	; 0x0c
     db2:	2b 87       	std	Y+11, r18	; 0x0b
     db4:	20 e0       	ldi	r18, 0x00	; 0
     db6:	30 e0       	ldi	r19, 0x00	; 0
     db8:	40 e0       	ldi	r20, 0x00	; 0
     dba:	50 e0       	ldi	r21, 0x00	; 0
     dbc:	80 e0       	ldi	r24, 0x00	; 0
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	a0 e0       	ldi	r26, 0x00	; 0
     dc2:	b0 e4       	ldi	r27, 0x40	; 64
     dc4:	60 e0       	ldi	r22, 0x00	; 0
     dc6:	70 e0       	ldi	r23, 0x00	; 0
     dc8:	ea 14       	cp	r14, r10
     dca:	fb 04       	cpc	r15, r11
     dcc:	0c 05       	cpc	r16, r12
     dce:	1d 05       	cpc	r17, r13
     dd0:	40 f0       	brcs	.+16     	; 0xde2 <__divsf3+0xf4>
     dd2:	28 2b       	or	r18, r24
     dd4:	39 2b       	or	r19, r25
     dd6:	4a 2b       	or	r20, r26
     dd8:	5b 2b       	or	r21, r27
     dda:	ea 18       	sub	r14, r10
     ddc:	fb 08       	sbc	r15, r11
     dde:	0c 09       	sbc	r16, r12
     de0:	1d 09       	sbc	r17, r13
     de2:	b6 95       	lsr	r27
     de4:	a7 95       	ror	r26
     de6:	97 95       	ror	r25
     de8:	87 95       	ror	r24
     dea:	ee 0c       	add	r14, r14
     dec:	ff 1c       	adc	r15, r15
     dee:	00 1f       	adc	r16, r16
     df0:	11 1f       	adc	r17, r17
     df2:	6f 5f       	subi	r22, 0xFF	; 255
     df4:	7f 4f       	sbci	r23, 0xFF	; 255
     df6:	6f 31       	cpi	r22, 0x1F	; 31
     df8:	71 05       	cpc	r23, r1
     dfa:	31 f7       	brne	.-52     	; 0xdc8 <__divsf3+0xda>
     dfc:	da 01       	movw	r26, r20
     dfe:	c9 01       	movw	r24, r18
     e00:	8f 77       	andi	r24, 0x7F	; 127
     e02:	90 70       	andi	r25, 0x00	; 0
     e04:	a0 70       	andi	r26, 0x00	; 0
     e06:	b0 70       	andi	r27, 0x00	; 0
     e08:	80 34       	cpi	r24, 0x40	; 64
     e0a:	91 05       	cpc	r25, r1
     e0c:	a1 05       	cpc	r26, r1
     e0e:	b1 05       	cpc	r27, r1
     e10:	61 f4       	brne	.+24     	; 0xe2a <__divsf3+0x13c>
     e12:	27 fd       	sbrc	r18, 7
     e14:	0a c0       	rjmp	.+20     	; 0xe2a <__divsf3+0x13c>
     e16:	e1 14       	cp	r14, r1
     e18:	f1 04       	cpc	r15, r1
     e1a:	01 05       	cpc	r16, r1
     e1c:	11 05       	cpc	r17, r1
     e1e:	29 f0       	breq	.+10     	; 0xe2a <__divsf3+0x13c>
     e20:	20 5c       	subi	r18, 0xC0	; 192
     e22:	3f 4f       	sbci	r19, 0xFF	; 255
     e24:	4f 4f       	sbci	r20, 0xFF	; 255
     e26:	5f 4f       	sbci	r21, 0xFF	; 255
     e28:	20 78       	andi	r18, 0x80	; 128
     e2a:	2d 87       	std	Y+13, r18	; 0x0d
     e2c:	3e 87       	std	Y+14, r19	; 0x0e
     e2e:	4f 87       	std	Y+15, r20	; 0x0f
     e30:	58 8b       	std	Y+16, r21	; 0x10
     e32:	be 01       	movw	r22, r28
     e34:	67 5f       	subi	r22, 0xF7	; 247
     e36:	7f 4f       	sbci	r23, 0xFF	; 255
     e38:	cb 01       	movw	r24, r22
     e3a:	0e 94 07 08 	call	0x100e	; 0x100e <__pack_f>
     e3e:	68 96       	adiw	r28, 0x18	; 24
     e40:	ea e0       	ldi	r30, 0x0A	; 10
     e42:	0c 94 d1 09 	jmp	0x13a2	; 0x13a2 <__epilogue_restores__+0x10>

00000e46 <__gtsf2>:
     e46:	a8 e1       	ldi	r26, 0x18	; 24
     e48:	b0 e0       	ldi	r27, 0x00	; 0
     e4a:	e9 e2       	ldi	r30, 0x29	; 41
     e4c:	f7 e0       	ldi	r31, 0x07	; 7
     e4e:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <__prologue_saves__+0x18>
     e52:	69 83       	std	Y+1, r22	; 0x01
     e54:	7a 83       	std	Y+2, r23	; 0x02
     e56:	8b 83       	std	Y+3, r24	; 0x03
     e58:	9c 83       	std	Y+4, r25	; 0x04
     e5a:	2d 83       	std	Y+5, r18	; 0x05
     e5c:	3e 83       	std	Y+6, r19	; 0x06
     e5e:	4f 83       	std	Y+7, r20	; 0x07
     e60:	58 87       	std	Y+8, r21	; 0x08
     e62:	89 e0       	ldi	r24, 0x09	; 9
     e64:	e8 2e       	mov	r14, r24
     e66:	f1 2c       	mov	r15, r1
     e68:	ec 0e       	add	r14, r28
     e6a:	fd 1e       	adc	r15, r29
     e6c:	ce 01       	movw	r24, r28
     e6e:	01 96       	adiw	r24, 0x01	; 1
     e70:	b7 01       	movw	r22, r14
     e72:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     e76:	8e 01       	movw	r16, r28
     e78:	0f 5e       	subi	r16, 0xEF	; 239
     e7a:	1f 4f       	sbci	r17, 0xFF	; 255
     e7c:	ce 01       	movw	r24, r28
     e7e:	05 96       	adiw	r24, 0x05	; 5
     e80:	b8 01       	movw	r22, r16
     e82:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     e86:	89 85       	ldd	r24, Y+9	; 0x09
     e88:	82 30       	cpi	r24, 0x02	; 2
     e8a:	40 f0       	brcs	.+16     	; 0xe9c <__gtsf2+0x56>
     e8c:	89 89       	ldd	r24, Y+17	; 0x11
     e8e:	82 30       	cpi	r24, 0x02	; 2
     e90:	28 f0       	brcs	.+10     	; 0xe9c <__gtsf2+0x56>
     e92:	c7 01       	movw	r24, r14
     e94:	b8 01       	movw	r22, r16
     e96:	0e 94 54 09 	call	0x12a8	; 0x12a8 <__fpcmp_parts_f>
     e9a:	01 c0       	rjmp	.+2      	; 0xe9e <__gtsf2+0x58>
     e9c:	8f ef       	ldi	r24, 0xFF	; 255
     e9e:	68 96       	adiw	r28, 0x18	; 24
     ea0:	e6 e0       	ldi	r30, 0x06	; 6
     ea2:	0c 94 d5 09 	jmp	0x13aa	; 0x13aa <__epilogue_restores__+0x18>

00000ea6 <__gesf2>:
     ea6:	a8 e1       	ldi	r26, 0x18	; 24
     ea8:	b0 e0       	ldi	r27, 0x00	; 0
     eaa:	e9 e5       	ldi	r30, 0x59	; 89
     eac:	f7 e0       	ldi	r31, 0x07	; 7
     eae:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <__prologue_saves__+0x18>
     eb2:	69 83       	std	Y+1, r22	; 0x01
     eb4:	7a 83       	std	Y+2, r23	; 0x02
     eb6:	8b 83       	std	Y+3, r24	; 0x03
     eb8:	9c 83       	std	Y+4, r25	; 0x04
     eba:	2d 83       	std	Y+5, r18	; 0x05
     ebc:	3e 83       	std	Y+6, r19	; 0x06
     ebe:	4f 83       	std	Y+7, r20	; 0x07
     ec0:	58 87       	std	Y+8, r21	; 0x08
     ec2:	89 e0       	ldi	r24, 0x09	; 9
     ec4:	e8 2e       	mov	r14, r24
     ec6:	f1 2c       	mov	r15, r1
     ec8:	ec 0e       	add	r14, r28
     eca:	fd 1e       	adc	r15, r29
     ecc:	ce 01       	movw	r24, r28
     ece:	01 96       	adiw	r24, 0x01	; 1
     ed0:	b7 01       	movw	r22, r14
     ed2:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     ed6:	8e 01       	movw	r16, r28
     ed8:	0f 5e       	subi	r16, 0xEF	; 239
     eda:	1f 4f       	sbci	r17, 0xFF	; 255
     edc:	ce 01       	movw	r24, r28
     ede:	05 96       	adiw	r24, 0x05	; 5
     ee0:	b8 01       	movw	r22, r16
     ee2:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     ee6:	89 85       	ldd	r24, Y+9	; 0x09
     ee8:	82 30       	cpi	r24, 0x02	; 2
     eea:	40 f0       	brcs	.+16     	; 0xefc <__gesf2+0x56>
     eec:	89 89       	ldd	r24, Y+17	; 0x11
     eee:	82 30       	cpi	r24, 0x02	; 2
     ef0:	28 f0       	brcs	.+10     	; 0xefc <__gesf2+0x56>
     ef2:	c7 01       	movw	r24, r14
     ef4:	b8 01       	movw	r22, r16
     ef6:	0e 94 54 09 	call	0x12a8	; 0x12a8 <__fpcmp_parts_f>
     efa:	01 c0       	rjmp	.+2      	; 0xefe <__gesf2+0x58>
     efc:	8f ef       	ldi	r24, 0xFF	; 255
     efe:	68 96       	adiw	r28, 0x18	; 24
     f00:	e6 e0       	ldi	r30, 0x06	; 6
     f02:	0c 94 d5 09 	jmp	0x13aa	; 0x13aa <__epilogue_restores__+0x18>

00000f06 <__ltsf2>:
     f06:	a8 e1       	ldi	r26, 0x18	; 24
     f08:	b0 e0       	ldi	r27, 0x00	; 0
     f0a:	e9 e8       	ldi	r30, 0x89	; 137
     f0c:	f7 e0       	ldi	r31, 0x07	; 7
     f0e:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <__prologue_saves__+0x18>
     f12:	69 83       	std	Y+1, r22	; 0x01
     f14:	7a 83       	std	Y+2, r23	; 0x02
     f16:	8b 83       	std	Y+3, r24	; 0x03
     f18:	9c 83       	std	Y+4, r25	; 0x04
     f1a:	2d 83       	std	Y+5, r18	; 0x05
     f1c:	3e 83       	std	Y+6, r19	; 0x06
     f1e:	4f 83       	std	Y+7, r20	; 0x07
     f20:	58 87       	std	Y+8, r21	; 0x08
     f22:	89 e0       	ldi	r24, 0x09	; 9
     f24:	e8 2e       	mov	r14, r24
     f26:	f1 2c       	mov	r15, r1
     f28:	ec 0e       	add	r14, r28
     f2a:	fd 1e       	adc	r15, r29
     f2c:	ce 01       	movw	r24, r28
     f2e:	01 96       	adiw	r24, 0x01	; 1
     f30:	b7 01       	movw	r22, r14
     f32:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     f36:	8e 01       	movw	r16, r28
     f38:	0f 5e       	subi	r16, 0xEF	; 239
     f3a:	1f 4f       	sbci	r17, 0xFF	; 255
     f3c:	ce 01       	movw	r24, r28
     f3e:	05 96       	adiw	r24, 0x05	; 5
     f40:	b8 01       	movw	r22, r16
     f42:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     f46:	89 85       	ldd	r24, Y+9	; 0x09
     f48:	82 30       	cpi	r24, 0x02	; 2
     f4a:	40 f0       	brcs	.+16     	; 0xf5c <__ltsf2+0x56>
     f4c:	89 89       	ldd	r24, Y+17	; 0x11
     f4e:	82 30       	cpi	r24, 0x02	; 2
     f50:	28 f0       	brcs	.+10     	; 0xf5c <__ltsf2+0x56>
     f52:	c7 01       	movw	r24, r14
     f54:	b8 01       	movw	r22, r16
     f56:	0e 94 54 09 	call	0x12a8	; 0x12a8 <__fpcmp_parts_f>
     f5a:	01 c0       	rjmp	.+2      	; 0xf5e <__ltsf2+0x58>
     f5c:	81 e0       	ldi	r24, 0x01	; 1
     f5e:	68 96       	adiw	r28, 0x18	; 24
     f60:	e6 e0       	ldi	r30, 0x06	; 6
     f62:	0c 94 d5 09 	jmp	0x13aa	; 0x13aa <__epilogue_restores__+0x18>

00000f66 <__fixsfsi>:
     f66:	ac e0       	ldi	r26, 0x0C	; 12
     f68:	b0 e0       	ldi	r27, 0x00	; 0
     f6a:	e9 eb       	ldi	r30, 0xB9	; 185
     f6c:	f7 e0       	ldi	r31, 0x07	; 7
     f6e:	0c 94 bd 09 	jmp	0x137a	; 0x137a <__prologue_saves__+0x20>
     f72:	69 83       	std	Y+1, r22	; 0x01
     f74:	7a 83       	std	Y+2, r23	; 0x02
     f76:	8b 83       	std	Y+3, r24	; 0x03
     f78:	9c 83       	std	Y+4, r25	; 0x04
     f7a:	ce 01       	movw	r24, r28
     f7c:	01 96       	adiw	r24, 0x01	; 1
     f7e:	be 01       	movw	r22, r28
     f80:	6b 5f       	subi	r22, 0xFB	; 251
     f82:	7f 4f       	sbci	r23, 0xFF	; 255
     f84:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <__unpack_f>
     f88:	8d 81       	ldd	r24, Y+5	; 0x05
     f8a:	82 30       	cpi	r24, 0x02	; 2
     f8c:	61 f1       	breq	.+88     	; 0xfe6 <__fixsfsi+0x80>
     f8e:	82 30       	cpi	r24, 0x02	; 2
     f90:	50 f1       	brcs	.+84     	; 0xfe6 <__fixsfsi+0x80>
     f92:	84 30       	cpi	r24, 0x04	; 4
     f94:	21 f4       	brne	.+8      	; 0xf9e <__fixsfsi+0x38>
     f96:	8e 81       	ldd	r24, Y+6	; 0x06
     f98:	88 23       	and	r24, r24
     f9a:	51 f1       	breq	.+84     	; 0xff0 <__fixsfsi+0x8a>
     f9c:	2e c0       	rjmp	.+92     	; 0xffa <__fixsfsi+0x94>
     f9e:	2f 81       	ldd	r18, Y+7	; 0x07
     fa0:	38 85       	ldd	r19, Y+8	; 0x08
     fa2:	37 fd       	sbrc	r19, 7
     fa4:	20 c0       	rjmp	.+64     	; 0xfe6 <__fixsfsi+0x80>
     fa6:	6e 81       	ldd	r22, Y+6	; 0x06
     fa8:	2f 31       	cpi	r18, 0x1F	; 31
     faa:	31 05       	cpc	r19, r1
     fac:	1c f0       	brlt	.+6      	; 0xfb4 <__fixsfsi+0x4e>
     fae:	66 23       	and	r22, r22
     fb0:	f9 f0       	breq	.+62     	; 0xff0 <__fixsfsi+0x8a>
     fb2:	23 c0       	rjmp	.+70     	; 0xffa <__fixsfsi+0x94>
     fb4:	8e e1       	ldi	r24, 0x1E	; 30
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	82 1b       	sub	r24, r18
     fba:	93 0b       	sbc	r25, r19
     fbc:	29 85       	ldd	r18, Y+9	; 0x09
     fbe:	3a 85       	ldd	r19, Y+10	; 0x0a
     fc0:	4b 85       	ldd	r20, Y+11	; 0x0b
     fc2:	5c 85       	ldd	r21, Y+12	; 0x0c
     fc4:	04 c0       	rjmp	.+8      	; 0xfce <__fixsfsi+0x68>
     fc6:	56 95       	lsr	r21
     fc8:	47 95       	ror	r20
     fca:	37 95       	ror	r19
     fcc:	27 95       	ror	r18
     fce:	8a 95       	dec	r24
     fd0:	d2 f7       	brpl	.-12     	; 0xfc6 <__fixsfsi+0x60>
     fd2:	66 23       	and	r22, r22
     fd4:	b1 f0       	breq	.+44     	; 0x1002 <__fixsfsi+0x9c>
     fd6:	50 95       	com	r21
     fd8:	40 95       	com	r20
     fda:	30 95       	com	r19
     fdc:	21 95       	neg	r18
     fde:	3f 4f       	sbci	r19, 0xFF	; 255
     fe0:	4f 4f       	sbci	r20, 0xFF	; 255
     fe2:	5f 4f       	sbci	r21, 0xFF	; 255
     fe4:	0e c0       	rjmp	.+28     	; 0x1002 <__fixsfsi+0x9c>
     fe6:	20 e0       	ldi	r18, 0x00	; 0
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	40 e0       	ldi	r20, 0x00	; 0
     fec:	50 e0       	ldi	r21, 0x00	; 0
     fee:	09 c0       	rjmp	.+18     	; 0x1002 <__fixsfsi+0x9c>
     ff0:	2f ef       	ldi	r18, 0xFF	; 255
     ff2:	3f ef       	ldi	r19, 0xFF	; 255
     ff4:	4f ef       	ldi	r20, 0xFF	; 255
     ff6:	5f e7       	ldi	r21, 0x7F	; 127
     ff8:	04 c0       	rjmp	.+8      	; 0x1002 <__fixsfsi+0x9c>
     ffa:	20 e0       	ldi	r18, 0x00	; 0
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	40 e0       	ldi	r20, 0x00	; 0
    1000:	50 e8       	ldi	r21, 0x80	; 128
    1002:	b9 01       	movw	r22, r18
    1004:	ca 01       	movw	r24, r20
    1006:	2c 96       	adiw	r28, 0x0c	; 12
    1008:	e2 e0       	ldi	r30, 0x02	; 2
    100a:	0c 94 d9 09 	jmp	0x13b2	; 0x13b2 <__epilogue_restores__+0x20>

0000100e <__pack_f>:
    100e:	df 92       	push	r13
    1010:	ef 92       	push	r14
    1012:	ff 92       	push	r15
    1014:	0f 93       	push	r16
    1016:	1f 93       	push	r17
    1018:	fc 01       	movw	r30, r24
    101a:	e4 80       	ldd	r14, Z+4	; 0x04
    101c:	f5 80       	ldd	r15, Z+5	; 0x05
    101e:	06 81       	ldd	r16, Z+6	; 0x06
    1020:	17 81       	ldd	r17, Z+7	; 0x07
    1022:	d1 80       	ldd	r13, Z+1	; 0x01
    1024:	80 81       	ld	r24, Z
    1026:	82 30       	cpi	r24, 0x02	; 2
    1028:	48 f4       	brcc	.+18     	; 0x103c <__pack_f+0x2e>
    102a:	80 e0       	ldi	r24, 0x00	; 0
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	a0 e1       	ldi	r26, 0x10	; 16
    1030:	b0 e0       	ldi	r27, 0x00	; 0
    1032:	e8 2a       	or	r14, r24
    1034:	f9 2a       	or	r15, r25
    1036:	0a 2b       	or	r16, r26
    1038:	1b 2b       	or	r17, r27
    103a:	a5 c0       	rjmp	.+330    	; 0x1186 <__pack_f+0x178>
    103c:	84 30       	cpi	r24, 0x04	; 4
    103e:	09 f4       	brne	.+2      	; 0x1042 <__pack_f+0x34>
    1040:	9f c0       	rjmp	.+318    	; 0x1180 <__pack_f+0x172>
    1042:	82 30       	cpi	r24, 0x02	; 2
    1044:	21 f4       	brne	.+8      	; 0x104e <__pack_f+0x40>
    1046:	ee 24       	eor	r14, r14
    1048:	ff 24       	eor	r15, r15
    104a:	87 01       	movw	r16, r14
    104c:	05 c0       	rjmp	.+10     	; 0x1058 <__pack_f+0x4a>
    104e:	e1 14       	cp	r14, r1
    1050:	f1 04       	cpc	r15, r1
    1052:	01 05       	cpc	r16, r1
    1054:	11 05       	cpc	r17, r1
    1056:	19 f4       	brne	.+6      	; 0x105e <__pack_f+0x50>
    1058:	e0 e0       	ldi	r30, 0x00	; 0
    105a:	f0 e0       	ldi	r31, 0x00	; 0
    105c:	96 c0       	rjmp	.+300    	; 0x118a <__pack_f+0x17c>
    105e:	62 81       	ldd	r22, Z+2	; 0x02
    1060:	73 81       	ldd	r23, Z+3	; 0x03
    1062:	9f ef       	ldi	r25, 0xFF	; 255
    1064:	62 38       	cpi	r22, 0x82	; 130
    1066:	79 07       	cpc	r23, r25
    1068:	0c f0       	brlt	.+2      	; 0x106c <__pack_f+0x5e>
    106a:	5b c0       	rjmp	.+182    	; 0x1122 <__pack_f+0x114>
    106c:	22 e8       	ldi	r18, 0x82	; 130
    106e:	3f ef       	ldi	r19, 0xFF	; 255
    1070:	26 1b       	sub	r18, r22
    1072:	37 0b       	sbc	r19, r23
    1074:	2a 31       	cpi	r18, 0x1A	; 26
    1076:	31 05       	cpc	r19, r1
    1078:	2c f0       	brlt	.+10     	; 0x1084 <__pack_f+0x76>
    107a:	20 e0       	ldi	r18, 0x00	; 0
    107c:	30 e0       	ldi	r19, 0x00	; 0
    107e:	40 e0       	ldi	r20, 0x00	; 0
    1080:	50 e0       	ldi	r21, 0x00	; 0
    1082:	2a c0       	rjmp	.+84     	; 0x10d8 <__pack_f+0xca>
    1084:	b8 01       	movw	r22, r16
    1086:	a7 01       	movw	r20, r14
    1088:	02 2e       	mov	r0, r18
    108a:	04 c0       	rjmp	.+8      	; 0x1094 <__pack_f+0x86>
    108c:	76 95       	lsr	r23
    108e:	67 95       	ror	r22
    1090:	57 95       	ror	r21
    1092:	47 95       	ror	r20
    1094:	0a 94       	dec	r0
    1096:	d2 f7       	brpl	.-12     	; 0x108c <__pack_f+0x7e>
    1098:	81 e0       	ldi	r24, 0x01	; 1
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	a0 e0       	ldi	r26, 0x00	; 0
    109e:	b0 e0       	ldi	r27, 0x00	; 0
    10a0:	04 c0       	rjmp	.+8      	; 0x10aa <__pack_f+0x9c>
    10a2:	88 0f       	add	r24, r24
    10a4:	99 1f       	adc	r25, r25
    10a6:	aa 1f       	adc	r26, r26
    10a8:	bb 1f       	adc	r27, r27
    10aa:	2a 95       	dec	r18
    10ac:	d2 f7       	brpl	.-12     	; 0x10a2 <__pack_f+0x94>
    10ae:	01 97       	sbiw	r24, 0x01	; 1
    10b0:	a1 09       	sbc	r26, r1
    10b2:	b1 09       	sbc	r27, r1
    10b4:	8e 21       	and	r24, r14
    10b6:	9f 21       	and	r25, r15
    10b8:	a0 23       	and	r26, r16
    10ba:	b1 23       	and	r27, r17
    10bc:	00 97       	sbiw	r24, 0x00	; 0
    10be:	a1 05       	cpc	r26, r1
    10c0:	b1 05       	cpc	r27, r1
    10c2:	21 f0       	breq	.+8      	; 0x10cc <__pack_f+0xbe>
    10c4:	81 e0       	ldi	r24, 0x01	; 1
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	a0 e0       	ldi	r26, 0x00	; 0
    10ca:	b0 e0       	ldi	r27, 0x00	; 0
    10cc:	9a 01       	movw	r18, r20
    10ce:	ab 01       	movw	r20, r22
    10d0:	28 2b       	or	r18, r24
    10d2:	39 2b       	or	r19, r25
    10d4:	4a 2b       	or	r20, r26
    10d6:	5b 2b       	or	r21, r27
    10d8:	da 01       	movw	r26, r20
    10da:	c9 01       	movw	r24, r18
    10dc:	8f 77       	andi	r24, 0x7F	; 127
    10de:	90 70       	andi	r25, 0x00	; 0
    10e0:	a0 70       	andi	r26, 0x00	; 0
    10e2:	b0 70       	andi	r27, 0x00	; 0
    10e4:	80 34       	cpi	r24, 0x40	; 64
    10e6:	91 05       	cpc	r25, r1
    10e8:	a1 05       	cpc	r26, r1
    10ea:	b1 05       	cpc	r27, r1
    10ec:	39 f4       	brne	.+14     	; 0x10fc <__pack_f+0xee>
    10ee:	27 ff       	sbrs	r18, 7
    10f0:	09 c0       	rjmp	.+18     	; 0x1104 <__pack_f+0xf6>
    10f2:	20 5c       	subi	r18, 0xC0	; 192
    10f4:	3f 4f       	sbci	r19, 0xFF	; 255
    10f6:	4f 4f       	sbci	r20, 0xFF	; 255
    10f8:	5f 4f       	sbci	r21, 0xFF	; 255
    10fa:	04 c0       	rjmp	.+8      	; 0x1104 <__pack_f+0xf6>
    10fc:	21 5c       	subi	r18, 0xC1	; 193
    10fe:	3f 4f       	sbci	r19, 0xFF	; 255
    1100:	4f 4f       	sbci	r20, 0xFF	; 255
    1102:	5f 4f       	sbci	r21, 0xFF	; 255
    1104:	e0 e0       	ldi	r30, 0x00	; 0
    1106:	f0 e0       	ldi	r31, 0x00	; 0
    1108:	20 30       	cpi	r18, 0x00	; 0
    110a:	a0 e0       	ldi	r26, 0x00	; 0
    110c:	3a 07       	cpc	r19, r26
    110e:	a0 e0       	ldi	r26, 0x00	; 0
    1110:	4a 07       	cpc	r20, r26
    1112:	a0 e4       	ldi	r26, 0x40	; 64
    1114:	5a 07       	cpc	r21, r26
    1116:	10 f0       	brcs	.+4      	; 0x111c <__pack_f+0x10e>
    1118:	e1 e0       	ldi	r30, 0x01	; 1
    111a:	f0 e0       	ldi	r31, 0x00	; 0
    111c:	79 01       	movw	r14, r18
    111e:	8a 01       	movw	r16, r20
    1120:	27 c0       	rjmp	.+78     	; 0x1170 <__pack_f+0x162>
    1122:	60 38       	cpi	r22, 0x80	; 128
    1124:	71 05       	cpc	r23, r1
    1126:	64 f5       	brge	.+88     	; 0x1180 <__pack_f+0x172>
    1128:	fb 01       	movw	r30, r22
    112a:	e1 58       	subi	r30, 0x81	; 129
    112c:	ff 4f       	sbci	r31, 0xFF	; 255
    112e:	d8 01       	movw	r26, r16
    1130:	c7 01       	movw	r24, r14
    1132:	8f 77       	andi	r24, 0x7F	; 127
    1134:	90 70       	andi	r25, 0x00	; 0
    1136:	a0 70       	andi	r26, 0x00	; 0
    1138:	b0 70       	andi	r27, 0x00	; 0
    113a:	80 34       	cpi	r24, 0x40	; 64
    113c:	91 05       	cpc	r25, r1
    113e:	a1 05       	cpc	r26, r1
    1140:	b1 05       	cpc	r27, r1
    1142:	39 f4       	brne	.+14     	; 0x1152 <__pack_f+0x144>
    1144:	e7 fe       	sbrs	r14, 7
    1146:	0d c0       	rjmp	.+26     	; 0x1162 <__pack_f+0x154>
    1148:	80 e4       	ldi	r24, 0x40	; 64
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	a0 e0       	ldi	r26, 0x00	; 0
    114e:	b0 e0       	ldi	r27, 0x00	; 0
    1150:	04 c0       	rjmp	.+8      	; 0x115a <__pack_f+0x14c>
    1152:	8f e3       	ldi	r24, 0x3F	; 63
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	a0 e0       	ldi	r26, 0x00	; 0
    1158:	b0 e0       	ldi	r27, 0x00	; 0
    115a:	e8 0e       	add	r14, r24
    115c:	f9 1e       	adc	r15, r25
    115e:	0a 1f       	adc	r16, r26
    1160:	1b 1f       	adc	r17, r27
    1162:	17 ff       	sbrs	r17, 7
    1164:	05 c0       	rjmp	.+10     	; 0x1170 <__pack_f+0x162>
    1166:	16 95       	lsr	r17
    1168:	07 95       	ror	r16
    116a:	f7 94       	ror	r15
    116c:	e7 94       	ror	r14
    116e:	31 96       	adiw	r30, 0x01	; 1
    1170:	87 e0       	ldi	r24, 0x07	; 7
    1172:	16 95       	lsr	r17
    1174:	07 95       	ror	r16
    1176:	f7 94       	ror	r15
    1178:	e7 94       	ror	r14
    117a:	8a 95       	dec	r24
    117c:	d1 f7       	brne	.-12     	; 0x1172 <__pack_f+0x164>
    117e:	05 c0       	rjmp	.+10     	; 0x118a <__pack_f+0x17c>
    1180:	ee 24       	eor	r14, r14
    1182:	ff 24       	eor	r15, r15
    1184:	87 01       	movw	r16, r14
    1186:	ef ef       	ldi	r30, 0xFF	; 255
    1188:	f0 e0       	ldi	r31, 0x00	; 0
    118a:	6e 2f       	mov	r22, r30
    118c:	67 95       	ror	r22
    118e:	66 27       	eor	r22, r22
    1190:	67 95       	ror	r22
    1192:	90 2f       	mov	r25, r16
    1194:	9f 77       	andi	r25, 0x7F	; 127
    1196:	d7 94       	ror	r13
    1198:	dd 24       	eor	r13, r13
    119a:	d7 94       	ror	r13
    119c:	8e 2f       	mov	r24, r30
    119e:	86 95       	lsr	r24
    11a0:	49 2f       	mov	r20, r25
    11a2:	46 2b       	or	r20, r22
    11a4:	58 2f       	mov	r21, r24
    11a6:	5d 29       	or	r21, r13
    11a8:	b7 01       	movw	r22, r14
    11aa:	ca 01       	movw	r24, r20
    11ac:	1f 91       	pop	r17
    11ae:	0f 91       	pop	r16
    11b0:	ff 90       	pop	r15
    11b2:	ef 90       	pop	r14
    11b4:	df 90       	pop	r13
    11b6:	08 95       	ret

000011b8 <__unpack_f>:
    11b8:	fc 01       	movw	r30, r24
    11ba:	db 01       	movw	r26, r22
    11bc:	40 81       	ld	r20, Z
    11be:	51 81       	ldd	r21, Z+1	; 0x01
    11c0:	22 81       	ldd	r18, Z+2	; 0x02
    11c2:	62 2f       	mov	r22, r18
    11c4:	6f 77       	andi	r22, 0x7F	; 127
    11c6:	70 e0       	ldi	r23, 0x00	; 0
    11c8:	22 1f       	adc	r18, r18
    11ca:	22 27       	eor	r18, r18
    11cc:	22 1f       	adc	r18, r18
    11ce:	93 81       	ldd	r25, Z+3	; 0x03
    11d0:	89 2f       	mov	r24, r25
    11d2:	88 0f       	add	r24, r24
    11d4:	82 2b       	or	r24, r18
    11d6:	28 2f       	mov	r18, r24
    11d8:	30 e0       	ldi	r19, 0x00	; 0
    11da:	99 1f       	adc	r25, r25
    11dc:	99 27       	eor	r25, r25
    11de:	99 1f       	adc	r25, r25
    11e0:	11 96       	adiw	r26, 0x01	; 1
    11e2:	9c 93       	st	X, r25
    11e4:	11 97       	sbiw	r26, 0x01	; 1
    11e6:	21 15       	cp	r18, r1
    11e8:	31 05       	cpc	r19, r1
    11ea:	a9 f5       	brne	.+106    	; 0x1256 <__unpack_f+0x9e>
    11ec:	41 15       	cp	r20, r1
    11ee:	51 05       	cpc	r21, r1
    11f0:	61 05       	cpc	r22, r1
    11f2:	71 05       	cpc	r23, r1
    11f4:	11 f4       	brne	.+4      	; 0x11fa <__unpack_f+0x42>
    11f6:	82 e0       	ldi	r24, 0x02	; 2
    11f8:	37 c0       	rjmp	.+110    	; 0x1268 <__unpack_f+0xb0>
    11fa:	82 e8       	ldi	r24, 0x82	; 130
    11fc:	9f ef       	ldi	r25, 0xFF	; 255
    11fe:	13 96       	adiw	r26, 0x03	; 3
    1200:	9c 93       	st	X, r25
    1202:	8e 93       	st	-X, r24
    1204:	12 97       	sbiw	r26, 0x02	; 2
    1206:	9a 01       	movw	r18, r20
    1208:	ab 01       	movw	r20, r22
    120a:	67 e0       	ldi	r22, 0x07	; 7
    120c:	22 0f       	add	r18, r18
    120e:	33 1f       	adc	r19, r19
    1210:	44 1f       	adc	r20, r20
    1212:	55 1f       	adc	r21, r21
    1214:	6a 95       	dec	r22
    1216:	d1 f7       	brne	.-12     	; 0x120c <__unpack_f+0x54>
    1218:	83 e0       	ldi	r24, 0x03	; 3
    121a:	8c 93       	st	X, r24
    121c:	0d c0       	rjmp	.+26     	; 0x1238 <__unpack_f+0x80>
    121e:	22 0f       	add	r18, r18
    1220:	33 1f       	adc	r19, r19
    1222:	44 1f       	adc	r20, r20
    1224:	55 1f       	adc	r21, r21
    1226:	12 96       	adiw	r26, 0x02	; 2
    1228:	8d 91       	ld	r24, X+
    122a:	9c 91       	ld	r25, X
    122c:	13 97       	sbiw	r26, 0x03	; 3
    122e:	01 97       	sbiw	r24, 0x01	; 1
    1230:	13 96       	adiw	r26, 0x03	; 3
    1232:	9c 93       	st	X, r25
    1234:	8e 93       	st	-X, r24
    1236:	12 97       	sbiw	r26, 0x02	; 2
    1238:	20 30       	cpi	r18, 0x00	; 0
    123a:	80 e0       	ldi	r24, 0x00	; 0
    123c:	38 07       	cpc	r19, r24
    123e:	80 e0       	ldi	r24, 0x00	; 0
    1240:	48 07       	cpc	r20, r24
    1242:	80 e4       	ldi	r24, 0x40	; 64
    1244:	58 07       	cpc	r21, r24
    1246:	58 f3       	brcs	.-42     	; 0x121e <__unpack_f+0x66>
    1248:	14 96       	adiw	r26, 0x04	; 4
    124a:	2d 93       	st	X+, r18
    124c:	3d 93       	st	X+, r19
    124e:	4d 93       	st	X+, r20
    1250:	5c 93       	st	X, r21
    1252:	17 97       	sbiw	r26, 0x07	; 7
    1254:	08 95       	ret
    1256:	2f 3f       	cpi	r18, 0xFF	; 255
    1258:	31 05       	cpc	r19, r1
    125a:	79 f4       	brne	.+30     	; 0x127a <__unpack_f+0xc2>
    125c:	41 15       	cp	r20, r1
    125e:	51 05       	cpc	r21, r1
    1260:	61 05       	cpc	r22, r1
    1262:	71 05       	cpc	r23, r1
    1264:	19 f4       	brne	.+6      	; 0x126c <__unpack_f+0xb4>
    1266:	84 e0       	ldi	r24, 0x04	; 4
    1268:	8c 93       	st	X, r24
    126a:	08 95       	ret
    126c:	64 ff       	sbrs	r22, 4
    126e:	03 c0       	rjmp	.+6      	; 0x1276 <__unpack_f+0xbe>
    1270:	81 e0       	ldi	r24, 0x01	; 1
    1272:	8c 93       	st	X, r24
    1274:	12 c0       	rjmp	.+36     	; 0x129a <__unpack_f+0xe2>
    1276:	1c 92       	st	X, r1
    1278:	10 c0       	rjmp	.+32     	; 0x129a <__unpack_f+0xe2>
    127a:	2f 57       	subi	r18, 0x7F	; 127
    127c:	30 40       	sbci	r19, 0x00	; 0
    127e:	13 96       	adiw	r26, 0x03	; 3
    1280:	3c 93       	st	X, r19
    1282:	2e 93       	st	-X, r18
    1284:	12 97       	sbiw	r26, 0x02	; 2
    1286:	83 e0       	ldi	r24, 0x03	; 3
    1288:	8c 93       	st	X, r24
    128a:	87 e0       	ldi	r24, 0x07	; 7
    128c:	44 0f       	add	r20, r20
    128e:	55 1f       	adc	r21, r21
    1290:	66 1f       	adc	r22, r22
    1292:	77 1f       	adc	r23, r23
    1294:	8a 95       	dec	r24
    1296:	d1 f7       	brne	.-12     	; 0x128c <__unpack_f+0xd4>
    1298:	70 64       	ori	r23, 0x40	; 64
    129a:	14 96       	adiw	r26, 0x04	; 4
    129c:	4d 93       	st	X+, r20
    129e:	5d 93       	st	X+, r21
    12a0:	6d 93       	st	X+, r22
    12a2:	7c 93       	st	X, r23
    12a4:	17 97       	sbiw	r26, 0x07	; 7
    12a6:	08 95       	ret

000012a8 <__fpcmp_parts_f>:
    12a8:	1f 93       	push	r17
    12aa:	dc 01       	movw	r26, r24
    12ac:	fb 01       	movw	r30, r22
    12ae:	9c 91       	ld	r25, X
    12b0:	92 30       	cpi	r25, 0x02	; 2
    12b2:	08 f4       	brcc	.+2      	; 0x12b6 <__fpcmp_parts_f+0xe>
    12b4:	47 c0       	rjmp	.+142    	; 0x1344 <__fpcmp_parts_f+0x9c>
    12b6:	80 81       	ld	r24, Z
    12b8:	82 30       	cpi	r24, 0x02	; 2
    12ba:	08 f4       	brcc	.+2      	; 0x12be <__fpcmp_parts_f+0x16>
    12bc:	43 c0       	rjmp	.+134    	; 0x1344 <__fpcmp_parts_f+0x9c>
    12be:	94 30       	cpi	r25, 0x04	; 4
    12c0:	51 f4       	brne	.+20     	; 0x12d6 <__fpcmp_parts_f+0x2e>
    12c2:	11 96       	adiw	r26, 0x01	; 1
    12c4:	1c 91       	ld	r17, X
    12c6:	84 30       	cpi	r24, 0x04	; 4
    12c8:	99 f5       	brne	.+102    	; 0x1330 <__fpcmp_parts_f+0x88>
    12ca:	81 81       	ldd	r24, Z+1	; 0x01
    12cc:	68 2f       	mov	r22, r24
    12ce:	70 e0       	ldi	r23, 0x00	; 0
    12d0:	61 1b       	sub	r22, r17
    12d2:	71 09       	sbc	r23, r1
    12d4:	3f c0       	rjmp	.+126    	; 0x1354 <__fpcmp_parts_f+0xac>
    12d6:	84 30       	cpi	r24, 0x04	; 4
    12d8:	21 f0       	breq	.+8      	; 0x12e2 <__fpcmp_parts_f+0x3a>
    12da:	92 30       	cpi	r25, 0x02	; 2
    12dc:	31 f4       	brne	.+12     	; 0x12ea <__fpcmp_parts_f+0x42>
    12de:	82 30       	cpi	r24, 0x02	; 2
    12e0:	b9 f1       	breq	.+110    	; 0x1350 <__fpcmp_parts_f+0xa8>
    12e2:	81 81       	ldd	r24, Z+1	; 0x01
    12e4:	88 23       	and	r24, r24
    12e6:	89 f1       	breq	.+98     	; 0x134a <__fpcmp_parts_f+0xa2>
    12e8:	2d c0       	rjmp	.+90     	; 0x1344 <__fpcmp_parts_f+0x9c>
    12ea:	11 96       	adiw	r26, 0x01	; 1
    12ec:	1c 91       	ld	r17, X
    12ee:	11 97       	sbiw	r26, 0x01	; 1
    12f0:	82 30       	cpi	r24, 0x02	; 2
    12f2:	f1 f0       	breq	.+60     	; 0x1330 <__fpcmp_parts_f+0x88>
    12f4:	81 81       	ldd	r24, Z+1	; 0x01
    12f6:	18 17       	cp	r17, r24
    12f8:	d9 f4       	brne	.+54     	; 0x1330 <__fpcmp_parts_f+0x88>
    12fa:	12 96       	adiw	r26, 0x02	; 2
    12fc:	2d 91       	ld	r18, X+
    12fe:	3c 91       	ld	r19, X
    1300:	13 97       	sbiw	r26, 0x03	; 3
    1302:	82 81       	ldd	r24, Z+2	; 0x02
    1304:	93 81       	ldd	r25, Z+3	; 0x03
    1306:	82 17       	cp	r24, r18
    1308:	93 07       	cpc	r25, r19
    130a:	94 f0       	brlt	.+36     	; 0x1330 <__fpcmp_parts_f+0x88>
    130c:	28 17       	cp	r18, r24
    130e:	39 07       	cpc	r19, r25
    1310:	bc f0       	brlt	.+46     	; 0x1340 <__fpcmp_parts_f+0x98>
    1312:	14 96       	adiw	r26, 0x04	; 4
    1314:	8d 91       	ld	r24, X+
    1316:	9d 91       	ld	r25, X+
    1318:	0d 90       	ld	r0, X+
    131a:	bc 91       	ld	r27, X
    131c:	a0 2d       	mov	r26, r0
    131e:	24 81       	ldd	r18, Z+4	; 0x04
    1320:	35 81       	ldd	r19, Z+5	; 0x05
    1322:	46 81       	ldd	r20, Z+6	; 0x06
    1324:	57 81       	ldd	r21, Z+7	; 0x07
    1326:	28 17       	cp	r18, r24
    1328:	39 07       	cpc	r19, r25
    132a:	4a 07       	cpc	r20, r26
    132c:	5b 07       	cpc	r21, r27
    132e:	18 f4       	brcc	.+6      	; 0x1336 <__fpcmp_parts_f+0x8e>
    1330:	11 23       	and	r17, r17
    1332:	41 f0       	breq	.+16     	; 0x1344 <__fpcmp_parts_f+0x9c>
    1334:	0a c0       	rjmp	.+20     	; 0x134a <__fpcmp_parts_f+0xa2>
    1336:	82 17       	cp	r24, r18
    1338:	93 07       	cpc	r25, r19
    133a:	a4 07       	cpc	r26, r20
    133c:	b5 07       	cpc	r27, r21
    133e:	40 f4       	brcc	.+16     	; 0x1350 <__fpcmp_parts_f+0xa8>
    1340:	11 23       	and	r17, r17
    1342:	19 f0       	breq	.+6      	; 0x134a <__fpcmp_parts_f+0xa2>
    1344:	61 e0       	ldi	r22, 0x01	; 1
    1346:	70 e0       	ldi	r23, 0x00	; 0
    1348:	05 c0       	rjmp	.+10     	; 0x1354 <__fpcmp_parts_f+0xac>
    134a:	6f ef       	ldi	r22, 0xFF	; 255
    134c:	7f ef       	ldi	r23, 0xFF	; 255
    134e:	02 c0       	rjmp	.+4      	; 0x1354 <__fpcmp_parts_f+0xac>
    1350:	60 e0       	ldi	r22, 0x00	; 0
    1352:	70 e0       	ldi	r23, 0x00	; 0
    1354:	cb 01       	movw	r24, r22
    1356:	1f 91       	pop	r17
    1358:	08 95       	ret

0000135a <__prologue_saves__>:
    135a:	2f 92       	push	r2
    135c:	3f 92       	push	r3
    135e:	4f 92       	push	r4
    1360:	5f 92       	push	r5
    1362:	6f 92       	push	r6
    1364:	7f 92       	push	r7
    1366:	8f 92       	push	r8
    1368:	9f 92       	push	r9
    136a:	af 92       	push	r10
    136c:	bf 92       	push	r11
    136e:	cf 92       	push	r12
    1370:	df 92       	push	r13
    1372:	ef 92       	push	r14
    1374:	ff 92       	push	r15
    1376:	0f 93       	push	r16
    1378:	1f 93       	push	r17
    137a:	cf 93       	push	r28
    137c:	df 93       	push	r29
    137e:	cd b7       	in	r28, 0x3d	; 61
    1380:	de b7       	in	r29, 0x3e	; 62
    1382:	ca 1b       	sub	r28, r26
    1384:	db 0b       	sbc	r29, r27
    1386:	0f b6       	in	r0, 0x3f	; 63
    1388:	f8 94       	cli
    138a:	de bf       	out	0x3e, r29	; 62
    138c:	0f be       	out	0x3f, r0	; 63
    138e:	cd bf       	out	0x3d, r28	; 61
    1390:	09 94       	ijmp

00001392 <__epilogue_restores__>:
    1392:	2a 88       	ldd	r2, Y+18	; 0x12
    1394:	39 88       	ldd	r3, Y+17	; 0x11
    1396:	48 88       	ldd	r4, Y+16	; 0x10
    1398:	5f 84       	ldd	r5, Y+15	; 0x0f
    139a:	6e 84       	ldd	r6, Y+14	; 0x0e
    139c:	7d 84       	ldd	r7, Y+13	; 0x0d
    139e:	8c 84       	ldd	r8, Y+12	; 0x0c
    13a0:	9b 84       	ldd	r9, Y+11	; 0x0b
    13a2:	aa 84       	ldd	r10, Y+10	; 0x0a
    13a4:	b9 84       	ldd	r11, Y+9	; 0x09
    13a6:	c8 84       	ldd	r12, Y+8	; 0x08
    13a8:	df 80       	ldd	r13, Y+7	; 0x07
    13aa:	ee 80       	ldd	r14, Y+6	; 0x06
    13ac:	fd 80       	ldd	r15, Y+5	; 0x05
    13ae:	0c 81       	ldd	r16, Y+4	; 0x04
    13b0:	1b 81       	ldd	r17, Y+3	; 0x03
    13b2:	aa 81       	ldd	r26, Y+2	; 0x02
    13b4:	b9 81       	ldd	r27, Y+1	; 0x01
    13b6:	ce 0f       	add	r28, r30
    13b8:	d1 1d       	adc	r29, r1
    13ba:	0f b6       	in	r0, 0x3f	; 63
    13bc:	f8 94       	cli
    13be:	de bf       	out	0x3e, r29	; 62
    13c0:	0f be       	out	0x3f, r0	; 63
    13c2:	cd bf       	out	0x3d, r28	; 61
    13c4:	ed 01       	movw	r28, r26
    13c6:	08 95       	ret

000013c8 <_exit>:
    13c8:	f8 94       	cli

000013ca <__stop_program>:
    13ca:	ff cf       	rjmp	.-2      	; 0x13ca <__stop_program>
