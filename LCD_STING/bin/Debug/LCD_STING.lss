
bin\Debug\LCD_STING.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00001640  000016d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001640  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  000016e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 00000180  00000000  00000000  000016e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000201  00000000  00000000  00001863  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000024f1  00000000  00000000  00001a64  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000012b1  00000000  00000000  00003f55  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001490  00000000  00000000  00005206  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f0  00000000  00000000  00006698  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ab  00000000  00000000  00006888  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000088e  00000000  00000000  00006c33  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  000074c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e0 e4       	ldi	r30, 0x40	; 64
      7c:	f6 e1       	ldi	r31, 0x16	; 22
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	ac 30       	cpi	r26, 0x0C	; 12
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>
      8a:	0e 94 4b 00 	call	0x96	; 0x96 <main>
      8e:	0c 94 1e 0b 	jmp	0x163c	; 0x163c <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <main>:
void ROUTINE();
void BUSYCHECK();
void CURSOUR(unsigned char INPUT);
void TEXT(unsigned char INPUT);
int main(void)
{
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	df 93       	push	r29
      9c:	cf 93       	push	r28
      9e:	cd b7       	in	r28, 0x3d	; 61
      a0:	de b7       	in	r29, 0x3e	; 62
      a2:	c2 56       	subi	r28, 0x62	; 98
      a4:	d0 40       	sbci	r29, 0x00	; 0
      a6:	0f b6       	in	r0, 0x3f	; 63
      a8:	f8 94       	cli
      aa:	de bf       	out	0x3e, r29	; 62
      ac:	0f be       	out	0x3f, r0	; 63
      ae:	cd bf       	out	0x3d, r28	; 61
CONTROL_DDR |=1<< REGISTR_SEL | 1<<READ_WRITE |1<<ENABLE;
      b0:	a4 e2       	ldi	r26, 0x24	; 36
      b2:	b0 e0       	ldi	r27, 0x00	; 0
      b4:	e4 e2       	ldi	r30, 0x24	; 36
      b6:	f0 e0       	ldi	r31, 0x00	; 0
      b8:	80 81       	ld	r24, Z
      ba:	8e 60       	ori	r24, 0x0E	; 14
      bc:	8c 93       	st	X, r24
      be:	fe 01       	movw	r30, r28
      c0:	e9 5a       	subi	r30, 0xA9	; 169
      c2:	ff 4f       	sbci	r31, 0xFF	; 255
      c4:	80 e0       	ldi	r24, 0x00	; 0
      c6:	90 e0       	ldi	r25, 0x00	; 0
      c8:	a0 e7       	ldi	r26, 0x70	; 112
      ca:	b1 e4       	ldi	r27, 0x41	; 65
      cc:	80 83       	st	Z, r24
      ce:	91 83       	std	Z+1, r25	; 0x01
      d0:	a2 83       	std	Z+2, r26	; 0x02
      d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
      d4:	8e 01       	movw	r16, r28
      d6:	0d 5a       	subi	r16, 0xAD	; 173
      d8:	1f 4f       	sbci	r17, 0xFF	; 255
      da:	fe 01       	movw	r30, r28
      dc:	e9 5a       	subi	r30, 0xA9	; 169
      de:	ff 4f       	sbci	r31, 0xFF	; 255
      e0:	60 81       	ld	r22, Z
      e2:	71 81       	ldd	r23, Z+1	; 0x01
      e4:	82 81       	ldd	r24, Z+2	; 0x02
      e6:	93 81       	ldd	r25, Z+3	; 0x03
      e8:	20 e0       	ldi	r18, 0x00	; 0
      ea:	30 e0       	ldi	r19, 0x00	; 0
      ec:	4a e7       	ldi	r20, 0x7A	; 122
      ee:	55 e4       	ldi	r21, 0x45	; 69
      f0:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
      f4:	dc 01       	movw	r26, r24
      f6:	cb 01       	movw	r24, r22
      f8:	f8 01       	movw	r30, r16
      fa:	80 83       	st	Z, r24
      fc:	91 83       	std	Z+1, r25	; 0x01
      fe:	a2 83       	std	Z+2, r26	; 0x02
     100:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     102:	fe 01       	movw	r30, r28
     104:	ed 5a       	subi	r30, 0xAD	; 173
     106:	ff 4f       	sbci	r31, 0xFF	; 255
     108:	60 81       	ld	r22, Z
     10a:	71 81       	ldd	r23, Z+1	; 0x01
     10c:	82 81       	ldd	r24, Z+2	; 0x02
     10e:	93 81       	ldd	r25, Z+3	; 0x03
     110:	20 e0       	ldi	r18, 0x00	; 0
     112:	30 e0       	ldi	r19, 0x00	; 0
     114:	40 e8       	ldi	r20, 0x80	; 128
     116:	5f e3       	ldi	r21, 0x3F	; 63
     118:	0e 94 74 08 	call	0x10e8	; 0x10e8 <__ltsf2>
     11c:	88 23       	and	r24, r24
     11e:	44 f4       	brge	.+16     	; 0x130 <main+0x9a>
		__ticks = 1;
     120:	fe 01       	movw	r30, r28
     122:	ef 5a       	subi	r30, 0xAF	; 175
     124:	ff 4f       	sbci	r31, 0xFF	; 255
     126:	81 e0       	ldi	r24, 0x01	; 1
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	91 83       	std	Z+1, r25	; 0x01
     12c:	80 83       	st	Z, r24
     12e:	64 c0       	rjmp	.+200    	; 0x1f8 <main+0x162>
	else if (__tmp > 65535)
     130:	fe 01       	movw	r30, r28
     132:	ed 5a       	subi	r30, 0xAD	; 173
     134:	ff 4f       	sbci	r31, 0xFF	; 255
     136:	60 81       	ld	r22, Z
     138:	71 81       	ldd	r23, Z+1	; 0x01
     13a:	82 81       	ldd	r24, Z+2	; 0x02
     13c:	93 81       	ldd	r25, Z+3	; 0x03
     13e:	20 e0       	ldi	r18, 0x00	; 0
     140:	3f ef       	ldi	r19, 0xFF	; 255
     142:	4f e7       	ldi	r20, 0x7F	; 127
     144:	57 e4       	ldi	r21, 0x47	; 71
     146:	0e 94 14 08 	call	0x1028	; 0x1028 <__gtsf2>
     14a:	18 16       	cp	r1, r24
     14c:	0c f0       	brlt	.+2      	; 0x150 <main+0xba>
     14e:	43 c0       	rjmp	.+134    	; 0x1d6 <main+0x140>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     150:	fe 01       	movw	r30, r28
     152:	e9 5a       	subi	r30, 0xA9	; 169
     154:	ff 4f       	sbci	r31, 0xFF	; 255
     156:	60 81       	ld	r22, Z
     158:	71 81       	ldd	r23, Z+1	; 0x01
     15a:	82 81       	ldd	r24, Z+2	; 0x02
     15c:	93 81       	ldd	r25, Z+3	; 0x03
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	40 e2       	ldi	r20, 0x20	; 32
     164:	51 e4       	ldi	r21, 0x41	; 65
     166:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
     16a:	dc 01       	movw	r26, r24
     16c:	cb 01       	movw	r24, r22
     16e:	8e 01       	movw	r16, r28
     170:	0f 5a       	subi	r16, 0xAF	; 175
     172:	1f 4f       	sbci	r17, 0xFF	; 255
     174:	bc 01       	movw	r22, r24
     176:	cd 01       	movw	r24, r26
     178:	0e 94 98 04 	call	0x930	; 0x930 <__fixunssfsi>
     17c:	dc 01       	movw	r26, r24
     17e:	cb 01       	movw	r24, r22
     180:	f8 01       	movw	r30, r16
     182:	91 83       	std	Z+1, r25	; 0x01
     184:	80 83       	st	Z, r24
     186:	1f c0       	rjmp	.+62     	; 0x1c6 <main+0x130>
     188:	fe 01       	movw	r30, r28
     18a:	e1 5b       	subi	r30, 0xB1	; 177
     18c:	ff 4f       	sbci	r31, 0xFF	; 255
     18e:	80 e9       	ldi	r24, 0x90	; 144
     190:	91 e0       	ldi	r25, 0x01	; 1
     192:	91 83       	std	Z+1, r25	; 0x01
     194:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     196:	fe 01       	movw	r30, r28
     198:	e1 5b       	subi	r30, 0xB1	; 177
     19a:	ff 4f       	sbci	r31, 0xFF	; 255
     19c:	80 81       	ld	r24, Z
     19e:	91 81       	ldd	r25, Z+1	; 0x01
     1a0:	01 97       	sbiw	r24, 0x01	; 1
     1a2:	f1 f7       	brne	.-4      	; 0x1a0 <main+0x10a>
     1a4:	fe 01       	movw	r30, r28
     1a6:	e1 5b       	subi	r30, 0xB1	; 177
     1a8:	ff 4f       	sbci	r31, 0xFF	; 255
     1aa:	91 83       	std	Z+1, r25	; 0x01
     1ac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1ae:	de 01       	movw	r26, r28
     1b0:	af 5a       	subi	r26, 0xAF	; 175
     1b2:	bf 4f       	sbci	r27, 0xFF	; 255
     1b4:	fe 01       	movw	r30, r28
     1b6:	ef 5a       	subi	r30, 0xAF	; 175
     1b8:	ff 4f       	sbci	r31, 0xFF	; 255
     1ba:	80 81       	ld	r24, Z
     1bc:	91 81       	ldd	r25, Z+1	; 0x01
     1be:	01 97       	sbiw	r24, 0x01	; 1
     1c0:	11 96       	adiw	r26, 0x01	; 1
     1c2:	9c 93       	st	X, r25
     1c4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1c6:	fe 01       	movw	r30, r28
     1c8:	ef 5a       	subi	r30, 0xAF	; 175
     1ca:	ff 4f       	sbci	r31, 0xFF	; 255
     1cc:	80 81       	ld	r24, Z
     1ce:	91 81       	ldd	r25, Z+1	; 0x01
     1d0:	00 97       	sbiw	r24, 0x00	; 0
     1d2:	d1 f6       	brne	.-76     	; 0x188 <main+0xf2>
     1d4:	27 c0       	rjmp	.+78     	; 0x224 <main+0x18e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1d6:	8e 01       	movw	r16, r28
     1d8:	0f 5a       	subi	r16, 0xAF	; 175
     1da:	1f 4f       	sbci	r17, 0xFF	; 255
     1dc:	fe 01       	movw	r30, r28
     1de:	ed 5a       	subi	r30, 0xAD	; 173
     1e0:	ff 4f       	sbci	r31, 0xFF	; 255
     1e2:	60 81       	ld	r22, Z
     1e4:	71 81       	ldd	r23, Z+1	; 0x01
     1e6:	82 81       	ldd	r24, Z+2	; 0x02
     1e8:	93 81       	ldd	r25, Z+3	; 0x03
     1ea:	0e 94 98 04 	call	0x930	; 0x930 <__fixunssfsi>
     1ee:	dc 01       	movw	r26, r24
     1f0:	cb 01       	movw	r24, r22
     1f2:	f8 01       	movw	r30, r16
     1f4:	91 83       	std	Z+1, r25	; 0x01
     1f6:	80 83       	st	Z, r24
     1f8:	de 01       	movw	r26, r28
     1fa:	a3 5b       	subi	r26, 0xB3	; 179
     1fc:	bf 4f       	sbci	r27, 0xFF	; 255
     1fe:	fe 01       	movw	r30, r28
     200:	ef 5a       	subi	r30, 0xAF	; 175
     202:	ff 4f       	sbci	r31, 0xFF	; 255
     204:	80 81       	ld	r24, Z
     206:	91 81       	ldd	r25, Z+1	; 0x01
     208:	8d 93       	st	X+, r24
     20a:	9c 93       	st	X, r25
     20c:	fe 01       	movw	r30, r28
     20e:	e3 5b       	subi	r30, 0xB3	; 179
     210:	ff 4f       	sbci	r31, 0xFF	; 255
     212:	80 81       	ld	r24, Z
     214:	91 81       	ldd	r25, Z+1	; 0x01
     216:	01 97       	sbiw	r24, 0x01	; 1
     218:	f1 f7       	brne	.-4      	; 0x216 <main+0x180>
     21a:	fe 01       	movw	r30, r28
     21c:	e3 5b       	subi	r30, 0xB3	; 179
     21e:	ff 4f       	sbci	r31, 0xFF	; 255
     220:	91 83       	std	Z+1, r25	; 0x01
     222:	80 83       	st	Z, r24
_delay_ms(15);
CURSOUR(0x01);// clear lcd display
     224:	81 e0       	ldi	r24, 0x01	; 1
     226:	0e 94 59 04 	call	0x8b2	; 0x8b2 <CURSOUR>
     22a:	fe 01       	movw	r30, r28
     22c:	e7 5b       	subi	r30, 0xB7	; 183
     22e:	ff 4f       	sbci	r31, 0xFF	; 255
     230:	80 e0       	ldi	r24, 0x00	; 0
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	a0 e0       	ldi	r26, 0x00	; 0
     236:	b0 e4       	ldi	r27, 0x40	; 64
     238:	80 83       	st	Z, r24
     23a:	91 83       	std	Z+1, r25	; 0x01
     23c:	a2 83       	std	Z+2, r26	; 0x02
     23e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     240:	8e 01       	movw	r16, r28
     242:	0b 5b       	subi	r16, 0xBB	; 187
     244:	1f 4f       	sbci	r17, 0xFF	; 255
     246:	fe 01       	movw	r30, r28
     248:	e7 5b       	subi	r30, 0xB7	; 183
     24a:	ff 4f       	sbci	r31, 0xFF	; 255
     24c:	60 81       	ld	r22, Z
     24e:	71 81       	ldd	r23, Z+1	; 0x01
     250:	82 81       	ldd	r24, Z+2	; 0x02
     252:	93 81       	ldd	r25, Z+3	; 0x03
     254:	20 e0       	ldi	r18, 0x00	; 0
     256:	30 e0       	ldi	r19, 0x00	; 0
     258:	4a e7       	ldi	r20, 0x7A	; 122
     25a:	55 e4       	ldi	r21, 0x45	; 69
     25c:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
     260:	dc 01       	movw	r26, r24
     262:	cb 01       	movw	r24, r22
     264:	f8 01       	movw	r30, r16
     266:	80 83       	st	Z, r24
     268:	91 83       	std	Z+1, r25	; 0x01
     26a:	a2 83       	std	Z+2, r26	; 0x02
     26c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     26e:	fe 01       	movw	r30, r28
     270:	eb 5b       	subi	r30, 0xBB	; 187
     272:	ff 4f       	sbci	r31, 0xFF	; 255
     274:	60 81       	ld	r22, Z
     276:	71 81       	ldd	r23, Z+1	; 0x01
     278:	82 81       	ldd	r24, Z+2	; 0x02
     27a:	93 81       	ldd	r25, Z+3	; 0x03
     27c:	20 e0       	ldi	r18, 0x00	; 0
     27e:	30 e0       	ldi	r19, 0x00	; 0
     280:	40 e8       	ldi	r20, 0x80	; 128
     282:	5f e3       	ldi	r21, 0x3F	; 63
     284:	0e 94 74 08 	call	0x10e8	; 0x10e8 <__ltsf2>
     288:	88 23       	and	r24, r24
     28a:	44 f4       	brge	.+16     	; 0x29c <main+0x206>
		__ticks = 1;
     28c:	fe 01       	movw	r30, r28
     28e:	ed 5b       	subi	r30, 0xBD	; 189
     290:	ff 4f       	sbci	r31, 0xFF	; 255
     292:	81 e0       	ldi	r24, 0x01	; 1
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	91 83       	std	Z+1, r25	; 0x01
     298:	80 83       	st	Z, r24
     29a:	64 c0       	rjmp	.+200    	; 0x364 <main+0x2ce>
	else if (__tmp > 65535)
     29c:	fe 01       	movw	r30, r28
     29e:	eb 5b       	subi	r30, 0xBB	; 187
     2a0:	ff 4f       	sbci	r31, 0xFF	; 255
     2a2:	60 81       	ld	r22, Z
     2a4:	71 81       	ldd	r23, Z+1	; 0x01
     2a6:	82 81       	ldd	r24, Z+2	; 0x02
     2a8:	93 81       	ldd	r25, Z+3	; 0x03
     2aa:	20 e0       	ldi	r18, 0x00	; 0
     2ac:	3f ef       	ldi	r19, 0xFF	; 255
     2ae:	4f e7       	ldi	r20, 0x7F	; 127
     2b0:	57 e4       	ldi	r21, 0x47	; 71
     2b2:	0e 94 14 08 	call	0x1028	; 0x1028 <__gtsf2>
     2b6:	18 16       	cp	r1, r24
     2b8:	0c f0       	brlt	.+2      	; 0x2bc <main+0x226>
     2ba:	43 c0       	rjmp	.+134    	; 0x342 <main+0x2ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2bc:	fe 01       	movw	r30, r28
     2be:	e7 5b       	subi	r30, 0xB7	; 183
     2c0:	ff 4f       	sbci	r31, 0xFF	; 255
     2c2:	60 81       	ld	r22, Z
     2c4:	71 81       	ldd	r23, Z+1	; 0x01
     2c6:	82 81       	ldd	r24, Z+2	; 0x02
     2c8:	93 81       	ldd	r25, Z+3	; 0x03
     2ca:	20 e0       	ldi	r18, 0x00	; 0
     2cc:	30 e0       	ldi	r19, 0x00	; 0
     2ce:	40 e2       	ldi	r20, 0x20	; 32
     2d0:	51 e4       	ldi	r21, 0x41	; 65
     2d2:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
     2d6:	dc 01       	movw	r26, r24
     2d8:	cb 01       	movw	r24, r22
     2da:	8e 01       	movw	r16, r28
     2dc:	0d 5b       	subi	r16, 0xBD	; 189
     2de:	1f 4f       	sbci	r17, 0xFF	; 255
     2e0:	bc 01       	movw	r22, r24
     2e2:	cd 01       	movw	r24, r26
     2e4:	0e 94 98 04 	call	0x930	; 0x930 <__fixunssfsi>
     2e8:	dc 01       	movw	r26, r24
     2ea:	cb 01       	movw	r24, r22
     2ec:	f8 01       	movw	r30, r16
     2ee:	91 83       	std	Z+1, r25	; 0x01
     2f0:	80 83       	st	Z, r24
     2f2:	1f c0       	rjmp	.+62     	; 0x332 <main+0x29c>
     2f4:	fe 01       	movw	r30, r28
     2f6:	ef 5b       	subi	r30, 0xBF	; 191
     2f8:	ff 4f       	sbci	r31, 0xFF	; 255
     2fa:	80 e9       	ldi	r24, 0x90	; 144
     2fc:	91 e0       	ldi	r25, 0x01	; 1
     2fe:	91 83       	std	Z+1, r25	; 0x01
     300:	80 83       	st	Z, r24
     302:	fe 01       	movw	r30, r28
     304:	ef 5b       	subi	r30, 0xBF	; 191
     306:	ff 4f       	sbci	r31, 0xFF	; 255
     308:	80 81       	ld	r24, Z
     30a:	91 81       	ldd	r25, Z+1	; 0x01
     30c:	01 97       	sbiw	r24, 0x01	; 1
     30e:	f1 f7       	brne	.-4      	; 0x30c <main+0x276>
     310:	fe 01       	movw	r30, r28
     312:	ef 5b       	subi	r30, 0xBF	; 191
     314:	ff 4f       	sbci	r31, 0xFF	; 255
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     31a:	de 01       	movw	r26, r28
     31c:	ad 5b       	subi	r26, 0xBD	; 189
     31e:	bf 4f       	sbci	r27, 0xFF	; 255
     320:	fe 01       	movw	r30, r28
     322:	ed 5b       	subi	r30, 0xBD	; 189
     324:	ff 4f       	sbci	r31, 0xFF	; 255
     326:	80 81       	ld	r24, Z
     328:	91 81       	ldd	r25, Z+1	; 0x01
     32a:	01 97       	sbiw	r24, 0x01	; 1
     32c:	11 96       	adiw	r26, 0x01	; 1
     32e:	9c 93       	st	X, r25
     330:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     332:	fe 01       	movw	r30, r28
     334:	ed 5b       	subi	r30, 0xBD	; 189
     336:	ff 4f       	sbci	r31, 0xFF	; 255
     338:	80 81       	ld	r24, Z
     33a:	91 81       	ldd	r25, Z+1	; 0x01
     33c:	00 97       	sbiw	r24, 0x00	; 0
     33e:	d1 f6       	brne	.-76     	; 0x2f4 <main+0x25e>
     340:	24 c0       	rjmp	.+72     	; 0x38a <main+0x2f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     342:	8e 01       	movw	r16, r28
     344:	0d 5b       	subi	r16, 0xBD	; 189
     346:	1f 4f       	sbci	r17, 0xFF	; 255
     348:	fe 01       	movw	r30, r28
     34a:	eb 5b       	subi	r30, 0xBB	; 187
     34c:	ff 4f       	sbci	r31, 0xFF	; 255
     34e:	60 81       	ld	r22, Z
     350:	71 81       	ldd	r23, Z+1	; 0x01
     352:	82 81       	ldd	r24, Z+2	; 0x02
     354:	93 81       	ldd	r25, Z+3	; 0x03
     356:	0e 94 98 04 	call	0x930	; 0x930 <__fixunssfsi>
     35a:	dc 01       	movw	r26, r24
     35c:	cb 01       	movw	r24, r22
     35e:	f8 01       	movw	r30, r16
     360:	91 83       	std	Z+1, r25	; 0x01
     362:	80 83       	st	Z, r24
     364:	fe 01       	movw	r30, r28
     366:	ed 5b       	subi	r30, 0xBD	; 189
     368:	ff 4f       	sbci	r31, 0xFF	; 255
     36a:	80 81       	ld	r24, Z
     36c:	91 81       	ldd	r25, Z+1	; 0x01
     36e:	fe 01       	movw	r30, r28
     370:	ff 96       	adiw	r30, 0x3f	; 63
     372:	91 83       	std	Z+1, r25	; 0x01
     374:	80 83       	st	Z, r24
     376:	fe 01       	movw	r30, r28
     378:	ff 96       	adiw	r30, 0x3f	; 63
     37a:	80 81       	ld	r24, Z
     37c:	91 81       	ldd	r25, Z+1	; 0x01
     37e:	01 97       	sbiw	r24, 0x01	; 1
     380:	f1 f7       	brne	.-4      	; 0x37e <main+0x2e8>
     382:	fe 01       	movw	r30, r28
     384:	ff 96       	adiw	r30, 0x3f	; 63
     386:	91 83       	std	Z+1, r25	; 0x01
     388:	80 83       	st	Z, r24
_delay_ms(2);
CURSOUR(0x38); // set 8 bit 2 line for 1 line 0x30
     38a:	88 e3       	ldi	r24, 0x38	; 56
     38c:	0e 94 59 04 	call	0x8b2	; 0x8b2 <CURSOUR>
     390:	80 e0       	ldi	r24, 0x00	; 0
     392:	90 e0       	ldi	r25, 0x00	; 0
     394:	a8 e4       	ldi	r26, 0x48	; 72
     396:	b2 e4       	ldi	r27, 0x42	; 66
     398:	8b af       	std	Y+59, r24	; 0x3b
     39a:	9c af       	std	Y+60, r25	; 0x3c
     39c:	ad af       	std	Y+61, r26	; 0x3d
     39e:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     3a0:	6b ad       	ldd	r22, Y+59	; 0x3b
     3a2:	7c ad       	ldd	r23, Y+60	; 0x3c
     3a4:	8d ad       	ldd	r24, Y+61	; 0x3d
     3a6:	9e ad       	ldd	r25, Y+62	; 0x3e
     3a8:	2b ea       	ldi	r18, 0xAB	; 171
     3aa:	3a ea       	ldi	r19, 0xAA	; 170
     3ac:	4a ea       	ldi	r20, 0xAA	; 170
     3ae:	50 e4       	ldi	r21, 0x40	; 64
     3b0:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
     3b4:	dc 01       	movw	r26, r24
     3b6:	cb 01       	movw	r24, r22
     3b8:	8f ab       	std	Y+55, r24	; 0x37
     3ba:	98 af       	std	Y+56, r25	; 0x38
     3bc:	a9 af       	std	Y+57, r26	; 0x39
     3be:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
     3c0:	6f a9       	ldd	r22, Y+55	; 0x37
     3c2:	78 ad       	ldd	r23, Y+56	; 0x38
     3c4:	89 ad       	ldd	r24, Y+57	; 0x39
     3c6:	9a ad       	ldd	r25, Y+58	; 0x3a
     3c8:	20 e0       	ldi	r18, 0x00	; 0
     3ca:	30 e0       	ldi	r19, 0x00	; 0
     3cc:	40 e8       	ldi	r20, 0x80	; 128
     3ce:	5f e3       	ldi	r21, 0x3F	; 63
     3d0:	0e 94 74 08 	call	0x10e8	; 0x10e8 <__ltsf2>
     3d4:	88 23       	and	r24, r24
     3d6:	1c f4       	brge	.+6      	; 0x3de <main+0x348>
		__ticks = 1;
     3d8:	81 e0       	ldi	r24, 0x01	; 1
     3da:	8e ab       	std	Y+54, r24	; 0x36
     3dc:	91 c0       	rjmp	.+290    	; 0x500 <main+0x46a>
	else if (__tmp > 255)
     3de:	6f a9       	ldd	r22, Y+55	; 0x37
     3e0:	78 ad       	ldd	r23, Y+56	; 0x38
     3e2:	89 ad       	ldd	r24, Y+57	; 0x39
     3e4:	9a ad       	ldd	r25, Y+58	; 0x3a
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	4f e7       	ldi	r20, 0x7F	; 127
     3ec:	53 e4       	ldi	r21, 0x43	; 67
     3ee:	0e 94 14 08 	call	0x1028	; 0x1028 <__gtsf2>
     3f2:	18 16       	cp	r1, r24
     3f4:	0c f0       	brlt	.+2      	; 0x3f8 <main+0x362>
     3f6:	7b c0       	rjmp	.+246    	; 0x4ee <main+0x458>
	{
		_delay_ms(__us / 1000.0);
     3f8:	6b ad       	ldd	r22, Y+59	; 0x3b
     3fa:	7c ad       	ldd	r23, Y+60	; 0x3c
     3fc:	8d ad       	ldd	r24, Y+61	; 0x3d
     3fe:	9e ad       	ldd	r25, Y+62	; 0x3e
     400:	20 e0       	ldi	r18, 0x00	; 0
     402:	30 e0       	ldi	r19, 0x00	; 0
     404:	4a e7       	ldi	r20, 0x7A	; 122
     406:	54 e4       	ldi	r21, 0x44	; 68
     408:	0e 94 68 07 	call	0xed0	; 0xed0 <__divsf3>
     40c:	dc 01       	movw	r26, r24
     40e:	cb 01       	movw	r24, r22
     410:	8a ab       	std	Y+50, r24	; 0x32
     412:	9b ab       	std	Y+51, r25	; 0x33
     414:	ac ab       	std	Y+52, r26	; 0x34
     416:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     418:	6a a9       	ldd	r22, Y+50	; 0x32
     41a:	7b a9       	ldd	r23, Y+51	; 0x33
     41c:	8c a9       	ldd	r24, Y+52	; 0x34
     41e:	9d a9       	ldd	r25, Y+53	; 0x35
     420:	20 e0       	ldi	r18, 0x00	; 0
     422:	30 e0       	ldi	r19, 0x00	; 0
     424:	4a e7       	ldi	r20, 0x7A	; 122
     426:	55 e4       	ldi	r21, 0x45	; 69
     428:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
     42c:	dc 01       	movw	r26, r24
     42e:	cb 01       	movw	r24, r22
     430:	8e a7       	std	Y+46, r24	; 0x2e
     432:	9f a7       	std	Y+47, r25	; 0x2f
     434:	a8 ab       	std	Y+48, r26	; 0x30
     436:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
     438:	6e a5       	ldd	r22, Y+46	; 0x2e
     43a:	7f a5       	ldd	r23, Y+47	; 0x2f
     43c:	88 a9       	ldd	r24, Y+48	; 0x30
     43e:	99 a9       	ldd	r25, Y+49	; 0x31
     440:	20 e0       	ldi	r18, 0x00	; 0
     442:	30 e0       	ldi	r19, 0x00	; 0
     444:	40 e8       	ldi	r20, 0x80	; 128
     446:	5f e3       	ldi	r21, 0x3F	; 63
     448:	0e 94 74 08 	call	0x10e8	; 0x10e8 <__ltsf2>
     44c:	88 23       	and	r24, r24
     44e:	2c f4       	brge	.+10     	; 0x45a <main+0x3c4>
		__ticks = 1;
     450:	81 e0       	ldi	r24, 0x01	; 1
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	9d a7       	std	Y+45, r25	; 0x2d
     456:	8c a7       	std	Y+44, r24	; 0x2c
     458:	3f c0       	rjmp	.+126    	; 0x4d8 <main+0x442>
	else if (__tmp > 65535)
     45a:	6e a5       	ldd	r22, Y+46	; 0x2e
     45c:	7f a5       	ldd	r23, Y+47	; 0x2f
     45e:	88 a9       	ldd	r24, Y+48	; 0x30
     460:	99 a9       	ldd	r25, Y+49	; 0x31
     462:	20 e0       	ldi	r18, 0x00	; 0
     464:	3f ef       	ldi	r19, 0xFF	; 255
     466:	4f e7       	ldi	r20, 0x7F	; 127
     468:	57 e4       	ldi	r21, 0x47	; 71
     46a:	0e 94 14 08 	call	0x1028	; 0x1028 <__gtsf2>
     46e:	18 16       	cp	r1, r24
     470:	4c f5       	brge	.+82     	; 0x4c4 <main+0x42e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     472:	6a a9       	ldd	r22, Y+50	; 0x32
     474:	7b a9       	ldd	r23, Y+51	; 0x33
     476:	8c a9       	ldd	r24, Y+52	; 0x34
     478:	9d a9       	ldd	r25, Y+53	; 0x35
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	30 e0       	ldi	r19, 0x00	; 0
     47e:	40 e2       	ldi	r20, 0x20	; 32
     480:	51 e4       	ldi	r21, 0x41	; 65
     482:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
     486:	dc 01       	movw	r26, r24
     488:	cb 01       	movw	r24, r22
     48a:	bc 01       	movw	r22, r24
     48c:	cd 01       	movw	r24, r26
     48e:	0e 94 98 04 	call	0x930	; 0x930 <__fixunssfsi>
     492:	dc 01       	movw	r26, r24
     494:	cb 01       	movw	r24, r22
     496:	9d a7       	std	Y+45, r25	; 0x2d
     498:	8c a7       	std	Y+44, r24	; 0x2c
     49a:	0f c0       	rjmp	.+30     	; 0x4ba <main+0x424>
     49c:	80 e9       	ldi	r24, 0x90	; 144
     49e:	91 e0       	ldi	r25, 0x01	; 1
     4a0:	9b a7       	std	Y+43, r25	; 0x2b
     4a2:	8a a7       	std	Y+42, r24	; 0x2a
     4a4:	8a a5       	ldd	r24, Y+42	; 0x2a
     4a6:	9b a5       	ldd	r25, Y+43	; 0x2b
     4a8:	01 97       	sbiw	r24, 0x01	; 1
     4aa:	f1 f7       	brne	.-4      	; 0x4a8 <main+0x412>
     4ac:	9b a7       	std	Y+43, r25	; 0x2b
     4ae:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4b0:	8c a5       	ldd	r24, Y+44	; 0x2c
     4b2:	9d a5       	ldd	r25, Y+45	; 0x2d
     4b4:	01 97       	sbiw	r24, 0x01	; 1
     4b6:	9d a7       	std	Y+45, r25	; 0x2d
     4b8:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4ba:	8c a5       	ldd	r24, Y+44	; 0x2c
     4bc:	9d a5       	ldd	r25, Y+45	; 0x2d
     4be:	00 97       	sbiw	r24, 0x00	; 0
     4c0:	69 f7       	brne	.-38     	; 0x49c <main+0x406>
     4c2:	24 c0       	rjmp	.+72     	; 0x50c <main+0x476>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4c4:	6e a5       	ldd	r22, Y+46	; 0x2e
     4c6:	7f a5       	ldd	r23, Y+47	; 0x2f
     4c8:	88 a9       	ldd	r24, Y+48	; 0x30
     4ca:	99 a9       	ldd	r25, Y+49	; 0x31
     4cc:	0e 94 98 04 	call	0x930	; 0x930 <__fixunssfsi>
     4d0:	dc 01       	movw	r26, r24
     4d2:	cb 01       	movw	r24, r22
     4d4:	9d a7       	std	Y+45, r25	; 0x2d
     4d6:	8c a7       	std	Y+44, r24	; 0x2c
     4d8:	8c a5       	ldd	r24, Y+44	; 0x2c
     4da:	9d a5       	ldd	r25, Y+45	; 0x2d
     4dc:	99 a7       	std	Y+41, r25	; 0x29
     4de:	88 a7       	std	Y+40, r24	; 0x28
     4e0:	88 a5       	ldd	r24, Y+40	; 0x28
     4e2:	99 a5       	ldd	r25, Y+41	; 0x29
     4e4:	01 97       	sbiw	r24, 0x01	; 1
     4e6:	f1 f7       	brne	.-4      	; 0x4e4 <main+0x44e>
     4e8:	99 a7       	std	Y+41, r25	; 0x29
     4ea:	88 a7       	std	Y+40, r24	; 0x28
     4ec:	0f c0       	rjmp	.+30     	; 0x50c <main+0x476>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     4ee:	6f a9       	ldd	r22, Y+55	; 0x37
     4f0:	78 ad       	ldd	r23, Y+56	; 0x38
     4f2:	89 ad       	ldd	r24, Y+57	; 0x39
     4f4:	9a ad       	ldd	r25, Y+58	; 0x3a
     4f6:	0e 94 98 04 	call	0x930	; 0x930 <__fixunssfsi>
     4fa:	dc 01       	movw	r26, r24
     4fc:	cb 01       	movw	r24, r22
     4fe:	8e ab       	std	Y+54, r24	; 0x36
     500:	8e a9       	ldd	r24, Y+54	; 0x36
     502:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     504:	8f a1       	ldd	r24, Y+39	; 0x27
     506:	8a 95       	dec	r24
     508:	f1 f7       	brne	.-4      	; 0x506 <main+0x470>
     50a:	8f a3       	std	Y+39, r24	; 0x27
_delay_us(50);
CURSOUR(0b00001110); // display on cursor on 0x0E
     50c:	8e e0       	ldi	r24, 0x0E	; 14
     50e:	0e 94 59 04 	call	0x8b2	; 0x8b2 <CURSOUR>
     512:	80 e0       	ldi	r24, 0x00	; 0
     514:	90 e0       	ldi	r25, 0x00	; 0
     516:	a8 e4       	ldi	r26, 0x48	; 72
     518:	b2 e4       	ldi	r27, 0x42	; 66
     51a:	8b a3       	std	Y+35, r24	; 0x23
     51c:	9c a3       	std	Y+36, r25	; 0x24
     51e:	ad a3       	std	Y+37, r26	; 0x25
     520:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     522:	6b a1       	ldd	r22, Y+35	; 0x23
     524:	7c a1       	ldd	r23, Y+36	; 0x24
     526:	8d a1       	ldd	r24, Y+37	; 0x25
     528:	9e a1       	ldd	r25, Y+38	; 0x26
     52a:	2b ea       	ldi	r18, 0xAB	; 171
     52c:	3a ea       	ldi	r19, 0xAA	; 170
     52e:	4a ea       	ldi	r20, 0xAA	; 170
     530:	50 e4       	ldi	r21, 0x40	; 64
     532:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
     536:	dc 01       	movw	r26, r24
     538:	cb 01       	movw	r24, r22
     53a:	8f 8f       	std	Y+31, r24	; 0x1f
     53c:	98 a3       	std	Y+32, r25	; 0x20
     53e:	a9 a3       	std	Y+33, r26	; 0x21
     540:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
     542:	6f 8d       	ldd	r22, Y+31	; 0x1f
     544:	78 a1       	ldd	r23, Y+32	; 0x20
     546:	89 a1       	ldd	r24, Y+33	; 0x21
     548:	9a a1       	ldd	r25, Y+34	; 0x22
     54a:	20 e0       	ldi	r18, 0x00	; 0
     54c:	30 e0       	ldi	r19, 0x00	; 0
     54e:	40 e8       	ldi	r20, 0x80	; 128
     550:	5f e3       	ldi	r21, 0x3F	; 63
     552:	0e 94 74 08 	call	0x10e8	; 0x10e8 <__ltsf2>
     556:	88 23       	and	r24, r24
     558:	1c f4       	brge	.+6      	; 0x560 <main+0x4ca>
		__ticks = 1;
     55a:	81 e0       	ldi	r24, 0x01	; 1
     55c:	8e 8f       	std	Y+30, r24	; 0x1e
     55e:	91 c0       	rjmp	.+290    	; 0x682 <main+0x5ec>
	else if (__tmp > 255)
     560:	6f 8d       	ldd	r22, Y+31	; 0x1f
     562:	78 a1       	ldd	r23, Y+32	; 0x20
     564:	89 a1       	ldd	r24, Y+33	; 0x21
     566:	9a a1       	ldd	r25, Y+34	; 0x22
     568:	20 e0       	ldi	r18, 0x00	; 0
     56a:	30 e0       	ldi	r19, 0x00	; 0
     56c:	4f e7       	ldi	r20, 0x7F	; 127
     56e:	53 e4       	ldi	r21, 0x43	; 67
     570:	0e 94 14 08 	call	0x1028	; 0x1028 <__gtsf2>
     574:	18 16       	cp	r1, r24
     576:	0c f0       	brlt	.+2      	; 0x57a <main+0x4e4>
     578:	7b c0       	rjmp	.+246    	; 0x670 <main+0x5da>
	{
		_delay_ms(__us / 1000.0);
     57a:	6b a1       	ldd	r22, Y+35	; 0x23
     57c:	7c a1       	ldd	r23, Y+36	; 0x24
     57e:	8d a1       	ldd	r24, Y+37	; 0x25
     580:	9e a1       	ldd	r25, Y+38	; 0x26
     582:	20 e0       	ldi	r18, 0x00	; 0
     584:	30 e0       	ldi	r19, 0x00	; 0
     586:	4a e7       	ldi	r20, 0x7A	; 122
     588:	54 e4       	ldi	r21, 0x44	; 68
     58a:	0e 94 68 07 	call	0xed0	; 0xed0 <__divsf3>
     58e:	dc 01       	movw	r26, r24
     590:	cb 01       	movw	r24, r22
     592:	8a 8f       	std	Y+26, r24	; 0x1a
     594:	9b 8f       	std	Y+27, r25	; 0x1b
     596:	ac 8f       	std	Y+28, r26	; 0x1c
     598:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     59a:	6a 8d       	ldd	r22, Y+26	; 0x1a
     59c:	7b 8d       	ldd	r23, Y+27	; 0x1b
     59e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     5a0:	9d 8d       	ldd	r25, Y+29	; 0x1d
     5a2:	20 e0       	ldi	r18, 0x00	; 0
     5a4:	30 e0       	ldi	r19, 0x00	; 0
     5a6:	4a e7       	ldi	r20, 0x7A	; 122
     5a8:	55 e4       	ldi	r21, 0x45	; 69
     5aa:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
     5ae:	dc 01       	movw	r26, r24
     5b0:	cb 01       	movw	r24, r22
     5b2:	8e 8b       	std	Y+22, r24	; 0x16
     5b4:	9f 8b       	std	Y+23, r25	; 0x17
     5b6:	a8 8f       	std	Y+24, r26	; 0x18
     5b8:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
     5ba:	6e 89       	ldd	r22, Y+22	; 0x16
     5bc:	7f 89       	ldd	r23, Y+23	; 0x17
     5be:	88 8d       	ldd	r24, Y+24	; 0x18
     5c0:	99 8d       	ldd	r25, Y+25	; 0x19
     5c2:	20 e0       	ldi	r18, 0x00	; 0
     5c4:	30 e0       	ldi	r19, 0x00	; 0
     5c6:	40 e8       	ldi	r20, 0x80	; 128
     5c8:	5f e3       	ldi	r21, 0x3F	; 63
     5ca:	0e 94 74 08 	call	0x10e8	; 0x10e8 <__ltsf2>
     5ce:	88 23       	and	r24, r24
     5d0:	2c f4       	brge	.+10     	; 0x5dc <main+0x546>
		__ticks = 1;
     5d2:	81 e0       	ldi	r24, 0x01	; 1
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	9d 8b       	std	Y+21, r25	; 0x15
     5d8:	8c 8b       	std	Y+20, r24	; 0x14
     5da:	3f c0       	rjmp	.+126    	; 0x65a <main+0x5c4>
	else if (__tmp > 65535)
     5dc:	6e 89       	ldd	r22, Y+22	; 0x16
     5de:	7f 89       	ldd	r23, Y+23	; 0x17
     5e0:	88 8d       	ldd	r24, Y+24	; 0x18
     5e2:	99 8d       	ldd	r25, Y+25	; 0x19
     5e4:	20 e0       	ldi	r18, 0x00	; 0
     5e6:	3f ef       	ldi	r19, 0xFF	; 255
     5e8:	4f e7       	ldi	r20, 0x7F	; 127
     5ea:	57 e4       	ldi	r21, 0x47	; 71
     5ec:	0e 94 14 08 	call	0x1028	; 0x1028 <__gtsf2>
     5f0:	18 16       	cp	r1, r24
     5f2:	4c f5       	brge	.+82     	; 0x646 <main+0x5b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5f4:	6a 8d       	ldd	r22, Y+26	; 0x1a
     5f6:	7b 8d       	ldd	r23, Y+27	; 0x1b
     5f8:	8c 8d       	ldd	r24, Y+28	; 0x1c
     5fa:	9d 8d       	ldd	r25, Y+29	; 0x1d
     5fc:	20 e0       	ldi	r18, 0x00	; 0
     5fe:	30 e0       	ldi	r19, 0x00	; 0
     600:	40 e2       	ldi	r20, 0x20	; 32
     602:	51 e4       	ldi	r21, 0x41	; 65
     604:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
     608:	dc 01       	movw	r26, r24
     60a:	cb 01       	movw	r24, r22
     60c:	bc 01       	movw	r22, r24
     60e:	cd 01       	movw	r24, r26
     610:	0e 94 98 04 	call	0x930	; 0x930 <__fixunssfsi>
     614:	dc 01       	movw	r26, r24
     616:	cb 01       	movw	r24, r22
     618:	9d 8b       	std	Y+21, r25	; 0x15
     61a:	8c 8b       	std	Y+20, r24	; 0x14
     61c:	0f c0       	rjmp	.+30     	; 0x63c <main+0x5a6>
     61e:	80 e9       	ldi	r24, 0x90	; 144
     620:	91 e0       	ldi	r25, 0x01	; 1
     622:	9b 8b       	std	Y+19, r25	; 0x13
     624:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     626:	8a 89       	ldd	r24, Y+18	; 0x12
     628:	9b 89       	ldd	r25, Y+19	; 0x13
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	f1 f7       	brne	.-4      	; 0x62a <main+0x594>
     62e:	9b 8b       	std	Y+19, r25	; 0x13
     630:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     632:	8c 89       	ldd	r24, Y+20	; 0x14
     634:	9d 89       	ldd	r25, Y+21	; 0x15
     636:	01 97       	sbiw	r24, 0x01	; 1
     638:	9d 8b       	std	Y+21, r25	; 0x15
     63a:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     63c:	8c 89       	ldd	r24, Y+20	; 0x14
     63e:	9d 89       	ldd	r25, Y+21	; 0x15
     640:	00 97       	sbiw	r24, 0x00	; 0
     642:	69 f7       	brne	.-38     	; 0x61e <main+0x588>
     644:	24 c0       	rjmp	.+72     	; 0x68e <main+0x5f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     646:	6e 89       	ldd	r22, Y+22	; 0x16
     648:	7f 89       	ldd	r23, Y+23	; 0x17
     64a:	88 8d       	ldd	r24, Y+24	; 0x18
     64c:	99 8d       	ldd	r25, Y+25	; 0x19
     64e:	0e 94 98 04 	call	0x930	; 0x930 <__fixunssfsi>
     652:	dc 01       	movw	r26, r24
     654:	cb 01       	movw	r24, r22
     656:	9d 8b       	std	Y+21, r25	; 0x15
     658:	8c 8b       	std	Y+20, r24	; 0x14
     65a:	8c 89       	ldd	r24, Y+20	; 0x14
     65c:	9d 89       	ldd	r25, Y+21	; 0x15
     65e:	99 8b       	std	Y+17, r25	; 0x11
     660:	88 8b       	std	Y+16, r24	; 0x10
     662:	88 89       	ldd	r24, Y+16	; 0x10
     664:	99 89       	ldd	r25, Y+17	; 0x11
     666:	01 97       	sbiw	r24, 0x01	; 1
     668:	f1 f7       	brne	.-4      	; 0x666 <main+0x5d0>
     66a:	99 8b       	std	Y+17, r25	; 0x11
     66c:	88 8b       	std	Y+16, r24	; 0x10
     66e:	0f c0       	rjmp	.+30     	; 0x68e <main+0x5f8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     670:	6f 8d       	ldd	r22, Y+31	; 0x1f
     672:	78 a1       	ldd	r23, Y+32	; 0x20
     674:	89 a1       	ldd	r24, Y+33	; 0x21
     676:	9a a1       	ldd	r25, Y+34	; 0x22
     678:	0e 94 98 04 	call	0x930	; 0x930 <__fixunssfsi>
     67c:	dc 01       	movw	r26, r24
     67e:	cb 01       	movw	r24, r22
     680:	8e 8f       	std	Y+30, r24	; 0x1e
     682:	8e 8d       	ldd	r24, Y+30	; 0x1e
     684:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     686:	8f 85       	ldd	r24, Y+15	; 0x0f
     688:	8a 95       	dec	r24
     68a:	f1 f7       	brne	.-4      	; 0x688 <main+0x5f2>
     68c:	8f 87       	std	Y+15, r24	; 0x0f
            STRING("X");}*/
int i,j;//=0;

    while(1)
    {
for(i=0;i<128;i++){
     68e:	fe 01       	movw	r30, r28
     690:	e3 5a       	subi	r30, 0xA3	; 163
     692:	ff 4f       	sbci	r31, 0xFF	; 255
     694:	11 82       	std	Z+1, r1	; 0x01
     696:	10 82       	st	Z, r1
     698:	a9 c0       	rjmp	.+338    	; 0x7ec <main+0x756>
                    CURSOUR(0x80+i);
     69a:	fe 01       	movw	r30, r28
     69c:	e3 5a       	subi	r30, 0xA3	; 163
     69e:	ff 4f       	sbci	r31, 0xFF	; 255
     6a0:	80 81       	ld	r24, Z
     6a2:	80 58       	subi	r24, 0x80	; 128
     6a4:	0e 94 59 04 	call	0x8b2	; 0x8b2 <CURSOUR>
                    STRING("X");
     6a8:	80 e0       	ldi	r24, 0x00	; 0
     6aa:	91 e0       	ldi	r25, 0x01	; 1
     6ac:	0e 94 00 04 	call	0x800	; 0x800 <STRING>
                    itoa(i,str,10);
     6b0:	fe 01       	movw	r30, r28
     6b2:	e3 5a       	subi	r30, 0xA3	; 163
     6b4:	ff 4f       	sbci	r31, 0xFF	; 255
     6b6:	80 81       	ld	r24, Z
     6b8:	91 81       	ldd	r25, Z+1	; 0x01
     6ba:	9e 01       	movw	r18, r28
     6bc:	21 5a       	subi	r18, 0xA1	; 161
     6be:	3f 4f       	sbci	r19, 0xFF	; 255
     6c0:	b9 01       	movw	r22, r18
     6c2:	4a e0       	ldi	r20, 0x0A	; 10
     6c4:	50 e0       	ldi	r21, 0x00	; 0
     6c6:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <itoa>
                    CURSOUR(0x80+97); // location (97) where need to show info
     6ca:	81 ee       	ldi	r24, 0xE1	; 225
     6cc:	0e 94 59 04 	call	0x8b2	; 0x8b2 <CURSOUR>
                    STRING(str);
     6d0:	ce 01       	movw	r24, r28
     6d2:	81 5a       	subi	r24, 0xA1	; 161
     6d4:	9f 4f       	sbci	r25, 0xFF	; 255
     6d6:	0e 94 00 04 	call	0x800	; 0x800 <STRING>
     6da:	80 e0       	ldi	r24, 0x00	; 0
     6dc:	90 e0       	ldi	r25, 0x00	; 0
     6de:	a8 e4       	ldi	r26, 0x48	; 72
     6e0:	b3 e4       	ldi	r27, 0x43	; 67
     6e2:	8b 87       	std	Y+11, r24	; 0x0b
     6e4:	9c 87       	std	Y+12, r25	; 0x0c
     6e6:	ad 87       	std	Y+13, r26	; 0x0d
     6e8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     6ea:	6b 85       	ldd	r22, Y+11	; 0x0b
     6ec:	7c 85       	ldd	r23, Y+12	; 0x0c
     6ee:	8d 85       	ldd	r24, Y+13	; 0x0d
     6f0:	9e 85       	ldd	r25, Y+14	; 0x0e
     6f2:	20 e0       	ldi	r18, 0x00	; 0
     6f4:	30 e0       	ldi	r19, 0x00	; 0
     6f6:	4a e7       	ldi	r20, 0x7A	; 122
     6f8:	55 e4       	ldi	r21, 0x45	; 69
     6fa:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
     6fe:	dc 01       	movw	r26, r24
     700:	cb 01       	movw	r24, r22
     702:	8f 83       	std	Y+7, r24	; 0x07
     704:	98 87       	std	Y+8, r25	; 0x08
     706:	a9 87       	std	Y+9, r26	; 0x09
     708:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     70a:	6f 81       	ldd	r22, Y+7	; 0x07
     70c:	78 85       	ldd	r23, Y+8	; 0x08
     70e:	89 85       	ldd	r24, Y+9	; 0x09
     710:	9a 85       	ldd	r25, Y+10	; 0x0a
     712:	20 e0       	ldi	r18, 0x00	; 0
     714:	30 e0       	ldi	r19, 0x00	; 0
     716:	40 e8       	ldi	r20, 0x80	; 128
     718:	5f e3       	ldi	r21, 0x3F	; 63
     71a:	0e 94 74 08 	call	0x10e8	; 0x10e8 <__ltsf2>
     71e:	88 23       	and	r24, r24
     720:	2c f4       	brge	.+10     	; 0x72c <main+0x696>
		__ticks = 1;
     722:	81 e0       	ldi	r24, 0x01	; 1
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	9e 83       	std	Y+6, r25	; 0x06
     728:	8d 83       	std	Y+5, r24	; 0x05
     72a:	3f c0       	rjmp	.+126    	; 0x7aa <main+0x714>
	else if (__tmp > 65535)
     72c:	6f 81       	ldd	r22, Y+7	; 0x07
     72e:	78 85       	ldd	r23, Y+8	; 0x08
     730:	89 85       	ldd	r24, Y+9	; 0x09
     732:	9a 85       	ldd	r25, Y+10	; 0x0a
     734:	20 e0       	ldi	r18, 0x00	; 0
     736:	3f ef       	ldi	r19, 0xFF	; 255
     738:	4f e7       	ldi	r20, 0x7F	; 127
     73a:	57 e4       	ldi	r21, 0x47	; 71
     73c:	0e 94 14 08 	call	0x1028	; 0x1028 <__gtsf2>
     740:	18 16       	cp	r1, r24
     742:	4c f5       	brge	.+82     	; 0x796 <main+0x700>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     744:	6b 85       	ldd	r22, Y+11	; 0x0b
     746:	7c 85       	ldd	r23, Y+12	; 0x0c
     748:	8d 85       	ldd	r24, Y+13	; 0x0d
     74a:	9e 85       	ldd	r25, Y+14	; 0x0e
     74c:	20 e0       	ldi	r18, 0x00	; 0
     74e:	30 e0       	ldi	r19, 0x00	; 0
     750:	40 e2       	ldi	r20, 0x20	; 32
     752:	51 e4       	ldi	r21, 0x41	; 65
     754:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__mulsf3>
     758:	dc 01       	movw	r26, r24
     75a:	cb 01       	movw	r24, r22
     75c:	bc 01       	movw	r22, r24
     75e:	cd 01       	movw	r24, r26
     760:	0e 94 98 04 	call	0x930	; 0x930 <__fixunssfsi>
     764:	dc 01       	movw	r26, r24
     766:	cb 01       	movw	r24, r22
     768:	9e 83       	std	Y+6, r25	; 0x06
     76a:	8d 83       	std	Y+5, r24	; 0x05
     76c:	0f c0       	rjmp	.+30     	; 0x78c <main+0x6f6>
     76e:	80 e9       	ldi	r24, 0x90	; 144
     770:	91 e0       	ldi	r25, 0x01	; 1
     772:	9c 83       	std	Y+4, r25	; 0x04
     774:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     776:	8b 81       	ldd	r24, Y+3	; 0x03
     778:	9c 81       	ldd	r25, Y+4	; 0x04
     77a:	01 97       	sbiw	r24, 0x01	; 1
     77c:	f1 f7       	brne	.-4      	; 0x77a <main+0x6e4>
     77e:	9c 83       	std	Y+4, r25	; 0x04
     780:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     782:	8d 81       	ldd	r24, Y+5	; 0x05
     784:	9e 81       	ldd	r25, Y+6	; 0x06
     786:	01 97       	sbiw	r24, 0x01	; 1
     788:	9e 83       	std	Y+6, r25	; 0x06
     78a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     78c:	8d 81       	ldd	r24, Y+5	; 0x05
     78e:	9e 81       	ldd	r25, Y+6	; 0x06
     790:	00 97       	sbiw	r24, 0x00	; 0
     792:	69 f7       	brne	.-38     	; 0x76e <main+0x6d8>
     794:	14 c0       	rjmp	.+40     	; 0x7be <main+0x728>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     796:	6f 81       	ldd	r22, Y+7	; 0x07
     798:	78 85       	ldd	r23, Y+8	; 0x08
     79a:	89 85       	ldd	r24, Y+9	; 0x09
     79c:	9a 85       	ldd	r25, Y+10	; 0x0a
     79e:	0e 94 98 04 	call	0x930	; 0x930 <__fixunssfsi>
     7a2:	dc 01       	movw	r26, r24
     7a4:	cb 01       	movw	r24, r22
     7a6:	9e 83       	std	Y+6, r25	; 0x06
     7a8:	8d 83       	std	Y+5, r24	; 0x05
     7aa:	8d 81       	ldd	r24, Y+5	; 0x05
     7ac:	9e 81       	ldd	r25, Y+6	; 0x06
     7ae:	9a 83       	std	Y+2, r25	; 0x02
     7b0:	89 83       	std	Y+1, r24	; 0x01
     7b2:	89 81       	ldd	r24, Y+1	; 0x01
     7b4:	9a 81       	ldd	r25, Y+2	; 0x02
     7b6:	01 97       	sbiw	r24, 0x01	; 1
     7b8:	f1 f7       	brne	.-4      	; 0x7b6 <main+0x720>
     7ba:	9a 83       	std	Y+2, r25	; 0x02
     7bc:	89 83       	std	Y+1, r24	; 0x01
                    _delay_ms(200);
                    CURSOUR(0x80+i);
     7be:	fe 01       	movw	r30, r28
     7c0:	e3 5a       	subi	r30, 0xA3	; 163
     7c2:	ff 4f       	sbci	r31, 0xFF	; 255
     7c4:	80 81       	ld	r24, Z
     7c6:	80 58       	subi	r24, 0x80	; 128
     7c8:	0e 94 59 04 	call	0x8b2	; 0x8b2 <CURSOUR>
                    STRING(" ");
     7cc:	82 e0       	ldi	r24, 0x02	; 2
     7ce:	91 e0       	ldi	r25, 0x01	; 1
     7d0:	0e 94 00 04 	call	0x800	; 0x800 <STRING>
            STRING("X");}*/
int i,j;//=0;

    while(1)
    {
for(i=0;i<128;i++){
     7d4:	de 01       	movw	r26, r28
     7d6:	a3 5a       	subi	r26, 0xA3	; 163
     7d8:	bf 4f       	sbci	r27, 0xFF	; 255
     7da:	fe 01       	movw	r30, r28
     7dc:	e3 5a       	subi	r30, 0xA3	; 163
     7de:	ff 4f       	sbci	r31, 0xFF	; 255
     7e0:	80 81       	ld	r24, Z
     7e2:	91 81       	ldd	r25, Z+1	; 0x01
     7e4:	01 96       	adiw	r24, 0x01	; 1
     7e6:	11 96       	adiw	r26, 0x01	; 1
     7e8:	9c 93       	st	X, r25
     7ea:	8e 93       	st	-X, r24
     7ec:	fe 01       	movw	r30, r28
     7ee:	e3 5a       	subi	r30, 0xA3	; 163
     7f0:	ff 4f       	sbci	r31, 0xFF	; 255
     7f2:	80 81       	ld	r24, Z
     7f4:	91 81       	ldd	r25, Z+1	; 0x01
     7f6:	80 38       	cpi	r24, 0x80	; 128
     7f8:	91 05       	cpc	r25, r1
     7fa:	0c f4       	brge	.+2      	; 0x7fe <main+0x768>
     7fc:	4e cf       	rjmp	.-356    	; 0x69a <main+0x604>
     7fe:	47 cf       	rjmp	.-370    	; 0x68e <main+0x5f8>

00000800 <STRING>:
                }
    }
    return 0;
}
void STRING(char *INPUT)
{
     800:	df 93       	push	r29
     802:	cf 93       	push	r28
     804:	00 d0       	rcall	.+0      	; 0x806 <STRING+0x6>
     806:	cd b7       	in	r28, 0x3d	; 61
     808:	de b7       	in	r29, 0x3e	; 62
     80a:	9a 83       	std	Y+2, r25	; 0x02
     80c:	89 83       	std	Y+1, r24	; 0x01
     80e:	0c c0       	rjmp	.+24     	; 0x828 <STRING+0x28>
    while(*INPUT!=0)
        TEXT(*INPUT++);
     810:	e9 81       	ldd	r30, Y+1	; 0x01
     812:	fa 81       	ldd	r31, Y+2	; 0x02
     814:	80 81       	ld	r24, Z
     816:	28 2f       	mov	r18, r24
     818:	89 81       	ldd	r24, Y+1	; 0x01
     81a:	9a 81       	ldd	r25, Y+2	; 0x02
     81c:	01 96       	adiw	r24, 0x01	; 1
     81e:	9a 83       	std	Y+2, r25	; 0x02
     820:	89 83       	std	Y+1, r24	; 0x01
     822:	82 2f       	mov	r24, r18
     824:	0e 94 75 04 	call	0x8ea	; 0x8ea <TEXT>
    }
    return 0;
}
void STRING(char *INPUT)
{
    while(*INPUT!=0)
     828:	e9 81       	ldd	r30, Y+1	; 0x01
     82a:	fa 81       	ldd	r31, Y+2	; 0x02
     82c:	80 81       	ld	r24, Z
     82e:	88 23       	and	r24, r24
     830:	79 f7       	brne	.-34     	; 0x810 <STRING+0x10>
        TEXT(*INPUT++);
}
     832:	0f 90       	pop	r0
     834:	0f 90       	pop	r0
     836:	cf 91       	pop	r28
     838:	df 91       	pop	r29
     83a:	08 95       	ret

0000083c <ROUTINE>:
void ROUTINE()
{
     83c:	df 93       	push	r29
     83e:	cf 93       	push	r28
     840:	cd b7       	in	r28, 0x3d	; 61
     842:	de b7       	in	r29, 0x3e	; 62
LCD_CONTROL  |=1<<ENABLE;
     844:	a5 e2       	ldi	r26, 0x25	; 37
     846:	b0 e0       	ldi	r27, 0x00	; 0
     848:	e5 e2       	ldi	r30, 0x25	; 37
     84a:	f0 e0       	ldi	r31, 0x00	; 0
     84c:	80 81       	ld	r24, Z
     84e:	84 60       	ori	r24, 0x04	; 4
     850:	8c 93       	st	X, r24
asm volatile("nop");
     852:	00 00       	nop
asm volatile("nop");
     854:	00 00       	nop
LCD_CONTROL &=~(1<<ENABLE);
     856:	a5 e2       	ldi	r26, 0x25	; 37
     858:	b0 e0       	ldi	r27, 0x00	; 0
     85a:	e5 e2       	ldi	r30, 0x25	; 37
     85c:	f0 e0       	ldi	r31, 0x00	; 0
     85e:	80 81       	ld	r24, Z
     860:	8b 7f       	andi	r24, 0xFB	; 251
     862:	8c 93       	st	X, r24
}
     864:	cf 91       	pop	r28
     866:	df 91       	pop	r29
     868:	08 95       	ret

0000086a <BUSYCHECK>:

void BUSYCHECK()      //CHECK LCD DISPLAY IS BUSY OR NOT
{
     86a:	df 93       	push	r29
     86c:	cf 93       	push	r28
     86e:	cd b7       	in	r28, 0x3d	; 61
     870:	de b7       	in	r29, 0x3e	; 62
PIN_DDR =0;
     872:	ea e2       	ldi	r30, 0x2A	; 42
     874:	f0 e0       	ldi	r31, 0x00	; 0
     876:	10 82       	st	Z, r1
LCD_CONTROL |=1<<READ_WRITE;
     878:	a5 e2       	ldi	r26, 0x25	; 37
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	e5 e2       	ldi	r30, 0x25	; 37
     87e:	f0 e0       	ldi	r31, 0x00	; 0
     880:	80 81       	ld	r24, Z
     882:	82 60       	ori	r24, 0x02	; 2
     884:	8c 93       	st	X, r24
LCD_CONTROL &=~(1<<REGISTR_SEL);
     886:	a5 e2       	ldi	r26, 0x25	; 37
     888:	b0 e0       	ldi	r27, 0x00	; 0
     88a:	e5 e2       	ldi	r30, 0x25	; 37
     88c:	f0 e0       	ldi	r31, 0x00	; 0
     88e:	80 81       	ld	r24, Z
     890:	87 7f       	andi	r24, 0xF7	; 247
     892:	8c 93       	st	X, r24
     894:	02 c0       	rjmp	.+4      	; 0x89a <BUSYCHECK+0x30>
while(LCD_PIN>=0x80)
{
    ROUTINE();
     896:	0e 94 1e 04 	call	0x83c	; 0x83c <ROUTINE>
void BUSYCHECK()      //CHECK LCD DISPLAY IS BUSY OR NOT
{
PIN_DDR =0;
LCD_CONTROL |=1<<READ_WRITE;
LCD_CONTROL &=~(1<<REGISTR_SEL);
while(LCD_PIN>=0x80)
     89a:	eb e2       	ldi	r30, 0x2B	; 43
     89c:	f0 e0       	ldi	r31, 0x00	; 0
     89e:	80 81       	ld	r24, Z
     8a0:	88 23       	and	r24, r24
     8a2:	cc f3       	brlt	.-14     	; 0x896 <BUSYCHECK+0x2c>
{
    ROUTINE();
}
PIN_DDR =0xFF;
     8a4:	ea e2       	ldi	r30, 0x2A	; 42
     8a6:	f0 e0       	ldi	r31, 0x00	; 0
     8a8:	8f ef       	ldi	r24, 0xFF	; 255
     8aa:	80 83       	st	Z, r24
}
     8ac:	cf 91       	pop	r28
     8ae:	df 91       	pop	r29
     8b0:	08 95       	ret

000008b2 <CURSOUR>:

void CURSOUR(unsigned char INPUT)
{
     8b2:	df 93       	push	r29
     8b4:	cf 93       	push	r28
     8b6:	0f 92       	push	r0
     8b8:	cd b7       	in	r28, 0x3d	; 61
     8ba:	de b7       	in	r29, 0x3e	; 62
     8bc:	89 83       	std	Y+1, r24	; 0x01
BUSYCHECK();
     8be:	0e 94 35 04 	call	0x86a	; 0x86a <BUSYCHECK>
LCD_PIN=INPUT;
     8c2:	eb e2       	ldi	r30, 0x2B	; 43
     8c4:	f0 e0       	ldi	r31, 0x00	; 0
     8c6:	89 81       	ldd	r24, Y+1	; 0x01
     8c8:	80 83       	st	Z, r24
LCD_CONTROL &=~(1<<READ_WRITE | 1<<REGISTR_SEL);
     8ca:	a5 e2       	ldi	r26, 0x25	; 37
     8cc:	b0 e0       	ldi	r27, 0x00	; 0
     8ce:	e5 e2       	ldi	r30, 0x25	; 37
     8d0:	f0 e0       	ldi	r31, 0x00	; 0
     8d2:	80 81       	ld	r24, Z
     8d4:	85 7f       	andi	r24, 0xF5	; 245
     8d6:	8c 93       	st	X, r24
ROUTINE();
     8d8:	0e 94 1e 04 	call	0x83c	; 0x83c <ROUTINE>
LCD_PIN=0;
     8dc:	eb e2       	ldi	r30, 0x2B	; 43
     8de:	f0 e0       	ldi	r31, 0x00	; 0
     8e0:	10 82       	st	Z, r1
}
     8e2:	0f 90       	pop	r0
     8e4:	cf 91       	pop	r28
     8e6:	df 91       	pop	r29
     8e8:	08 95       	ret

000008ea <TEXT>:

void TEXT(unsigned char INPUT)
{
     8ea:	df 93       	push	r29
     8ec:	cf 93       	push	r28
     8ee:	0f 92       	push	r0
     8f0:	cd b7       	in	r28, 0x3d	; 61
     8f2:	de b7       	in	r29, 0x3e	; 62
     8f4:	89 83       	std	Y+1, r24	; 0x01
    BUSYCHECK();
     8f6:	0e 94 35 04 	call	0x86a	; 0x86a <BUSYCHECK>
    LCD_PIN=INPUT;
     8fa:	eb e2       	ldi	r30, 0x2B	; 43
     8fc:	f0 e0       	ldi	r31, 0x00	; 0
     8fe:	89 81       	ldd	r24, Y+1	; 0x01
     900:	80 83       	st	Z, r24
    LCD_CONTROL &=~(1<<READ_WRITE);
     902:	a5 e2       	ldi	r26, 0x25	; 37
     904:	b0 e0       	ldi	r27, 0x00	; 0
     906:	e5 e2       	ldi	r30, 0x25	; 37
     908:	f0 e0       	ldi	r31, 0x00	; 0
     90a:	80 81       	ld	r24, Z
     90c:	8d 7f       	andi	r24, 0xFD	; 253
     90e:	8c 93       	st	X, r24
    LCD_CONTROL |=1<<REGISTR_SEL ;
     910:	a5 e2       	ldi	r26, 0x25	; 37
     912:	b0 e0       	ldi	r27, 0x00	; 0
     914:	e5 e2       	ldi	r30, 0x25	; 37
     916:	f0 e0       	ldi	r31, 0x00	; 0
     918:	80 81       	ld	r24, Z
     91a:	88 60       	ori	r24, 0x08	; 8
     91c:	8c 93       	st	X, r24
    ROUTINE();
     91e:	0e 94 1e 04 	call	0x83c	; 0x83c <ROUTINE>
    LCD_PIN=0;
     922:	eb e2       	ldi	r30, 0x2B	; 43
     924:	f0 e0       	ldi	r31, 0x00	; 0
     926:	10 82       	st	Z, r1
}
     928:	0f 90       	pop	r0
     92a:	cf 91       	pop	r28
     92c:	df 91       	pop	r29
     92e:	08 95       	ret

00000930 <__fixunssfsi>:
     930:	ef 92       	push	r14
     932:	ff 92       	push	r15
     934:	0f 93       	push	r16
     936:	1f 93       	push	r17
     938:	7b 01       	movw	r14, r22
     93a:	8c 01       	movw	r16, r24
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	40 e0       	ldi	r20, 0x00	; 0
     942:	5f e4       	ldi	r21, 0x4F	; 79
     944:	0e 94 44 08 	call	0x1088	; 0x1088 <__gesf2>
     948:	88 23       	and	r24, r24
     94a:	8c f0       	brlt	.+34     	; 0x96e <__fixunssfsi+0x3e>
     94c:	c8 01       	movw	r24, r16
     94e:	b7 01       	movw	r22, r14
     950:	20 e0       	ldi	r18, 0x00	; 0
     952:	30 e0       	ldi	r19, 0x00	; 0
     954:	40 e0       	ldi	r20, 0x00	; 0
     956:	5f e4       	ldi	r21, 0x4F	; 79
     958:	0e 94 10 06 	call	0xc20	; 0xc20 <__subsf3>
     95c:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixsfsi>
     960:	9b 01       	movw	r18, r22
     962:	ac 01       	movw	r20, r24
     964:	20 50       	subi	r18, 0x00	; 0
     966:	30 40       	sbci	r19, 0x00	; 0
     968:	40 40       	sbci	r20, 0x00	; 0
     96a:	50 48       	sbci	r21, 0x80	; 128
     96c:	06 c0       	rjmp	.+12     	; 0x97a <__fixunssfsi+0x4a>
     96e:	c8 01       	movw	r24, r16
     970:	b7 01       	movw	r22, r14
     972:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixsfsi>
     976:	9b 01       	movw	r18, r22
     978:	ac 01       	movw	r20, r24
     97a:	b9 01       	movw	r22, r18
     97c:	ca 01       	movw	r24, r20
     97e:	1f 91       	pop	r17
     980:	0f 91       	pop	r16
     982:	ff 90       	pop	r15
     984:	ef 90       	pop	r14
     986:	08 95       	ret

00000988 <_fpadd_parts>:
     988:	a0 e0       	ldi	r26, 0x00	; 0
     98a:	b0 e0       	ldi	r27, 0x00	; 0
     98c:	ea ec       	ldi	r30, 0xCA	; 202
     98e:	f4 e0       	ldi	r31, 0x04	; 4
     990:	0c 94 9e 0a 	jmp	0x153c	; 0x153c <__prologue_saves__>
     994:	dc 01       	movw	r26, r24
     996:	2b 01       	movw	r4, r22
     998:	fa 01       	movw	r30, r20
     99a:	9c 91       	ld	r25, X
     99c:	92 30       	cpi	r25, 0x02	; 2
     99e:	08 f4       	brcc	.+2      	; 0x9a2 <_fpadd_parts+0x1a>
     9a0:	39 c1       	rjmp	.+626    	; 0xc14 <_fpadd_parts+0x28c>
     9a2:	eb 01       	movw	r28, r22
     9a4:	88 81       	ld	r24, Y
     9a6:	82 30       	cpi	r24, 0x02	; 2
     9a8:	08 f4       	brcc	.+2      	; 0x9ac <_fpadd_parts+0x24>
     9aa:	33 c1       	rjmp	.+614    	; 0xc12 <_fpadd_parts+0x28a>
     9ac:	94 30       	cpi	r25, 0x04	; 4
     9ae:	69 f4       	brne	.+26     	; 0x9ca <_fpadd_parts+0x42>
     9b0:	84 30       	cpi	r24, 0x04	; 4
     9b2:	09 f0       	breq	.+2      	; 0x9b6 <_fpadd_parts+0x2e>
     9b4:	2f c1       	rjmp	.+606    	; 0xc14 <_fpadd_parts+0x28c>
     9b6:	11 96       	adiw	r26, 0x01	; 1
     9b8:	9c 91       	ld	r25, X
     9ba:	11 97       	sbiw	r26, 0x01	; 1
     9bc:	89 81       	ldd	r24, Y+1	; 0x01
     9be:	98 17       	cp	r25, r24
     9c0:	09 f4       	brne	.+2      	; 0x9c4 <_fpadd_parts+0x3c>
     9c2:	28 c1       	rjmp	.+592    	; 0xc14 <_fpadd_parts+0x28c>
     9c4:	a4 e0       	ldi	r26, 0x04	; 4
     9c6:	b1 e0       	ldi	r27, 0x01	; 1
     9c8:	25 c1       	rjmp	.+586    	; 0xc14 <_fpadd_parts+0x28c>
     9ca:	84 30       	cpi	r24, 0x04	; 4
     9cc:	09 f4       	brne	.+2      	; 0x9d0 <_fpadd_parts+0x48>
     9ce:	21 c1       	rjmp	.+578    	; 0xc12 <_fpadd_parts+0x28a>
     9d0:	82 30       	cpi	r24, 0x02	; 2
     9d2:	a9 f4       	brne	.+42     	; 0x9fe <_fpadd_parts+0x76>
     9d4:	92 30       	cpi	r25, 0x02	; 2
     9d6:	09 f0       	breq	.+2      	; 0x9da <_fpadd_parts+0x52>
     9d8:	1d c1       	rjmp	.+570    	; 0xc14 <_fpadd_parts+0x28c>
     9da:	9a 01       	movw	r18, r20
     9dc:	ad 01       	movw	r20, r26
     9de:	88 e0       	ldi	r24, 0x08	; 8
     9e0:	ea 01       	movw	r28, r20
     9e2:	09 90       	ld	r0, Y+
     9e4:	ae 01       	movw	r20, r28
     9e6:	e9 01       	movw	r28, r18
     9e8:	09 92       	st	Y+, r0
     9ea:	9e 01       	movw	r18, r28
     9ec:	81 50       	subi	r24, 0x01	; 1
     9ee:	c1 f7       	brne	.-16     	; 0x9e0 <_fpadd_parts+0x58>
     9f0:	e2 01       	movw	r28, r4
     9f2:	89 81       	ldd	r24, Y+1	; 0x01
     9f4:	11 96       	adiw	r26, 0x01	; 1
     9f6:	9c 91       	ld	r25, X
     9f8:	89 23       	and	r24, r25
     9fa:	81 83       	std	Z+1, r24	; 0x01
     9fc:	08 c1       	rjmp	.+528    	; 0xc0e <_fpadd_parts+0x286>
     9fe:	92 30       	cpi	r25, 0x02	; 2
     a00:	09 f4       	brne	.+2      	; 0xa04 <_fpadd_parts+0x7c>
     a02:	07 c1       	rjmp	.+526    	; 0xc12 <_fpadd_parts+0x28a>
     a04:	12 96       	adiw	r26, 0x02	; 2
     a06:	2d 90       	ld	r2, X+
     a08:	3c 90       	ld	r3, X
     a0a:	13 97       	sbiw	r26, 0x03	; 3
     a0c:	eb 01       	movw	r28, r22
     a0e:	8a 81       	ldd	r24, Y+2	; 0x02
     a10:	9b 81       	ldd	r25, Y+3	; 0x03
     a12:	14 96       	adiw	r26, 0x04	; 4
     a14:	ad 90       	ld	r10, X+
     a16:	bd 90       	ld	r11, X+
     a18:	cd 90       	ld	r12, X+
     a1a:	dc 90       	ld	r13, X
     a1c:	17 97       	sbiw	r26, 0x07	; 7
     a1e:	ec 80       	ldd	r14, Y+4	; 0x04
     a20:	fd 80       	ldd	r15, Y+5	; 0x05
     a22:	0e 81       	ldd	r16, Y+6	; 0x06
     a24:	1f 81       	ldd	r17, Y+7	; 0x07
     a26:	91 01       	movw	r18, r2
     a28:	28 1b       	sub	r18, r24
     a2a:	39 0b       	sbc	r19, r25
     a2c:	b9 01       	movw	r22, r18
     a2e:	37 ff       	sbrs	r19, 7
     a30:	04 c0       	rjmp	.+8      	; 0xa3a <_fpadd_parts+0xb2>
     a32:	66 27       	eor	r22, r22
     a34:	77 27       	eor	r23, r23
     a36:	62 1b       	sub	r22, r18
     a38:	73 0b       	sbc	r23, r19
     a3a:	60 32       	cpi	r22, 0x20	; 32
     a3c:	71 05       	cpc	r23, r1
     a3e:	0c f0       	brlt	.+2      	; 0xa42 <_fpadd_parts+0xba>
     a40:	61 c0       	rjmp	.+194    	; 0xb04 <_fpadd_parts+0x17c>
     a42:	12 16       	cp	r1, r18
     a44:	13 06       	cpc	r1, r19
     a46:	6c f5       	brge	.+90     	; 0xaa2 <_fpadd_parts+0x11a>
     a48:	37 01       	movw	r6, r14
     a4a:	48 01       	movw	r8, r16
     a4c:	06 2e       	mov	r0, r22
     a4e:	04 c0       	rjmp	.+8      	; 0xa58 <_fpadd_parts+0xd0>
     a50:	96 94       	lsr	r9
     a52:	87 94       	ror	r8
     a54:	77 94       	ror	r7
     a56:	67 94       	ror	r6
     a58:	0a 94       	dec	r0
     a5a:	d2 f7       	brpl	.-12     	; 0xa50 <_fpadd_parts+0xc8>
     a5c:	21 e0       	ldi	r18, 0x01	; 1
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	40 e0       	ldi	r20, 0x00	; 0
     a62:	50 e0       	ldi	r21, 0x00	; 0
     a64:	04 c0       	rjmp	.+8      	; 0xa6e <_fpadd_parts+0xe6>
     a66:	22 0f       	add	r18, r18
     a68:	33 1f       	adc	r19, r19
     a6a:	44 1f       	adc	r20, r20
     a6c:	55 1f       	adc	r21, r21
     a6e:	6a 95       	dec	r22
     a70:	d2 f7       	brpl	.-12     	; 0xa66 <_fpadd_parts+0xde>
     a72:	21 50       	subi	r18, 0x01	; 1
     a74:	30 40       	sbci	r19, 0x00	; 0
     a76:	40 40       	sbci	r20, 0x00	; 0
     a78:	50 40       	sbci	r21, 0x00	; 0
     a7a:	2e 21       	and	r18, r14
     a7c:	3f 21       	and	r19, r15
     a7e:	40 23       	and	r20, r16
     a80:	51 23       	and	r21, r17
     a82:	21 15       	cp	r18, r1
     a84:	31 05       	cpc	r19, r1
     a86:	41 05       	cpc	r20, r1
     a88:	51 05       	cpc	r21, r1
     a8a:	21 f0       	breq	.+8      	; 0xa94 <_fpadd_parts+0x10c>
     a8c:	21 e0       	ldi	r18, 0x01	; 1
     a8e:	30 e0       	ldi	r19, 0x00	; 0
     a90:	40 e0       	ldi	r20, 0x00	; 0
     a92:	50 e0       	ldi	r21, 0x00	; 0
     a94:	79 01       	movw	r14, r18
     a96:	8a 01       	movw	r16, r20
     a98:	e6 28       	or	r14, r6
     a9a:	f7 28       	or	r15, r7
     a9c:	08 29       	or	r16, r8
     a9e:	19 29       	or	r17, r9
     aa0:	3c c0       	rjmp	.+120    	; 0xb1a <_fpadd_parts+0x192>
     aa2:	23 2b       	or	r18, r19
     aa4:	d1 f1       	breq	.+116    	; 0xb1a <_fpadd_parts+0x192>
     aa6:	26 0e       	add	r2, r22
     aa8:	37 1e       	adc	r3, r23
     aaa:	35 01       	movw	r6, r10
     aac:	46 01       	movw	r8, r12
     aae:	06 2e       	mov	r0, r22
     ab0:	04 c0       	rjmp	.+8      	; 0xaba <_fpadd_parts+0x132>
     ab2:	96 94       	lsr	r9
     ab4:	87 94       	ror	r8
     ab6:	77 94       	ror	r7
     ab8:	67 94       	ror	r6
     aba:	0a 94       	dec	r0
     abc:	d2 f7       	brpl	.-12     	; 0xab2 <_fpadd_parts+0x12a>
     abe:	21 e0       	ldi	r18, 0x01	; 1
     ac0:	30 e0       	ldi	r19, 0x00	; 0
     ac2:	40 e0       	ldi	r20, 0x00	; 0
     ac4:	50 e0       	ldi	r21, 0x00	; 0
     ac6:	04 c0       	rjmp	.+8      	; 0xad0 <_fpadd_parts+0x148>
     ac8:	22 0f       	add	r18, r18
     aca:	33 1f       	adc	r19, r19
     acc:	44 1f       	adc	r20, r20
     ace:	55 1f       	adc	r21, r21
     ad0:	6a 95       	dec	r22
     ad2:	d2 f7       	brpl	.-12     	; 0xac8 <_fpadd_parts+0x140>
     ad4:	21 50       	subi	r18, 0x01	; 1
     ad6:	30 40       	sbci	r19, 0x00	; 0
     ad8:	40 40       	sbci	r20, 0x00	; 0
     ada:	50 40       	sbci	r21, 0x00	; 0
     adc:	2a 21       	and	r18, r10
     ade:	3b 21       	and	r19, r11
     ae0:	4c 21       	and	r20, r12
     ae2:	5d 21       	and	r21, r13
     ae4:	21 15       	cp	r18, r1
     ae6:	31 05       	cpc	r19, r1
     ae8:	41 05       	cpc	r20, r1
     aea:	51 05       	cpc	r21, r1
     aec:	21 f0       	breq	.+8      	; 0xaf6 <_fpadd_parts+0x16e>
     aee:	21 e0       	ldi	r18, 0x01	; 1
     af0:	30 e0       	ldi	r19, 0x00	; 0
     af2:	40 e0       	ldi	r20, 0x00	; 0
     af4:	50 e0       	ldi	r21, 0x00	; 0
     af6:	59 01       	movw	r10, r18
     af8:	6a 01       	movw	r12, r20
     afa:	a6 28       	or	r10, r6
     afc:	b7 28       	or	r11, r7
     afe:	c8 28       	or	r12, r8
     b00:	d9 28       	or	r13, r9
     b02:	0b c0       	rjmp	.+22     	; 0xb1a <_fpadd_parts+0x192>
     b04:	82 15       	cp	r24, r2
     b06:	93 05       	cpc	r25, r3
     b08:	2c f0       	brlt	.+10     	; 0xb14 <_fpadd_parts+0x18c>
     b0a:	1c 01       	movw	r2, r24
     b0c:	aa 24       	eor	r10, r10
     b0e:	bb 24       	eor	r11, r11
     b10:	65 01       	movw	r12, r10
     b12:	03 c0       	rjmp	.+6      	; 0xb1a <_fpadd_parts+0x192>
     b14:	ee 24       	eor	r14, r14
     b16:	ff 24       	eor	r15, r15
     b18:	87 01       	movw	r16, r14
     b1a:	11 96       	adiw	r26, 0x01	; 1
     b1c:	9c 91       	ld	r25, X
     b1e:	d2 01       	movw	r26, r4
     b20:	11 96       	adiw	r26, 0x01	; 1
     b22:	8c 91       	ld	r24, X
     b24:	98 17       	cp	r25, r24
     b26:	09 f4       	brne	.+2      	; 0xb2a <_fpadd_parts+0x1a2>
     b28:	45 c0       	rjmp	.+138    	; 0xbb4 <_fpadd_parts+0x22c>
     b2a:	99 23       	and	r25, r25
     b2c:	39 f0       	breq	.+14     	; 0xb3c <_fpadd_parts+0x1b4>
     b2e:	a8 01       	movw	r20, r16
     b30:	97 01       	movw	r18, r14
     b32:	2a 19       	sub	r18, r10
     b34:	3b 09       	sbc	r19, r11
     b36:	4c 09       	sbc	r20, r12
     b38:	5d 09       	sbc	r21, r13
     b3a:	06 c0       	rjmp	.+12     	; 0xb48 <_fpadd_parts+0x1c0>
     b3c:	a6 01       	movw	r20, r12
     b3e:	95 01       	movw	r18, r10
     b40:	2e 19       	sub	r18, r14
     b42:	3f 09       	sbc	r19, r15
     b44:	40 0b       	sbc	r20, r16
     b46:	51 0b       	sbc	r21, r17
     b48:	57 fd       	sbrc	r21, 7
     b4a:	08 c0       	rjmp	.+16     	; 0xb5c <_fpadd_parts+0x1d4>
     b4c:	11 82       	std	Z+1, r1	; 0x01
     b4e:	33 82       	std	Z+3, r3	; 0x03
     b50:	22 82       	std	Z+2, r2	; 0x02
     b52:	24 83       	std	Z+4, r18	; 0x04
     b54:	35 83       	std	Z+5, r19	; 0x05
     b56:	46 83       	std	Z+6, r20	; 0x06
     b58:	57 83       	std	Z+7, r21	; 0x07
     b5a:	1d c0       	rjmp	.+58     	; 0xb96 <_fpadd_parts+0x20e>
     b5c:	81 e0       	ldi	r24, 0x01	; 1
     b5e:	81 83       	std	Z+1, r24	; 0x01
     b60:	33 82       	std	Z+3, r3	; 0x03
     b62:	22 82       	std	Z+2, r2	; 0x02
     b64:	88 27       	eor	r24, r24
     b66:	99 27       	eor	r25, r25
     b68:	dc 01       	movw	r26, r24
     b6a:	82 1b       	sub	r24, r18
     b6c:	93 0b       	sbc	r25, r19
     b6e:	a4 0b       	sbc	r26, r20
     b70:	b5 0b       	sbc	r27, r21
     b72:	84 83       	std	Z+4, r24	; 0x04
     b74:	95 83       	std	Z+5, r25	; 0x05
     b76:	a6 83       	std	Z+6, r26	; 0x06
     b78:	b7 83       	std	Z+7, r27	; 0x07
     b7a:	0d c0       	rjmp	.+26     	; 0xb96 <_fpadd_parts+0x20e>
     b7c:	22 0f       	add	r18, r18
     b7e:	33 1f       	adc	r19, r19
     b80:	44 1f       	adc	r20, r20
     b82:	55 1f       	adc	r21, r21
     b84:	24 83       	std	Z+4, r18	; 0x04
     b86:	35 83       	std	Z+5, r19	; 0x05
     b88:	46 83       	std	Z+6, r20	; 0x06
     b8a:	57 83       	std	Z+7, r21	; 0x07
     b8c:	82 81       	ldd	r24, Z+2	; 0x02
     b8e:	93 81       	ldd	r25, Z+3	; 0x03
     b90:	01 97       	sbiw	r24, 0x01	; 1
     b92:	93 83       	std	Z+3, r25	; 0x03
     b94:	82 83       	std	Z+2, r24	; 0x02
     b96:	24 81       	ldd	r18, Z+4	; 0x04
     b98:	35 81       	ldd	r19, Z+5	; 0x05
     b9a:	46 81       	ldd	r20, Z+6	; 0x06
     b9c:	57 81       	ldd	r21, Z+7	; 0x07
     b9e:	da 01       	movw	r26, r20
     ba0:	c9 01       	movw	r24, r18
     ba2:	01 97       	sbiw	r24, 0x01	; 1
     ba4:	a1 09       	sbc	r26, r1
     ba6:	b1 09       	sbc	r27, r1
     ba8:	8f 5f       	subi	r24, 0xFF	; 255
     baa:	9f 4f       	sbci	r25, 0xFF	; 255
     bac:	af 4f       	sbci	r26, 0xFF	; 255
     bae:	bf 43       	sbci	r27, 0x3F	; 63
     bb0:	28 f3       	brcs	.-54     	; 0xb7c <_fpadd_parts+0x1f4>
     bb2:	0b c0       	rjmp	.+22     	; 0xbca <_fpadd_parts+0x242>
     bb4:	91 83       	std	Z+1, r25	; 0x01
     bb6:	33 82       	std	Z+3, r3	; 0x03
     bb8:	22 82       	std	Z+2, r2	; 0x02
     bba:	ea 0c       	add	r14, r10
     bbc:	fb 1c       	adc	r15, r11
     bbe:	0c 1d       	adc	r16, r12
     bc0:	1d 1d       	adc	r17, r13
     bc2:	e4 82       	std	Z+4, r14	; 0x04
     bc4:	f5 82       	std	Z+5, r15	; 0x05
     bc6:	06 83       	std	Z+6, r16	; 0x06
     bc8:	17 83       	std	Z+7, r17	; 0x07
     bca:	83 e0       	ldi	r24, 0x03	; 3
     bcc:	80 83       	st	Z, r24
     bce:	24 81       	ldd	r18, Z+4	; 0x04
     bd0:	35 81       	ldd	r19, Z+5	; 0x05
     bd2:	46 81       	ldd	r20, Z+6	; 0x06
     bd4:	57 81       	ldd	r21, Z+7	; 0x07
     bd6:	57 ff       	sbrs	r21, 7
     bd8:	1a c0       	rjmp	.+52     	; 0xc0e <_fpadd_parts+0x286>
     bda:	c9 01       	movw	r24, r18
     bdc:	aa 27       	eor	r26, r26
     bde:	97 fd       	sbrc	r25, 7
     be0:	a0 95       	com	r26
     be2:	ba 2f       	mov	r27, r26
     be4:	81 70       	andi	r24, 0x01	; 1
     be6:	90 70       	andi	r25, 0x00	; 0
     be8:	a0 70       	andi	r26, 0x00	; 0
     bea:	b0 70       	andi	r27, 0x00	; 0
     bec:	56 95       	lsr	r21
     bee:	47 95       	ror	r20
     bf0:	37 95       	ror	r19
     bf2:	27 95       	ror	r18
     bf4:	82 2b       	or	r24, r18
     bf6:	93 2b       	or	r25, r19
     bf8:	a4 2b       	or	r26, r20
     bfa:	b5 2b       	or	r27, r21
     bfc:	84 83       	std	Z+4, r24	; 0x04
     bfe:	95 83       	std	Z+5, r25	; 0x05
     c00:	a6 83       	std	Z+6, r26	; 0x06
     c02:	b7 83       	std	Z+7, r27	; 0x07
     c04:	82 81       	ldd	r24, Z+2	; 0x02
     c06:	93 81       	ldd	r25, Z+3	; 0x03
     c08:	01 96       	adiw	r24, 0x01	; 1
     c0a:	93 83       	std	Z+3, r25	; 0x03
     c0c:	82 83       	std	Z+2, r24	; 0x02
     c0e:	df 01       	movw	r26, r30
     c10:	01 c0       	rjmp	.+2      	; 0xc14 <_fpadd_parts+0x28c>
     c12:	d2 01       	movw	r26, r4
     c14:	cd 01       	movw	r24, r26
     c16:	cd b7       	in	r28, 0x3d	; 61
     c18:	de b7       	in	r29, 0x3e	; 62
     c1a:	e2 e1       	ldi	r30, 0x12	; 18
     c1c:	0c 94 ba 0a 	jmp	0x1574	; 0x1574 <__epilogue_restores__>

00000c20 <__subsf3>:
     c20:	a0 e2       	ldi	r26, 0x20	; 32
     c22:	b0 e0       	ldi	r27, 0x00	; 0
     c24:	e6 e1       	ldi	r30, 0x16	; 22
     c26:	f6 e0       	ldi	r31, 0x06	; 6
     c28:	0c 94 aa 0a 	jmp	0x1554	; 0x1554 <__prologue_saves__+0x18>
     c2c:	69 83       	std	Y+1, r22	; 0x01
     c2e:	7a 83       	std	Y+2, r23	; 0x02
     c30:	8b 83       	std	Y+3, r24	; 0x03
     c32:	9c 83       	std	Y+4, r25	; 0x04
     c34:	2d 83       	std	Y+5, r18	; 0x05
     c36:	3e 83       	std	Y+6, r19	; 0x06
     c38:	4f 83       	std	Y+7, r20	; 0x07
     c3a:	58 87       	std	Y+8, r21	; 0x08
     c3c:	e9 e0       	ldi	r30, 0x09	; 9
     c3e:	ee 2e       	mov	r14, r30
     c40:	f1 2c       	mov	r15, r1
     c42:	ec 0e       	add	r14, r28
     c44:	fd 1e       	adc	r15, r29
     c46:	ce 01       	movw	r24, r28
     c48:	01 96       	adiw	r24, 0x01	; 1
     c4a:	b7 01       	movw	r22, r14
     c4c:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
     c50:	8e 01       	movw	r16, r28
     c52:	0f 5e       	subi	r16, 0xEF	; 239
     c54:	1f 4f       	sbci	r17, 0xFF	; 255
     c56:	ce 01       	movw	r24, r28
     c58:	05 96       	adiw	r24, 0x05	; 5
     c5a:	b8 01       	movw	r22, r16
     c5c:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
     c60:	8a 89       	ldd	r24, Y+18	; 0x12
     c62:	91 e0       	ldi	r25, 0x01	; 1
     c64:	89 27       	eor	r24, r25
     c66:	8a 8b       	std	Y+18, r24	; 0x12
     c68:	c7 01       	movw	r24, r14
     c6a:	b8 01       	movw	r22, r16
     c6c:	ae 01       	movw	r20, r28
     c6e:	47 5e       	subi	r20, 0xE7	; 231
     c70:	5f 4f       	sbci	r21, 0xFF	; 255
     c72:	0e 94 c4 04 	call	0x988	; 0x988 <_fpadd_parts>
     c76:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <__pack_f>
     c7a:	a0 96       	adiw	r28, 0x20	; 32
     c7c:	e6 e0       	ldi	r30, 0x06	; 6
     c7e:	0c 94 c6 0a 	jmp	0x158c	; 0x158c <__epilogue_restores__+0x18>

00000c82 <__addsf3>:
     c82:	a0 e2       	ldi	r26, 0x20	; 32
     c84:	b0 e0       	ldi	r27, 0x00	; 0
     c86:	e7 e4       	ldi	r30, 0x47	; 71
     c88:	f6 e0       	ldi	r31, 0x06	; 6
     c8a:	0c 94 aa 0a 	jmp	0x1554	; 0x1554 <__prologue_saves__+0x18>
     c8e:	69 83       	std	Y+1, r22	; 0x01
     c90:	7a 83       	std	Y+2, r23	; 0x02
     c92:	8b 83       	std	Y+3, r24	; 0x03
     c94:	9c 83       	std	Y+4, r25	; 0x04
     c96:	2d 83       	std	Y+5, r18	; 0x05
     c98:	3e 83       	std	Y+6, r19	; 0x06
     c9a:	4f 83       	std	Y+7, r20	; 0x07
     c9c:	58 87       	std	Y+8, r21	; 0x08
     c9e:	f9 e0       	ldi	r31, 0x09	; 9
     ca0:	ef 2e       	mov	r14, r31
     ca2:	f1 2c       	mov	r15, r1
     ca4:	ec 0e       	add	r14, r28
     ca6:	fd 1e       	adc	r15, r29
     ca8:	ce 01       	movw	r24, r28
     caa:	01 96       	adiw	r24, 0x01	; 1
     cac:	b7 01       	movw	r22, r14
     cae:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
     cb2:	8e 01       	movw	r16, r28
     cb4:	0f 5e       	subi	r16, 0xEF	; 239
     cb6:	1f 4f       	sbci	r17, 0xFF	; 255
     cb8:	ce 01       	movw	r24, r28
     cba:	05 96       	adiw	r24, 0x05	; 5
     cbc:	b8 01       	movw	r22, r16
     cbe:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
     cc2:	c7 01       	movw	r24, r14
     cc4:	b8 01       	movw	r22, r16
     cc6:	ae 01       	movw	r20, r28
     cc8:	47 5e       	subi	r20, 0xE7	; 231
     cca:	5f 4f       	sbci	r21, 0xFF	; 255
     ccc:	0e 94 c4 04 	call	0x988	; 0x988 <_fpadd_parts>
     cd0:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <__pack_f>
     cd4:	a0 96       	adiw	r28, 0x20	; 32
     cd6:	e6 e0       	ldi	r30, 0x06	; 6
     cd8:	0c 94 c6 0a 	jmp	0x158c	; 0x158c <__epilogue_restores__+0x18>

00000cdc <__mulsf3>:
     cdc:	a0 e2       	ldi	r26, 0x20	; 32
     cde:	b0 e0       	ldi	r27, 0x00	; 0
     ce0:	e4 e7       	ldi	r30, 0x74	; 116
     ce2:	f6 e0       	ldi	r31, 0x06	; 6
     ce4:	0c 94 9e 0a 	jmp	0x153c	; 0x153c <__prologue_saves__>
     ce8:	69 83       	std	Y+1, r22	; 0x01
     cea:	7a 83       	std	Y+2, r23	; 0x02
     cec:	8b 83       	std	Y+3, r24	; 0x03
     cee:	9c 83       	std	Y+4, r25	; 0x04
     cf0:	2d 83       	std	Y+5, r18	; 0x05
     cf2:	3e 83       	std	Y+6, r19	; 0x06
     cf4:	4f 83       	std	Y+7, r20	; 0x07
     cf6:	58 87       	std	Y+8, r21	; 0x08
     cf8:	ce 01       	movw	r24, r28
     cfa:	01 96       	adiw	r24, 0x01	; 1
     cfc:	be 01       	movw	r22, r28
     cfe:	67 5f       	subi	r22, 0xF7	; 247
     d00:	7f 4f       	sbci	r23, 0xFF	; 255
     d02:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
     d06:	ce 01       	movw	r24, r28
     d08:	05 96       	adiw	r24, 0x05	; 5
     d0a:	be 01       	movw	r22, r28
     d0c:	6f 5e       	subi	r22, 0xEF	; 239
     d0e:	7f 4f       	sbci	r23, 0xFF	; 255
     d10:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
     d14:	99 85       	ldd	r25, Y+9	; 0x09
     d16:	92 30       	cpi	r25, 0x02	; 2
     d18:	88 f0       	brcs	.+34     	; 0xd3c <__mulsf3+0x60>
     d1a:	89 89       	ldd	r24, Y+17	; 0x11
     d1c:	82 30       	cpi	r24, 0x02	; 2
     d1e:	c8 f0       	brcs	.+50     	; 0xd52 <__mulsf3+0x76>
     d20:	94 30       	cpi	r25, 0x04	; 4
     d22:	19 f4       	brne	.+6      	; 0xd2a <__mulsf3+0x4e>
     d24:	82 30       	cpi	r24, 0x02	; 2
     d26:	51 f4       	brne	.+20     	; 0xd3c <__mulsf3+0x60>
     d28:	04 c0       	rjmp	.+8      	; 0xd32 <__mulsf3+0x56>
     d2a:	84 30       	cpi	r24, 0x04	; 4
     d2c:	29 f4       	brne	.+10     	; 0xd38 <__mulsf3+0x5c>
     d2e:	92 30       	cpi	r25, 0x02	; 2
     d30:	81 f4       	brne	.+32     	; 0xd52 <__mulsf3+0x76>
     d32:	84 e0       	ldi	r24, 0x04	; 4
     d34:	91 e0       	ldi	r25, 0x01	; 1
     d36:	c6 c0       	rjmp	.+396    	; 0xec4 <__mulsf3+0x1e8>
     d38:	92 30       	cpi	r25, 0x02	; 2
     d3a:	49 f4       	brne	.+18     	; 0xd4e <__mulsf3+0x72>
     d3c:	20 e0       	ldi	r18, 0x00	; 0
     d3e:	9a 85       	ldd	r25, Y+10	; 0x0a
     d40:	8a 89       	ldd	r24, Y+18	; 0x12
     d42:	98 13       	cpse	r25, r24
     d44:	21 e0       	ldi	r18, 0x01	; 1
     d46:	2a 87       	std	Y+10, r18	; 0x0a
     d48:	ce 01       	movw	r24, r28
     d4a:	09 96       	adiw	r24, 0x09	; 9
     d4c:	bb c0       	rjmp	.+374    	; 0xec4 <__mulsf3+0x1e8>
     d4e:	82 30       	cpi	r24, 0x02	; 2
     d50:	49 f4       	brne	.+18     	; 0xd64 <__mulsf3+0x88>
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	9a 85       	ldd	r25, Y+10	; 0x0a
     d56:	8a 89       	ldd	r24, Y+18	; 0x12
     d58:	98 13       	cpse	r25, r24
     d5a:	21 e0       	ldi	r18, 0x01	; 1
     d5c:	2a 8b       	std	Y+18, r18	; 0x12
     d5e:	ce 01       	movw	r24, r28
     d60:	41 96       	adiw	r24, 0x11	; 17
     d62:	b0 c0       	rjmp	.+352    	; 0xec4 <__mulsf3+0x1e8>
     d64:	2d 84       	ldd	r2, Y+13	; 0x0d
     d66:	3e 84       	ldd	r3, Y+14	; 0x0e
     d68:	4f 84       	ldd	r4, Y+15	; 0x0f
     d6a:	58 88       	ldd	r5, Y+16	; 0x10
     d6c:	6d 88       	ldd	r6, Y+21	; 0x15
     d6e:	7e 88       	ldd	r7, Y+22	; 0x16
     d70:	8f 88       	ldd	r8, Y+23	; 0x17
     d72:	98 8c       	ldd	r9, Y+24	; 0x18
     d74:	ee 24       	eor	r14, r14
     d76:	ff 24       	eor	r15, r15
     d78:	87 01       	movw	r16, r14
     d7a:	aa 24       	eor	r10, r10
     d7c:	bb 24       	eor	r11, r11
     d7e:	65 01       	movw	r12, r10
     d80:	40 e0       	ldi	r20, 0x00	; 0
     d82:	50 e0       	ldi	r21, 0x00	; 0
     d84:	60 e0       	ldi	r22, 0x00	; 0
     d86:	70 e0       	ldi	r23, 0x00	; 0
     d88:	e0 e0       	ldi	r30, 0x00	; 0
     d8a:	f0 e0       	ldi	r31, 0x00	; 0
     d8c:	c1 01       	movw	r24, r2
     d8e:	81 70       	andi	r24, 0x01	; 1
     d90:	90 70       	andi	r25, 0x00	; 0
     d92:	89 2b       	or	r24, r25
     d94:	e9 f0       	breq	.+58     	; 0xdd0 <__mulsf3+0xf4>
     d96:	e6 0c       	add	r14, r6
     d98:	f7 1c       	adc	r15, r7
     d9a:	08 1d       	adc	r16, r8
     d9c:	19 1d       	adc	r17, r9
     d9e:	9a 01       	movw	r18, r20
     da0:	ab 01       	movw	r20, r22
     da2:	2a 0d       	add	r18, r10
     da4:	3b 1d       	adc	r19, r11
     da6:	4c 1d       	adc	r20, r12
     da8:	5d 1d       	adc	r21, r13
     daa:	80 e0       	ldi	r24, 0x00	; 0
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	a0 e0       	ldi	r26, 0x00	; 0
     db0:	b0 e0       	ldi	r27, 0x00	; 0
     db2:	e6 14       	cp	r14, r6
     db4:	f7 04       	cpc	r15, r7
     db6:	08 05       	cpc	r16, r8
     db8:	19 05       	cpc	r17, r9
     dba:	20 f4       	brcc	.+8      	; 0xdc4 <__mulsf3+0xe8>
     dbc:	81 e0       	ldi	r24, 0x01	; 1
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	a0 e0       	ldi	r26, 0x00	; 0
     dc2:	b0 e0       	ldi	r27, 0x00	; 0
     dc4:	ba 01       	movw	r22, r20
     dc6:	a9 01       	movw	r20, r18
     dc8:	48 0f       	add	r20, r24
     dca:	59 1f       	adc	r21, r25
     dcc:	6a 1f       	adc	r22, r26
     dce:	7b 1f       	adc	r23, r27
     dd0:	aa 0c       	add	r10, r10
     dd2:	bb 1c       	adc	r11, r11
     dd4:	cc 1c       	adc	r12, r12
     dd6:	dd 1c       	adc	r13, r13
     dd8:	97 fe       	sbrs	r9, 7
     dda:	08 c0       	rjmp	.+16     	; 0xdec <__mulsf3+0x110>
     ddc:	81 e0       	ldi	r24, 0x01	; 1
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	a0 e0       	ldi	r26, 0x00	; 0
     de2:	b0 e0       	ldi	r27, 0x00	; 0
     de4:	a8 2a       	or	r10, r24
     de6:	b9 2a       	or	r11, r25
     de8:	ca 2a       	or	r12, r26
     dea:	db 2a       	or	r13, r27
     dec:	31 96       	adiw	r30, 0x01	; 1
     dee:	e0 32       	cpi	r30, 0x20	; 32
     df0:	f1 05       	cpc	r31, r1
     df2:	49 f0       	breq	.+18     	; 0xe06 <__mulsf3+0x12a>
     df4:	66 0c       	add	r6, r6
     df6:	77 1c       	adc	r7, r7
     df8:	88 1c       	adc	r8, r8
     dfa:	99 1c       	adc	r9, r9
     dfc:	56 94       	lsr	r5
     dfe:	47 94       	ror	r4
     e00:	37 94       	ror	r3
     e02:	27 94       	ror	r2
     e04:	c3 cf       	rjmp	.-122    	; 0xd8c <__mulsf3+0xb0>
     e06:	fa 85       	ldd	r31, Y+10	; 0x0a
     e08:	ea 89       	ldd	r30, Y+18	; 0x12
     e0a:	2b 89       	ldd	r18, Y+19	; 0x13
     e0c:	3c 89       	ldd	r19, Y+20	; 0x14
     e0e:	8b 85       	ldd	r24, Y+11	; 0x0b
     e10:	9c 85       	ldd	r25, Y+12	; 0x0c
     e12:	28 0f       	add	r18, r24
     e14:	39 1f       	adc	r19, r25
     e16:	2e 5f       	subi	r18, 0xFE	; 254
     e18:	3f 4f       	sbci	r19, 0xFF	; 255
     e1a:	17 c0       	rjmp	.+46     	; 0xe4a <__mulsf3+0x16e>
     e1c:	ca 01       	movw	r24, r20
     e1e:	81 70       	andi	r24, 0x01	; 1
     e20:	90 70       	andi	r25, 0x00	; 0
     e22:	89 2b       	or	r24, r25
     e24:	61 f0       	breq	.+24     	; 0xe3e <__mulsf3+0x162>
     e26:	16 95       	lsr	r17
     e28:	07 95       	ror	r16
     e2a:	f7 94       	ror	r15
     e2c:	e7 94       	ror	r14
     e2e:	80 e0       	ldi	r24, 0x00	; 0
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	a0 e0       	ldi	r26, 0x00	; 0
     e34:	b0 e8       	ldi	r27, 0x80	; 128
     e36:	e8 2a       	or	r14, r24
     e38:	f9 2a       	or	r15, r25
     e3a:	0a 2b       	or	r16, r26
     e3c:	1b 2b       	or	r17, r27
     e3e:	76 95       	lsr	r23
     e40:	67 95       	ror	r22
     e42:	57 95       	ror	r21
     e44:	47 95       	ror	r20
     e46:	2f 5f       	subi	r18, 0xFF	; 255
     e48:	3f 4f       	sbci	r19, 0xFF	; 255
     e4a:	77 fd       	sbrc	r23, 7
     e4c:	e7 cf       	rjmp	.-50     	; 0xe1c <__mulsf3+0x140>
     e4e:	0c c0       	rjmp	.+24     	; 0xe68 <__mulsf3+0x18c>
     e50:	44 0f       	add	r20, r20
     e52:	55 1f       	adc	r21, r21
     e54:	66 1f       	adc	r22, r22
     e56:	77 1f       	adc	r23, r23
     e58:	17 fd       	sbrc	r17, 7
     e5a:	41 60       	ori	r20, 0x01	; 1
     e5c:	ee 0c       	add	r14, r14
     e5e:	ff 1c       	adc	r15, r15
     e60:	00 1f       	adc	r16, r16
     e62:	11 1f       	adc	r17, r17
     e64:	21 50       	subi	r18, 0x01	; 1
     e66:	30 40       	sbci	r19, 0x00	; 0
     e68:	40 30       	cpi	r20, 0x00	; 0
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	59 07       	cpc	r21, r25
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	69 07       	cpc	r22, r25
     e72:	90 e4       	ldi	r25, 0x40	; 64
     e74:	79 07       	cpc	r23, r25
     e76:	60 f3       	brcs	.-40     	; 0xe50 <__mulsf3+0x174>
     e78:	2b 8f       	std	Y+27, r18	; 0x1b
     e7a:	3c 8f       	std	Y+28, r19	; 0x1c
     e7c:	db 01       	movw	r26, r22
     e7e:	ca 01       	movw	r24, r20
     e80:	8f 77       	andi	r24, 0x7F	; 127
     e82:	90 70       	andi	r25, 0x00	; 0
     e84:	a0 70       	andi	r26, 0x00	; 0
     e86:	b0 70       	andi	r27, 0x00	; 0
     e88:	80 34       	cpi	r24, 0x40	; 64
     e8a:	91 05       	cpc	r25, r1
     e8c:	a1 05       	cpc	r26, r1
     e8e:	b1 05       	cpc	r27, r1
     e90:	61 f4       	brne	.+24     	; 0xeaa <__mulsf3+0x1ce>
     e92:	47 fd       	sbrc	r20, 7
     e94:	0a c0       	rjmp	.+20     	; 0xeaa <__mulsf3+0x1ce>
     e96:	e1 14       	cp	r14, r1
     e98:	f1 04       	cpc	r15, r1
     e9a:	01 05       	cpc	r16, r1
     e9c:	11 05       	cpc	r17, r1
     e9e:	29 f0       	breq	.+10     	; 0xeaa <__mulsf3+0x1ce>
     ea0:	40 5c       	subi	r20, 0xC0	; 192
     ea2:	5f 4f       	sbci	r21, 0xFF	; 255
     ea4:	6f 4f       	sbci	r22, 0xFF	; 255
     ea6:	7f 4f       	sbci	r23, 0xFF	; 255
     ea8:	40 78       	andi	r20, 0x80	; 128
     eaa:	1a 8e       	std	Y+26, r1	; 0x1a
     eac:	fe 17       	cp	r31, r30
     eae:	11 f0       	breq	.+4      	; 0xeb4 <__mulsf3+0x1d8>
     eb0:	81 e0       	ldi	r24, 0x01	; 1
     eb2:	8a 8f       	std	Y+26, r24	; 0x1a
     eb4:	4d 8f       	std	Y+29, r20	; 0x1d
     eb6:	5e 8f       	std	Y+30, r21	; 0x1e
     eb8:	6f 8f       	std	Y+31, r22	; 0x1f
     eba:	78 a3       	std	Y+32, r23	; 0x20
     ebc:	83 e0       	ldi	r24, 0x03	; 3
     ebe:	89 8f       	std	Y+25, r24	; 0x19
     ec0:	ce 01       	movw	r24, r28
     ec2:	49 96       	adiw	r24, 0x19	; 25
     ec4:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <__pack_f>
     ec8:	a0 96       	adiw	r28, 0x20	; 32
     eca:	e2 e1       	ldi	r30, 0x12	; 18
     ecc:	0c 94 ba 0a 	jmp	0x1574	; 0x1574 <__epilogue_restores__>

00000ed0 <__divsf3>:
     ed0:	a8 e1       	ldi	r26, 0x18	; 24
     ed2:	b0 e0       	ldi	r27, 0x00	; 0
     ed4:	ee e6       	ldi	r30, 0x6E	; 110
     ed6:	f7 e0       	ldi	r31, 0x07	; 7
     ed8:	0c 94 a6 0a 	jmp	0x154c	; 0x154c <__prologue_saves__+0x10>
     edc:	69 83       	std	Y+1, r22	; 0x01
     ede:	7a 83       	std	Y+2, r23	; 0x02
     ee0:	8b 83       	std	Y+3, r24	; 0x03
     ee2:	9c 83       	std	Y+4, r25	; 0x04
     ee4:	2d 83       	std	Y+5, r18	; 0x05
     ee6:	3e 83       	std	Y+6, r19	; 0x06
     ee8:	4f 83       	std	Y+7, r20	; 0x07
     eea:	58 87       	std	Y+8, r21	; 0x08
     eec:	b9 e0       	ldi	r27, 0x09	; 9
     eee:	eb 2e       	mov	r14, r27
     ef0:	f1 2c       	mov	r15, r1
     ef2:	ec 0e       	add	r14, r28
     ef4:	fd 1e       	adc	r15, r29
     ef6:	ce 01       	movw	r24, r28
     ef8:	01 96       	adiw	r24, 0x01	; 1
     efa:	b7 01       	movw	r22, r14
     efc:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
     f00:	8e 01       	movw	r16, r28
     f02:	0f 5e       	subi	r16, 0xEF	; 239
     f04:	1f 4f       	sbci	r17, 0xFF	; 255
     f06:	ce 01       	movw	r24, r28
     f08:	05 96       	adiw	r24, 0x05	; 5
     f0a:	b8 01       	movw	r22, r16
     f0c:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
     f10:	29 85       	ldd	r18, Y+9	; 0x09
     f12:	22 30       	cpi	r18, 0x02	; 2
     f14:	08 f4       	brcc	.+2      	; 0xf18 <__divsf3+0x48>
     f16:	7e c0       	rjmp	.+252    	; 0x1014 <__divsf3+0x144>
     f18:	39 89       	ldd	r19, Y+17	; 0x11
     f1a:	32 30       	cpi	r19, 0x02	; 2
     f1c:	10 f4       	brcc	.+4      	; 0xf22 <__divsf3+0x52>
     f1e:	b8 01       	movw	r22, r16
     f20:	7c c0       	rjmp	.+248    	; 0x101a <__divsf3+0x14a>
     f22:	8a 85       	ldd	r24, Y+10	; 0x0a
     f24:	9a 89       	ldd	r25, Y+18	; 0x12
     f26:	89 27       	eor	r24, r25
     f28:	8a 87       	std	Y+10, r24	; 0x0a
     f2a:	24 30       	cpi	r18, 0x04	; 4
     f2c:	11 f0       	breq	.+4      	; 0xf32 <__divsf3+0x62>
     f2e:	22 30       	cpi	r18, 0x02	; 2
     f30:	31 f4       	brne	.+12     	; 0xf3e <__divsf3+0x6e>
     f32:	23 17       	cp	r18, r19
     f34:	09 f0       	breq	.+2      	; 0xf38 <__divsf3+0x68>
     f36:	6e c0       	rjmp	.+220    	; 0x1014 <__divsf3+0x144>
     f38:	64 e0       	ldi	r22, 0x04	; 4
     f3a:	71 e0       	ldi	r23, 0x01	; 1
     f3c:	6e c0       	rjmp	.+220    	; 0x101a <__divsf3+0x14a>
     f3e:	34 30       	cpi	r19, 0x04	; 4
     f40:	39 f4       	brne	.+14     	; 0xf50 <__divsf3+0x80>
     f42:	1d 86       	std	Y+13, r1	; 0x0d
     f44:	1e 86       	std	Y+14, r1	; 0x0e
     f46:	1f 86       	std	Y+15, r1	; 0x0f
     f48:	18 8a       	std	Y+16, r1	; 0x10
     f4a:	1c 86       	std	Y+12, r1	; 0x0c
     f4c:	1b 86       	std	Y+11, r1	; 0x0b
     f4e:	04 c0       	rjmp	.+8      	; 0xf58 <__divsf3+0x88>
     f50:	32 30       	cpi	r19, 0x02	; 2
     f52:	21 f4       	brne	.+8      	; 0xf5c <__divsf3+0x8c>
     f54:	84 e0       	ldi	r24, 0x04	; 4
     f56:	89 87       	std	Y+9, r24	; 0x09
     f58:	b7 01       	movw	r22, r14
     f5a:	5f c0       	rjmp	.+190    	; 0x101a <__divsf3+0x14a>
     f5c:	2b 85       	ldd	r18, Y+11	; 0x0b
     f5e:	3c 85       	ldd	r19, Y+12	; 0x0c
     f60:	8b 89       	ldd	r24, Y+19	; 0x13
     f62:	9c 89       	ldd	r25, Y+20	; 0x14
     f64:	28 1b       	sub	r18, r24
     f66:	39 0b       	sbc	r19, r25
     f68:	3c 87       	std	Y+12, r19	; 0x0c
     f6a:	2b 87       	std	Y+11, r18	; 0x0b
     f6c:	ed 84       	ldd	r14, Y+13	; 0x0d
     f6e:	fe 84       	ldd	r15, Y+14	; 0x0e
     f70:	0f 85       	ldd	r16, Y+15	; 0x0f
     f72:	18 89       	ldd	r17, Y+16	; 0x10
     f74:	ad 88       	ldd	r10, Y+21	; 0x15
     f76:	be 88       	ldd	r11, Y+22	; 0x16
     f78:	cf 88       	ldd	r12, Y+23	; 0x17
     f7a:	d8 8c       	ldd	r13, Y+24	; 0x18
     f7c:	ea 14       	cp	r14, r10
     f7e:	fb 04       	cpc	r15, r11
     f80:	0c 05       	cpc	r16, r12
     f82:	1d 05       	cpc	r17, r13
     f84:	40 f4       	brcc	.+16     	; 0xf96 <__divsf3+0xc6>
     f86:	ee 0c       	add	r14, r14
     f88:	ff 1c       	adc	r15, r15
     f8a:	00 1f       	adc	r16, r16
     f8c:	11 1f       	adc	r17, r17
     f8e:	21 50       	subi	r18, 0x01	; 1
     f90:	30 40       	sbci	r19, 0x00	; 0
     f92:	3c 87       	std	Y+12, r19	; 0x0c
     f94:	2b 87       	std	Y+11, r18	; 0x0b
     f96:	20 e0       	ldi	r18, 0x00	; 0
     f98:	30 e0       	ldi	r19, 0x00	; 0
     f9a:	40 e0       	ldi	r20, 0x00	; 0
     f9c:	50 e0       	ldi	r21, 0x00	; 0
     f9e:	80 e0       	ldi	r24, 0x00	; 0
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	a0 e0       	ldi	r26, 0x00	; 0
     fa4:	b0 e4       	ldi	r27, 0x40	; 64
     fa6:	60 e0       	ldi	r22, 0x00	; 0
     fa8:	70 e0       	ldi	r23, 0x00	; 0
     faa:	ea 14       	cp	r14, r10
     fac:	fb 04       	cpc	r15, r11
     fae:	0c 05       	cpc	r16, r12
     fb0:	1d 05       	cpc	r17, r13
     fb2:	40 f0       	brcs	.+16     	; 0xfc4 <__divsf3+0xf4>
     fb4:	28 2b       	or	r18, r24
     fb6:	39 2b       	or	r19, r25
     fb8:	4a 2b       	or	r20, r26
     fba:	5b 2b       	or	r21, r27
     fbc:	ea 18       	sub	r14, r10
     fbe:	fb 08       	sbc	r15, r11
     fc0:	0c 09       	sbc	r16, r12
     fc2:	1d 09       	sbc	r17, r13
     fc4:	b6 95       	lsr	r27
     fc6:	a7 95       	ror	r26
     fc8:	97 95       	ror	r25
     fca:	87 95       	ror	r24
     fcc:	ee 0c       	add	r14, r14
     fce:	ff 1c       	adc	r15, r15
     fd0:	00 1f       	adc	r16, r16
     fd2:	11 1f       	adc	r17, r17
     fd4:	6f 5f       	subi	r22, 0xFF	; 255
     fd6:	7f 4f       	sbci	r23, 0xFF	; 255
     fd8:	6f 31       	cpi	r22, 0x1F	; 31
     fda:	71 05       	cpc	r23, r1
     fdc:	31 f7       	brne	.-52     	; 0xfaa <__divsf3+0xda>
     fde:	da 01       	movw	r26, r20
     fe0:	c9 01       	movw	r24, r18
     fe2:	8f 77       	andi	r24, 0x7F	; 127
     fe4:	90 70       	andi	r25, 0x00	; 0
     fe6:	a0 70       	andi	r26, 0x00	; 0
     fe8:	b0 70       	andi	r27, 0x00	; 0
     fea:	80 34       	cpi	r24, 0x40	; 64
     fec:	91 05       	cpc	r25, r1
     fee:	a1 05       	cpc	r26, r1
     ff0:	b1 05       	cpc	r27, r1
     ff2:	61 f4       	brne	.+24     	; 0x100c <__divsf3+0x13c>
     ff4:	27 fd       	sbrc	r18, 7
     ff6:	0a c0       	rjmp	.+20     	; 0x100c <__divsf3+0x13c>
     ff8:	e1 14       	cp	r14, r1
     ffa:	f1 04       	cpc	r15, r1
     ffc:	01 05       	cpc	r16, r1
     ffe:	11 05       	cpc	r17, r1
    1000:	29 f0       	breq	.+10     	; 0x100c <__divsf3+0x13c>
    1002:	20 5c       	subi	r18, 0xC0	; 192
    1004:	3f 4f       	sbci	r19, 0xFF	; 255
    1006:	4f 4f       	sbci	r20, 0xFF	; 255
    1008:	5f 4f       	sbci	r21, 0xFF	; 255
    100a:	20 78       	andi	r18, 0x80	; 128
    100c:	2d 87       	std	Y+13, r18	; 0x0d
    100e:	3e 87       	std	Y+14, r19	; 0x0e
    1010:	4f 87       	std	Y+15, r20	; 0x0f
    1012:	58 8b       	std	Y+16, r21	; 0x10
    1014:	be 01       	movw	r22, r28
    1016:	67 5f       	subi	r22, 0xF7	; 247
    1018:	7f 4f       	sbci	r23, 0xFF	; 255
    101a:	cb 01       	movw	r24, r22
    101c:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <__pack_f>
    1020:	68 96       	adiw	r28, 0x18	; 24
    1022:	ea e0       	ldi	r30, 0x0A	; 10
    1024:	0c 94 c2 0a 	jmp	0x1584	; 0x1584 <__epilogue_restores__+0x10>

00001028 <__gtsf2>:
    1028:	a8 e1       	ldi	r26, 0x18	; 24
    102a:	b0 e0       	ldi	r27, 0x00	; 0
    102c:	ea e1       	ldi	r30, 0x1A	; 26
    102e:	f8 e0       	ldi	r31, 0x08	; 8
    1030:	0c 94 aa 0a 	jmp	0x1554	; 0x1554 <__prologue_saves__+0x18>
    1034:	69 83       	std	Y+1, r22	; 0x01
    1036:	7a 83       	std	Y+2, r23	; 0x02
    1038:	8b 83       	std	Y+3, r24	; 0x03
    103a:	9c 83       	std	Y+4, r25	; 0x04
    103c:	2d 83       	std	Y+5, r18	; 0x05
    103e:	3e 83       	std	Y+6, r19	; 0x06
    1040:	4f 83       	std	Y+7, r20	; 0x07
    1042:	58 87       	std	Y+8, r21	; 0x08
    1044:	89 e0       	ldi	r24, 0x09	; 9
    1046:	e8 2e       	mov	r14, r24
    1048:	f1 2c       	mov	r15, r1
    104a:	ec 0e       	add	r14, r28
    104c:	fd 1e       	adc	r15, r29
    104e:	ce 01       	movw	r24, r28
    1050:	01 96       	adiw	r24, 0x01	; 1
    1052:	b7 01       	movw	r22, r14
    1054:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
    1058:	8e 01       	movw	r16, r28
    105a:	0f 5e       	subi	r16, 0xEF	; 239
    105c:	1f 4f       	sbci	r17, 0xFF	; 255
    105e:	ce 01       	movw	r24, r28
    1060:	05 96       	adiw	r24, 0x05	; 5
    1062:	b8 01       	movw	r22, r16
    1064:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
    1068:	89 85       	ldd	r24, Y+9	; 0x09
    106a:	82 30       	cpi	r24, 0x02	; 2
    106c:	40 f0       	brcs	.+16     	; 0x107e <__gtsf2+0x56>
    106e:	89 89       	ldd	r24, Y+17	; 0x11
    1070:	82 30       	cpi	r24, 0x02	; 2
    1072:	28 f0       	brcs	.+10     	; 0x107e <__gtsf2+0x56>
    1074:	c7 01       	movw	r24, r14
    1076:	b8 01       	movw	r22, r16
    1078:	0e 94 45 0a 	call	0x148a	; 0x148a <__fpcmp_parts_f>
    107c:	01 c0       	rjmp	.+2      	; 0x1080 <__gtsf2+0x58>
    107e:	8f ef       	ldi	r24, 0xFF	; 255
    1080:	68 96       	adiw	r28, 0x18	; 24
    1082:	e6 e0       	ldi	r30, 0x06	; 6
    1084:	0c 94 c6 0a 	jmp	0x158c	; 0x158c <__epilogue_restores__+0x18>

00001088 <__gesf2>:
    1088:	a8 e1       	ldi	r26, 0x18	; 24
    108a:	b0 e0       	ldi	r27, 0x00	; 0
    108c:	ea e4       	ldi	r30, 0x4A	; 74
    108e:	f8 e0       	ldi	r31, 0x08	; 8
    1090:	0c 94 aa 0a 	jmp	0x1554	; 0x1554 <__prologue_saves__+0x18>
    1094:	69 83       	std	Y+1, r22	; 0x01
    1096:	7a 83       	std	Y+2, r23	; 0x02
    1098:	8b 83       	std	Y+3, r24	; 0x03
    109a:	9c 83       	std	Y+4, r25	; 0x04
    109c:	2d 83       	std	Y+5, r18	; 0x05
    109e:	3e 83       	std	Y+6, r19	; 0x06
    10a0:	4f 83       	std	Y+7, r20	; 0x07
    10a2:	58 87       	std	Y+8, r21	; 0x08
    10a4:	89 e0       	ldi	r24, 0x09	; 9
    10a6:	e8 2e       	mov	r14, r24
    10a8:	f1 2c       	mov	r15, r1
    10aa:	ec 0e       	add	r14, r28
    10ac:	fd 1e       	adc	r15, r29
    10ae:	ce 01       	movw	r24, r28
    10b0:	01 96       	adiw	r24, 0x01	; 1
    10b2:	b7 01       	movw	r22, r14
    10b4:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
    10b8:	8e 01       	movw	r16, r28
    10ba:	0f 5e       	subi	r16, 0xEF	; 239
    10bc:	1f 4f       	sbci	r17, 0xFF	; 255
    10be:	ce 01       	movw	r24, r28
    10c0:	05 96       	adiw	r24, 0x05	; 5
    10c2:	b8 01       	movw	r22, r16
    10c4:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
    10c8:	89 85       	ldd	r24, Y+9	; 0x09
    10ca:	82 30       	cpi	r24, 0x02	; 2
    10cc:	40 f0       	brcs	.+16     	; 0x10de <__gesf2+0x56>
    10ce:	89 89       	ldd	r24, Y+17	; 0x11
    10d0:	82 30       	cpi	r24, 0x02	; 2
    10d2:	28 f0       	brcs	.+10     	; 0x10de <__gesf2+0x56>
    10d4:	c7 01       	movw	r24, r14
    10d6:	b8 01       	movw	r22, r16
    10d8:	0e 94 45 0a 	call	0x148a	; 0x148a <__fpcmp_parts_f>
    10dc:	01 c0       	rjmp	.+2      	; 0x10e0 <__gesf2+0x58>
    10de:	8f ef       	ldi	r24, 0xFF	; 255
    10e0:	68 96       	adiw	r28, 0x18	; 24
    10e2:	e6 e0       	ldi	r30, 0x06	; 6
    10e4:	0c 94 c6 0a 	jmp	0x158c	; 0x158c <__epilogue_restores__+0x18>

000010e8 <__ltsf2>:
    10e8:	a8 e1       	ldi	r26, 0x18	; 24
    10ea:	b0 e0       	ldi	r27, 0x00	; 0
    10ec:	ea e7       	ldi	r30, 0x7A	; 122
    10ee:	f8 e0       	ldi	r31, 0x08	; 8
    10f0:	0c 94 aa 0a 	jmp	0x1554	; 0x1554 <__prologue_saves__+0x18>
    10f4:	69 83       	std	Y+1, r22	; 0x01
    10f6:	7a 83       	std	Y+2, r23	; 0x02
    10f8:	8b 83       	std	Y+3, r24	; 0x03
    10fa:	9c 83       	std	Y+4, r25	; 0x04
    10fc:	2d 83       	std	Y+5, r18	; 0x05
    10fe:	3e 83       	std	Y+6, r19	; 0x06
    1100:	4f 83       	std	Y+7, r20	; 0x07
    1102:	58 87       	std	Y+8, r21	; 0x08
    1104:	89 e0       	ldi	r24, 0x09	; 9
    1106:	e8 2e       	mov	r14, r24
    1108:	f1 2c       	mov	r15, r1
    110a:	ec 0e       	add	r14, r28
    110c:	fd 1e       	adc	r15, r29
    110e:	ce 01       	movw	r24, r28
    1110:	01 96       	adiw	r24, 0x01	; 1
    1112:	b7 01       	movw	r22, r14
    1114:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
    1118:	8e 01       	movw	r16, r28
    111a:	0f 5e       	subi	r16, 0xEF	; 239
    111c:	1f 4f       	sbci	r17, 0xFF	; 255
    111e:	ce 01       	movw	r24, r28
    1120:	05 96       	adiw	r24, 0x05	; 5
    1122:	b8 01       	movw	r22, r16
    1124:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
    1128:	89 85       	ldd	r24, Y+9	; 0x09
    112a:	82 30       	cpi	r24, 0x02	; 2
    112c:	40 f0       	brcs	.+16     	; 0x113e <__ltsf2+0x56>
    112e:	89 89       	ldd	r24, Y+17	; 0x11
    1130:	82 30       	cpi	r24, 0x02	; 2
    1132:	28 f0       	brcs	.+10     	; 0x113e <__ltsf2+0x56>
    1134:	c7 01       	movw	r24, r14
    1136:	b8 01       	movw	r22, r16
    1138:	0e 94 45 0a 	call	0x148a	; 0x148a <__fpcmp_parts_f>
    113c:	01 c0       	rjmp	.+2      	; 0x1140 <__ltsf2+0x58>
    113e:	81 e0       	ldi	r24, 0x01	; 1
    1140:	68 96       	adiw	r28, 0x18	; 24
    1142:	e6 e0       	ldi	r30, 0x06	; 6
    1144:	0c 94 c6 0a 	jmp	0x158c	; 0x158c <__epilogue_restores__+0x18>

00001148 <__fixsfsi>:
    1148:	ac e0       	ldi	r26, 0x0C	; 12
    114a:	b0 e0       	ldi	r27, 0x00	; 0
    114c:	ea ea       	ldi	r30, 0xAA	; 170
    114e:	f8 e0       	ldi	r31, 0x08	; 8
    1150:	0c 94 ae 0a 	jmp	0x155c	; 0x155c <__prologue_saves__+0x20>
    1154:	69 83       	std	Y+1, r22	; 0x01
    1156:	7a 83       	std	Y+2, r23	; 0x02
    1158:	8b 83       	std	Y+3, r24	; 0x03
    115a:	9c 83       	std	Y+4, r25	; 0x04
    115c:	ce 01       	movw	r24, r28
    115e:	01 96       	adiw	r24, 0x01	; 1
    1160:	be 01       	movw	r22, r28
    1162:	6b 5f       	subi	r22, 0xFB	; 251
    1164:	7f 4f       	sbci	r23, 0xFF	; 255
    1166:	0e 94 cd 09 	call	0x139a	; 0x139a <__unpack_f>
    116a:	8d 81       	ldd	r24, Y+5	; 0x05
    116c:	82 30       	cpi	r24, 0x02	; 2
    116e:	61 f1       	breq	.+88     	; 0x11c8 <__fixsfsi+0x80>
    1170:	82 30       	cpi	r24, 0x02	; 2
    1172:	50 f1       	brcs	.+84     	; 0x11c8 <__fixsfsi+0x80>
    1174:	84 30       	cpi	r24, 0x04	; 4
    1176:	21 f4       	brne	.+8      	; 0x1180 <__fixsfsi+0x38>
    1178:	8e 81       	ldd	r24, Y+6	; 0x06
    117a:	88 23       	and	r24, r24
    117c:	51 f1       	breq	.+84     	; 0x11d2 <__fixsfsi+0x8a>
    117e:	2e c0       	rjmp	.+92     	; 0x11dc <__fixsfsi+0x94>
    1180:	2f 81       	ldd	r18, Y+7	; 0x07
    1182:	38 85       	ldd	r19, Y+8	; 0x08
    1184:	37 fd       	sbrc	r19, 7
    1186:	20 c0       	rjmp	.+64     	; 0x11c8 <__fixsfsi+0x80>
    1188:	6e 81       	ldd	r22, Y+6	; 0x06
    118a:	2f 31       	cpi	r18, 0x1F	; 31
    118c:	31 05       	cpc	r19, r1
    118e:	1c f0       	brlt	.+6      	; 0x1196 <__fixsfsi+0x4e>
    1190:	66 23       	and	r22, r22
    1192:	f9 f0       	breq	.+62     	; 0x11d2 <__fixsfsi+0x8a>
    1194:	23 c0       	rjmp	.+70     	; 0x11dc <__fixsfsi+0x94>
    1196:	8e e1       	ldi	r24, 0x1E	; 30
    1198:	90 e0       	ldi	r25, 0x00	; 0
    119a:	82 1b       	sub	r24, r18
    119c:	93 0b       	sbc	r25, r19
    119e:	29 85       	ldd	r18, Y+9	; 0x09
    11a0:	3a 85       	ldd	r19, Y+10	; 0x0a
    11a2:	4b 85       	ldd	r20, Y+11	; 0x0b
    11a4:	5c 85       	ldd	r21, Y+12	; 0x0c
    11a6:	04 c0       	rjmp	.+8      	; 0x11b0 <__fixsfsi+0x68>
    11a8:	56 95       	lsr	r21
    11aa:	47 95       	ror	r20
    11ac:	37 95       	ror	r19
    11ae:	27 95       	ror	r18
    11b0:	8a 95       	dec	r24
    11b2:	d2 f7       	brpl	.-12     	; 0x11a8 <__fixsfsi+0x60>
    11b4:	66 23       	and	r22, r22
    11b6:	b1 f0       	breq	.+44     	; 0x11e4 <__fixsfsi+0x9c>
    11b8:	50 95       	com	r21
    11ba:	40 95       	com	r20
    11bc:	30 95       	com	r19
    11be:	21 95       	neg	r18
    11c0:	3f 4f       	sbci	r19, 0xFF	; 255
    11c2:	4f 4f       	sbci	r20, 0xFF	; 255
    11c4:	5f 4f       	sbci	r21, 0xFF	; 255
    11c6:	0e c0       	rjmp	.+28     	; 0x11e4 <__fixsfsi+0x9c>
    11c8:	20 e0       	ldi	r18, 0x00	; 0
    11ca:	30 e0       	ldi	r19, 0x00	; 0
    11cc:	40 e0       	ldi	r20, 0x00	; 0
    11ce:	50 e0       	ldi	r21, 0x00	; 0
    11d0:	09 c0       	rjmp	.+18     	; 0x11e4 <__fixsfsi+0x9c>
    11d2:	2f ef       	ldi	r18, 0xFF	; 255
    11d4:	3f ef       	ldi	r19, 0xFF	; 255
    11d6:	4f ef       	ldi	r20, 0xFF	; 255
    11d8:	5f e7       	ldi	r21, 0x7F	; 127
    11da:	04 c0       	rjmp	.+8      	; 0x11e4 <__fixsfsi+0x9c>
    11dc:	20 e0       	ldi	r18, 0x00	; 0
    11de:	30 e0       	ldi	r19, 0x00	; 0
    11e0:	40 e0       	ldi	r20, 0x00	; 0
    11e2:	50 e8       	ldi	r21, 0x80	; 128
    11e4:	b9 01       	movw	r22, r18
    11e6:	ca 01       	movw	r24, r20
    11e8:	2c 96       	adiw	r28, 0x0c	; 12
    11ea:	e2 e0       	ldi	r30, 0x02	; 2
    11ec:	0c 94 ca 0a 	jmp	0x1594	; 0x1594 <__epilogue_restores__+0x20>

000011f0 <__pack_f>:
    11f0:	df 92       	push	r13
    11f2:	ef 92       	push	r14
    11f4:	ff 92       	push	r15
    11f6:	0f 93       	push	r16
    11f8:	1f 93       	push	r17
    11fa:	fc 01       	movw	r30, r24
    11fc:	e4 80       	ldd	r14, Z+4	; 0x04
    11fe:	f5 80       	ldd	r15, Z+5	; 0x05
    1200:	06 81       	ldd	r16, Z+6	; 0x06
    1202:	17 81       	ldd	r17, Z+7	; 0x07
    1204:	d1 80       	ldd	r13, Z+1	; 0x01
    1206:	80 81       	ld	r24, Z
    1208:	82 30       	cpi	r24, 0x02	; 2
    120a:	48 f4       	brcc	.+18     	; 0x121e <__pack_f+0x2e>
    120c:	80 e0       	ldi	r24, 0x00	; 0
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	a0 e1       	ldi	r26, 0x10	; 16
    1212:	b0 e0       	ldi	r27, 0x00	; 0
    1214:	e8 2a       	or	r14, r24
    1216:	f9 2a       	or	r15, r25
    1218:	0a 2b       	or	r16, r26
    121a:	1b 2b       	or	r17, r27
    121c:	a5 c0       	rjmp	.+330    	; 0x1368 <__pack_f+0x178>
    121e:	84 30       	cpi	r24, 0x04	; 4
    1220:	09 f4       	brne	.+2      	; 0x1224 <__pack_f+0x34>
    1222:	9f c0       	rjmp	.+318    	; 0x1362 <__pack_f+0x172>
    1224:	82 30       	cpi	r24, 0x02	; 2
    1226:	21 f4       	brne	.+8      	; 0x1230 <__pack_f+0x40>
    1228:	ee 24       	eor	r14, r14
    122a:	ff 24       	eor	r15, r15
    122c:	87 01       	movw	r16, r14
    122e:	05 c0       	rjmp	.+10     	; 0x123a <__pack_f+0x4a>
    1230:	e1 14       	cp	r14, r1
    1232:	f1 04       	cpc	r15, r1
    1234:	01 05       	cpc	r16, r1
    1236:	11 05       	cpc	r17, r1
    1238:	19 f4       	brne	.+6      	; 0x1240 <__pack_f+0x50>
    123a:	e0 e0       	ldi	r30, 0x00	; 0
    123c:	f0 e0       	ldi	r31, 0x00	; 0
    123e:	96 c0       	rjmp	.+300    	; 0x136c <__pack_f+0x17c>
    1240:	62 81       	ldd	r22, Z+2	; 0x02
    1242:	73 81       	ldd	r23, Z+3	; 0x03
    1244:	9f ef       	ldi	r25, 0xFF	; 255
    1246:	62 38       	cpi	r22, 0x82	; 130
    1248:	79 07       	cpc	r23, r25
    124a:	0c f0       	brlt	.+2      	; 0x124e <__pack_f+0x5e>
    124c:	5b c0       	rjmp	.+182    	; 0x1304 <__pack_f+0x114>
    124e:	22 e8       	ldi	r18, 0x82	; 130
    1250:	3f ef       	ldi	r19, 0xFF	; 255
    1252:	26 1b       	sub	r18, r22
    1254:	37 0b       	sbc	r19, r23
    1256:	2a 31       	cpi	r18, 0x1A	; 26
    1258:	31 05       	cpc	r19, r1
    125a:	2c f0       	brlt	.+10     	; 0x1266 <__pack_f+0x76>
    125c:	20 e0       	ldi	r18, 0x00	; 0
    125e:	30 e0       	ldi	r19, 0x00	; 0
    1260:	40 e0       	ldi	r20, 0x00	; 0
    1262:	50 e0       	ldi	r21, 0x00	; 0
    1264:	2a c0       	rjmp	.+84     	; 0x12ba <__pack_f+0xca>
    1266:	b8 01       	movw	r22, r16
    1268:	a7 01       	movw	r20, r14
    126a:	02 2e       	mov	r0, r18
    126c:	04 c0       	rjmp	.+8      	; 0x1276 <__pack_f+0x86>
    126e:	76 95       	lsr	r23
    1270:	67 95       	ror	r22
    1272:	57 95       	ror	r21
    1274:	47 95       	ror	r20
    1276:	0a 94       	dec	r0
    1278:	d2 f7       	brpl	.-12     	; 0x126e <__pack_f+0x7e>
    127a:	81 e0       	ldi	r24, 0x01	; 1
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	a0 e0       	ldi	r26, 0x00	; 0
    1280:	b0 e0       	ldi	r27, 0x00	; 0
    1282:	04 c0       	rjmp	.+8      	; 0x128c <__pack_f+0x9c>
    1284:	88 0f       	add	r24, r24
    1286:	99 1f       	adc	r25, r25
    1288:	aa 1f       	adc	r26, r26
    128a:	bb 1f       	adc	r27, r27
    128c:	2a 95       	dec	r18
    128e:	d2 f7       	brpl	.-12     	; 0x1284 <__pack_f+0x94>
    1290:	01 97       	sbiw	r24, 0x01	; 1
    1292:	a1 09       	sbc	r26, r1
    1294:	b1 09       	sbc	r27, r1
    1296:	8e 21       	and	r24, r14
    1298:	9f 21       	and	r25, r15
    129a:	a0 23       	and	r26, r16
    129c:	b1 23       	and	r27, r17
    129e:	00 97       	sbiw	r24, 0x00	; 0
    12a0:	a1 05       	cpc	r26, r1
    12a2:	b1 05       	cpc	r27, r1
    12a4:	21 f0       	breq	.+8      	; 0x12ae <__pack_f+0xbe>
    12a6:	81 e0       	ldi	r24, 0x01	; 1
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	a0 e0       	ldi	r26, 0x00	; 0
    12ac:	b0 e0       	ldi	r27, 0x00	; 0
    12ae:	9a 01       	movw	r18, r20
    12b0:	ab 01       	movw	r20, r22
    12b2:	28 2b       	or	r18, r24
    12b4:	39 2b       	or	r19, r25
    12b6:	4a 2b       	or	r20, r26
    12b8:	5b 2b       	or	r21, r27
    12ba:	da 01       	movw	r26, r20
    12bc:	c9 01       	movw	r24, r18
    12be:	8f 77       	andi	r24, 0x7F	; 127
    12c0:	90 70       	andi	r25, 0x00	; 0
    12c2:	a0 70       	andi	r26, 0x00	; 0
    12c4:	b0 70       	andi	r27, 0x00	; 0
    12c6:	80 34       	cpi	r24, 0x40	; 64
    12c8:	91 05       	cpc	r25, r1
    12ca:	a1 05       	cpc	r26, r1
    12cc:	b1 05       	cpc	r27, r1
    12ce:	39 f4       	brne	.+14     	; 0x12de <__pack_f+0xee>
    12d0:	27 ff       	sbrs	r18, 7
    12d2:	09 c0       	rjmp	.+18     	; 0x12e6 <__pack_f+0xf6>
    12d4:	20 5c       	subi	r18, 0xC0	; 192
    12d6:	3f 4f       	sbci	r19, 0xFF	; 255
    12d8:	4f 4f       	sbci	r20, 0xFF	; 255
    12da:	5f 4f       	sbci	r21, 0xFF	; 255
    12dc:	04 c0       	rjmp	.+8      	; 0x12e6 <__pack_f+0xf6>
    12de:	21 5c       	subi	r18, 0xC1	; 193
    12e0:	3f 4f       	sbci	r19, 0xFF	; 255
    12e2:	4f 4f       	sbci	r20, 0xFF	; 255
    12e4:	5f 4f       	sbci	r21, 0xFF	; 255
    12e6:	e0 e0       	ldi	r30, 0x00	; 0
    12e8:	f0 e0       	ldi	r31, 0x00	; 0
    12ea:	20 30       	cpi	r18, 0x00	; 0
    12ec:	a0 e0       	ldi	r26, 0x00	; 0
    12ee:	3a 07       	cpc	r19, r26
    12f0:	a0 e0       	ldi	r26, 0x00	; 0
    12f2:	4a 07       	cpc	r20, r26
    12f4:	a0 e4       	ldi	r26, 0x40	; 64
    12f6:	5a 07       	cpc	r21, r26
    12f8:	10 f0       	brcs	.+4      	; 0x12fe <__pack_f+0x10e>
    12fa:	e1 e0       	ldi	r30, 0x01	; 1
    12fc:	f0 e0       	ldi	r31, 0x00	; 0
    12fe:	79 01       	movw	r14, r18
    1300:	8a 01       	movw	r16, r20
    1302:	27 c0       	rjmp	.+78     	; 0x1352 <__pack_f+0x162>
    1304:	60 38       	cpi	r22, 0x80	; 128
    1306:	71 05       	cpc	r23, r1
    1308:	64 f5       	brge	.+88     	; 0x1362 <__pack_f+0x172>
    130a:	fb 01       	movw	r30, r22
    130c:	e1 58       	subi	r30, 0x81	; 129
    130e:	ff 4f       	sbci	r31, 0xFF	; 255
    1310:	d8 01       	movw	r26, r16
    1312:	c7 01       	movw	r24, r14
    1314:	8f 77       	andi	r24, 0x7F	; 127
    1316:	90 70       	andi	r25, 0x00	; 0
    1318:	a0 70       	andi	r26, 0x00	; 0
    131a:	b0 70       	andi	r27, 0x00	; 0
    131c:	80 34       	cpi	r24, 0x40	; 64
    131e:	91 05       	cpc	r25, r1
    1320:	a1 05       	cpc	r26, r1
    1322:	b1 05       	cpc	r27, r1
    1324:	39 f4       	brne	.+14     	; 0x1334 <__pack_f+0x144>
    1326:	e7 fe       	sbrs	r14, 7
    1328:	0d c0       	rjmp	.+26     	; 0x1344 <__pack_f+0x154>
    132a:	80 e4       	ldi	r24, 0x40	; 64
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	a0 e0       	ldi	r26, 0x00	; 0
    1330:	b0 e0       	ldi	r27, 0x00	; 0
    1332:	04 c0       	rjmp	.+8      	; 0x133c <__pack_f+0x14c>
    1334:	8f e3       	ldi	r24, 0x3F	; 63
    1336:	90 e0       	ldi	r25, 0x00	; 0
    1338:	a0 e0       	ldi	r26, 0x00	; 0
    133a:	b0 e0       	ldi	r27, 0x00	; 0
    133c:	e8 0e       	add	r14, r24
    133e:	f9 1e       	adc	r15, r25
    1340:	0a 1f       	adc	r16, r26
    1342:	1b 1f       	adc	r17, r27
    1344:	17 ff       	sbrs	r17, 7
    1346:	05 c0       	rjmp	.+10     	; 0x1352 <__pack_f+0x162>
    1348:	16 95       	lsr	r17
    134a:	07 95       	ror	r16
    134c:	f7 94       	ror	r15
    134e:	e7 94       	ror	r14
    1350:	31 96       	adiw	r30, 0x01	; 1
    1352:	87 e0       	ldi	r24, 0x07	; 7
    1354:	16 95       	lsr	r17
    1356:	07 95       	ror	r16
    1358:	f7 94       	ror	r15
    135a:	e7 94       	ror	r14
    135c:	8a 95       	dec	r24
    135e:	d1 f7       	brne	.-12     	; 0x1354 <__pack_f+0x164>
    1360:	05 c0       	rjmp	.+10     	; 0x136c <__pack_f+0x17c>
    1362:	ee 24       	eor	r14, r14
    1364:	ff 24       	eor	r15, r15
    1366:	87 01       	movw	r16, r14
    1368:	ef ef       	ldi	r30, 0xFF	; 255
    136a:	f0 e0       	ldi	r31, 0x00	; 0
    136c:	6e 2f       	mov	r22, r30
    136e:	67 95       	ror	r22
    1370:	66 27       	eor	r22, r22
    1372:	67 95       	ror	r22
    1374:	90 2f       	mov	r25, r16
    1376:	9f 77       	andi	r25, 0x7F	; 127
    1378:	d7 94       	ror	r13
    137a:	dd 24       	eor	r13, r13
    137c:	d7 94       	ror	r13
    137e:	8e 2f       	mov	r24, r30
    1380:	86 95       	lsr	r24
    1382:	49 2f       	mov	r20, r25
    1384:	46 2b       	or	r20, r22
    1386:	58 2f       	mov	r21, r24
    1388:	5d 29       	or	r21, r13
    138a:	b7 01       	movw	r22, r14
    138c:	ca 01       	movw	r24, r20
    138e:	1f 91       	pop	r17
    1390:	0f 91       	pop	r16
    1392:	ff 90       	pop	r15
    1394:	ef 90       	pop	r14
    1396:	df 90       	pop	r13
    1398:	08 95       	ret

0000139a <__unpack_f>:
    139a:	fc 01       	movw	r30, r24
    139c:	db 01       	movw	r26, r22
    139e:	40 81       	ld	r20, Z
    13a0:	51 81       	ldd	r21, Z+1	; 0x01
    13a2:	22 81       	ldd	r18, Z+2	; 0x02
    13a4:	62 2f       	mov	r22, r18
    13a6:	6f 77       	andi	r22, 0x7F	; 127
    13a8:	70 e0       	ldi	r23, 0x00	; 0
    13aa:	22 1f       	adc	r18, r18
    13ac:	22 27       	eor	r18, r18
    13ae:	22 1f       	adc	r18, r18
    13b0:	93 81       	ldd	r25, Z+3	; 0x03
    13b2:	89 2f       	mov	r24, r25
    13b4:	88 0f       	add	r24, r24
    13b6:	82 2b       	or	r24, r18
    13b8:	28 2f       	mov	r18, r24
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	99 1f       	adc	r25, r25
    13be:	99 27       	eor	r25, r25
    13c0:	99 1f       	adc	r25, r25
    13c2:	11 96       	adiw	r26, 0x01	; 1
    13c4:	9c 93       	st	X, r25
    13c6:	11 97       	sbiw	r26, 0x01	; 1
    13c8:	21 15       	cp	r18, r1
    13ca:	31 05       	cpc	r19, r1
    13cc:	a9 f5       	brne	.+106    	; 0x1438 <__unpack_f+0x9e>
    13ce:	41 15       	cp	r20, r1
    13d0:	51 05       	cpc	r21, r1
    13d2:	61 05       	cpc	r22, r1
    13d4:	71 05       	cpc	r23, r1
    13d6:	11 f4       	brne	.+4      	; 0x13dc <__unpack_f+0x42>
    13d8:	82 e0       	ldi	r24, 0x02	; 2
    13da:	37 c0       	rjmp	.+110    	; 0x144a <__unpack_f+0xb0>
    13dc:	82 e8       	ldi	r24, 0x82	; 130
    13de:	9f ef       	ldi	r25, 0xFF	; 255
    13e0:	13 96       	adiw	r26, 0x03	; 3
    13e2:	9c 93       	st	X, r25
    13e4:	8e 93       	st	-X, r24
    13e6:	12 97       	sbiw	r26, 0x02	; 2
    13e8:	9a 01       	movw	r18, r20
    13ea:	ab 01       	movw	r20, r22
    13ec:	67 e0       	ldi	r22, 0x07	; 7
    13ee:	22 0f       	add	r18, r18
    13f0:	33 1f       	adc	r19, r19
    13f2:	44 1f       	adc	r20, r20
    13f4:	55 1f       	adc	r21, r21
    13f6:	6a 95       	dec	r22
    13f8:	d1 f7       	brne	.-12     	; 0x13ee <__unpack_f+0x54>
    13fa:	83 e0       	ldi	r24, 0x03	; 3
    13fc:	8c 93       	st	X, r24
    13fe:	0d c0       	rjmp	.+26     	; 0x141a <__unpack_f+0x80>
    1400:	22 0f       	add	r18, r18
    1402:	33 1f       	adc	r19, r19
    1404:	44 1f       	adc	r20, r20
    1406:	55 1f       	adc	r21, r21
    1408:	12 96       	adiw	r26, 0x02	; 2
    140a:	8d 91       	ld	r24, X+
    140c:	9c 91       	ld	r25, X
    140e:	13 97       	sbiw	r26, 0x03	; 3
    1410:	01 97       	sbiw	r24, 0x01	; 1
    1412:	13 96       	adiw	r26, 0x03	; 3
    1414:	9c 93       	st	X, r25
    1416:	8e 93       	st	-X, r24
    1418:	12 97       	sbiw	r26, 0x02	; 2
    141a:	20 30       	cpi	r18, 0x00	; 0
    141c:	80 e0       	ldi	r24, 0x00	; 0
    141e:	38 07       	cpc	r19, r24
    1420:	80 e0       	ldi	r24, 0x00	; 0
    1422:	48 07       	cpc	r20, r24
    1424:	80 e4       	ldi	r24, 0x40	; 64
    1426:	58 07       	cpc	r21, r24
    1428:	58 f3       	brcs	.-42     	; 0x1400 <__unpack_f+0x66>
    142a:	14 96       	adiw	r26, 0x04	; 4
    142c:	2d 93       	st	X+, r18
    142e:	3d 93       	st	X+, r19
    1430:	4d 93       	st	X+, r20
    1432:	5c 93       	st	X, r21
    1434:	17 97       	sbiw	r26, 0x07	; 7
    1436:	08 95       	ret
    1438:	2f 3f       	cpi	r18, 0xFF	; 255
    143a:	31 05       	cpc	r19, r1
    143c:	79 f4       	brne	.+30     	; 0x145c <__unpack_f+0xc2>
    143e:	41 15       	cp	r20, r1
    1440:	51 05       	cpc	r21, r1
    1442:	61 05       	cpc	r22, r1
    1444:	71 05       	cpc	r23, r1
    1446:	19 f4       	brne	.+6      	; 0x144e <__unpack_f+0xb4>
    1448:	84 e0       	ldi	r24, 0x04	; 4
    144a:	8c 93       	st	X, r24
    144c:	08 95       	ret
    144e:	64 ff       	sbrs	r22, 4
    1450:	03 c0       	rjmp	.+6      	; 0x1458 <__unpack_f+0xbe>
    1452:	81 e0       	ldi	r24, 0x01	; 1
    1454:	8c 93       	st	X, r24
    1456:	12 c0       	rjmp	.+36     	; 0x147c <__unpack_f+0xe2>
    1458:	1c 92       	st	X, r1
    145a:	10 c0       	rjmp	.+32     	; 0x147c <__unpack_f+0xe2>
    145c:	2f 57       	subi	r18, 0x7F	; 127
    145e:	30 40       	sbci	r19, 0x00	; 0
    1460:	13 96       	adiw	r26, 0x03	; 3
    1462:	3c 93       	st	X, r19
    1464:	2e 93       	st	-X, r18
    1466:	12 97       	sbiw	r26, 0x02	; 2
    1468:	83 e0       	ldi	r24, 0x03	; 3
    146a:	8c 93       	st	X, r24
    146c:	87 e0       	ldi	r24, 0x07	; 7
    146e:	44 0f       	add	r20, r20
    1470:	55 1f       	adc	r21, r21
    1472:	66 1f       	adc	r22, r22
    1474:	77 1f       	adc	r23, r23
    1476:	8a 95       	dec	r24
    1478:	d1 f7       	brne	.-12     	; 0x146e <__unpack_f+0xd4>
    147a:	70 64       	ori	r23, 0x40	; 64
    147c:	14 96       	adiw	r26, 0x04	; 4
    147e:	4d 93       	st	X+, r20
    1480:	5d 93       	st	X+, r21
    1482:	6d 93       	st	X+, r22
    1484:	7c 93       	st	X, r23
    1486:	17 97       	sbiw	r26, 0x07	; 7
    1488:	08 95       	ret

0000148a <__fpcmp_parts_f>:
    148a:	1f 93       	push	r17
    148c:	dc 01       	movw	r26, r24
    148e:	fb 01       	movw	r30, r22
    1490:	9c 91       	ld	r25, X
    1492:	92 30       	cpi	r25, 0x02	; 2
    1494:	08 f4       	brcc	.+2      	; 0x1498 <__fpcmp_parts_f+0xe>
    1496:	47 c0       	rjmp	.+142    	; 0x1526 <__fpcmp_parts_f+0x9c>
    1498:	80 81       	ld	r24, Z
    149a:	82 30       	cpi	r24, 0x02	; 2
    149c:	08 f4       	brcc	.+2      	; 0x14a0 <__fpcmp_parts_f+0x16>
    149e:	43 c0       	rjmp	.+134    	; 0x1526 <__fpcmp_parts_f+0x9c>
    14a0:	94 30       	cpi	r25, 0x04	; 4
    14a2:	51 f4       	brne	.+20     	; 0x14b8 <__fpcmp_parts_f+0x2e>
    14a4:	11 96       	adiw	r26, 0x01	; 1
    14a6:	1c 91       	ld	r17, X
    14a8:	84 30       	cpi	r24, 0x04	; 4
    14aa:	99 f5       	brne	.+102    	; 0x1512 <__fpcmp_parts_f+0x88>
    14ac:	81 81       	ldd	r24, Z+1	; 0x01
    14ae:	68 2f       	mov	r22, r24
    14b0:	70 e0       	ldi	r23, 0x00	; 0
    14b2:	61 1b       	sub	r22, r17
    14b4:	71 09       	sbc	r23, r1
    14b6:	3f c0       	rjmp	.+126    	; 0x1536 <__fpcmp_parts_f+0xac>
    14b8:	84 30       	cpi	r24, 0x04	; 4
    14ba:	21 f0       	breq	.+8      	; 0x14c4 <__fpcmp_parts_f+0x3a>
    14bc:	92 30       	cpi	r25, 0x02	; 2
    14be:	31 f4       	brne	.+12     	; 0x14cc <__fpcmp_parts_f+0x42>
    14c0:	82 30       	cpi	r24, 0x02	; 2
    14c2:	b9 f1       	breq	.+110    	; 0x1532 <__fpcmp_parts_f+0xa8>
    14c4:	81 81       	ldd	r24, Z+1	; 0x01
    14c6:	88 23       	and	r24, r24
    14c8:	89 f1       	breq	.+98     	; 0x152c <__fpcmp_parts_f+0xa2>
    14ca:	2d c0       	rjmp	.+90     	; 0x1526 <__fpcmp_parts_f+0x9c>
    14cc:	11 96       	adiw	r26, 0x01	; 1
    14ce:	1c 91       	ld	r17, X
    14d0:	11 97       	sbiw	r26, 0x01	; 1
    14d2:	82 30       	cpi	r24, 0x02	; 2
    14d4:	f1 f0       	breq	.+60     	; 0x1512 <__fpcmp_parts_f+0x88>
    14d6:	81 81       	ldd	r24, Z+1	; 0x01
    14d8:	18 17       	cp	r17, r24
    14da:	d9 f4       	brne	.+54     	; 0x1512 <__fpcmp_parts_f+0x88>
    14dc:	12 96       	adiw	r26, 0x02	; 2
    14de:	2d 91       	ld	r18, X+
    14e0:	3c 91       	ld	r19, X
    14e2:	13 97       	sbiw	r26, 0x03	; 3
    14e4:	82 81       	ldd	r24, Z+2	; 0x02
    14e6:	93 81       	ldd	r25, Z+3	; 0x03
    14e8:	82 17       	cp	r24, r18
    14ea:	93 07       	cpc	r25, r19
    14ec:	94 f0       	brlt	.+36     	; 0x1512 <__fpcmp_parts_f+0x88>
    14ee:	28 17       	cp	r18, r24
    14f0:	39 07       	cpc	r19, r25
    14f2:	bc f0       	brlt	.+46     	; 0x1522 <__fpcmp_parts_f+0x98>
    14f4:	14 96       	adiw	r26, 0x04	; 4
    14f6:	8d 91       	ld	r24, X+
    14f8:	9d 91       	ld	r25, X+
    14fa:	0d 90       	ld	r0, X+
    14fc:	bc 91       	ld	r27, X
    14fe:	a0 2d       	mov	r26, r0
    1500:	24 81       	ldd	r18, Z+4	; 0x04
    1502:	35 81       	ldd	r19, Z+5	; 0x05
    1504:	46 81       	ldd	r20, Z+6	; 0x06
    1506:	57 81       	ldd	r21, Z+7	; 0x07
    1508:	28 17       	cp	r18, r24
    150a:	39 07       	cpc	r19, r25
    150c:	4a 07       	cpc	r20, r26
    150e:	5b 07       	cpc	r21, r27
    1510:	18 f4       	brcc	.+6      	; 0x1518 <__fpcmp_parts_f+0x8e>
    1512:	11 23       	and	r17, r17
    1514:	41 f0       	breq	.+16     	; 0x1526 <__fpcmp_parts_f+0x9c>
    1516:	0a c0       	rjmp	.+20     	; 0x152c <__fpcmp_parts_f+0xa2>
    1518:	82 17       	cp	r24, r18
    151a:	93 07       	cpc	r25, r19
    151c:	a4 07       	cpc	r26, r20
    151e:	b5 07       	cpc	r27, r21
    1520:	40 f4       	brcc	.+16     	; 0x1532 <__fpcmp_parts_f+0xa8>
    1522:	11 23       	and	r17, r17
    1524:	19 f0       	breq	.+6      	; 0x152c <__fpcmp_parts_f+0xa2>
    1526:	61 e0       	ldi	r22, 0x01	; 1
    1528:	70 e0       	ldi	r23, 0x00	; 0
    152a:	05 c0       	rjmp	.+10     	; 0x1536 <__fpcmp_parts_f+0xac>
    152c:	6f ef       	ldi	r22, 0xFF	; 255
    152e:	7f ef       	ldi	r23, 0xFF	; 255
    1530:	02 c0       	rjmp	.+4      	; 0x1536 <__fpcmp_parts_f+0xac>
    1532:	60 e0       	ldi	r22, 0x00	; 0
    1534:	70 e0       	ldi	r23, 0x00	; 0
    1536:	cb 01       	movw	r24, r22
    1538:	1f 91       	pop	r17
    153a:	08 95       	ret

0000153c <__prologue_saves__>:
    153c:	2f 92       	push	r2
    153e:	3f 92       	push	r3
    1540:	4f 92       	push	r4
    1542:	5f 92       	push	r5
    1544:	6f 92       	push	r6
    1546:	7f 92       	push	r7
    1548:	8f 92       	push	r8
    154a:	9f 92       	push	r9
    154c:	af 92       	push	r10
    154e:	bf 92       	push	r11
    1550:	cf 92       	push	r12
    1552:	df 92       	push	r13
    1554:	ef 92       	push	r14
    1556:	ff 92       	push	r15
    1558:	0f 93       	push	r16
    155a:	1f 93       	push	r17
    155c:	cf 93       	push	r28
    155e:	df 93       	push	r29
    1560:	cd b7       	in	r28, 0x3d	; 61
    1562:	de b7       	in	r29, 0x3e	; 62
    1564:	ca 1b       	sub	r28, r26
    1566:	db 0b       	sbc	r29, r27
    1568:	0f b6       	in	r0, 0x3f	; 63
    156a:	f8 94       	cli
    156c:	de bf       	out	0x3e, r29	; 62
    156e:	0f be       	out	0x3f, r0	; 63
    1570:	cd bf       	out	0x3d, r28	; 61
    1572:	09 94       	ijmp

00001574 <__epilogue_restores__>:
    1574:	2a 88       	ldd	r2, Y+18	; 0x12
    1576:	39 88       	ldd	r3, Y+17	; 0x11
    1578:	48 88       	ldd	r4, Y+16	; 0x10
    157a:	5f 84       	ldd	r5, Y+15	; 0x0f
    157c:	6e 84       	ldd	r6, Y+14	; 0x0e
    157e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1580:	8c 84       	ldd	r8, Y+12	; 0x0c
    1582:	9b 84       	ldd	r9, Y+11	; 0x0b
    1584:	aa 84       	ldd	r10, Y+10	; 0x0a
    1586:	b9 84       	ldd	r11, Y+9	; 0x09
    1588:	c8 84       	ldd	r12, Y+8	; 0x08
    158a:	df 80       	ldd	r13, Y+7	; 0x07
    158c:	ee 80       	ldd	r14, Y+6	; 0x06
    158e:	fd 80       	ldd	r15, Y+5	; 0x05
    1590:	0c 81       	ldd	r16, Y+4	; 0x04
    1592:	1b 81       	ldd	r17, Y+3	; 0x03
    1594:	aa 81       	ldd	r26, Y+2	; 0x02
    1596:	b9 81       	ldd	r27, Y+1	; 0x01
    1598:	ce 0f       	add	r28, r30
    159a:	d1 1d       	adc	r29, r1
    159c:	0f b6       	in	r0, 0x3f	; 63
    159e:	f8 94       	cli
    15a0:	de bf       	out	0x3e, r29	; 62
    15a2:	0f be       	out	0x3f, r0	; 63
    15a4:	cd bf       	out	0x3d, r28	; 61
    15a6:	ed 01       	movw	r28, r26
    15a8:	08 95       	ret

000015aa <itoa>:
    15aa:	e6 2f       	mov	r30, r22
    15ac:	f7 2f       	mov	r31, r23
    15ae:	2e 2f       	mov	r18, r30
    15b0:	3f 2f       	mov	r19, r31
    15b2:	e8 94       	clt
    15b4:	42 30       	cpi	r20, 0x02	; 2
    15b6:	c4 f0       	brlt	.+48     	; 0x15e8 <itoa+0x3e>
    15b8:	45 32       	cpi	r20, 0x25	; 37
    15ba:	b4 f4       	brge	.+44     	; 0x15e8 <itoa+0x3e>
    15bc:	4a 30       	cpi	r20, 0x0A	; 10
    15be:	29 f4       	brne	.+10     	; 0x15ca <itoa+0x20>
    15c0:	97 fb       	bst	r25, 7
    15c2:	1e f4       	brtc	.+6      	; 0x15ca <itoa+0x20>
    15c4:	90 95       	com	r25
    15c6:	81 95       	neg	r24
    15c8:	9f 4f       	sbci	r25, 0xFF	; 255
    15ca:	64 2f       	mov	r22, r20
    15cc:	77 27       	eor	r23, r23
    15ce:	22 d0       	rcall	.+68     	; 0x1614 <__udivmodhi4>
    15d0:	80 5d       	subi	r24, 0xD0	; 208
    15d2:	8a 33       	cpi	r24, 0x3A	; 58
    15d4:	0c f0       	brlt	.+2      	; 0x15d8 <itoa+0x2e>
    15d6:	89 5d       	subi	r24, 0xD9	; 217
    15d8:	81 93       	st	Z+, r24
    15da:	86 2f       	mov	r24, r22
    15dc:	97 2f       	mov	r25, r23
    15de:	00 97       	sbiw	r24, 0x00	; 0
    15e0:	a1 f7       	brne	.-24     	; 0x15ca <itoa+0x20>
    15e2:	16 f4       	brtc	.+4      	; 0x15e8 <itoa+0x3e>
    15e4:	5d e2       	ldi	r21, 0x2D	; 45
    15e6:	51 93       	st	Z+, r21
    15e8:	10 82       	st	Z, r1
    15ea:	82 2f       	mov	r24, r18
    15ec:	93 2f       	mov	r25, r19
    15ee:	00 c0       	rjmp	.+0      	; 0x15f0 <strrev>

000015f0 <strrev>:
    15f0:	a8 2f       	mov	r26, r24
    15f2:	b9 2f       	mov	r27, r25
    15f4:	e8 2f       	mov	r30, r24
    15f6:	f9 2f       	mov	r31, r25
    15f8:	67 2f       	mov	r22, r23
    15fa:	71 91       	ld	r23, Z+
    15fc:	77 23       	and	r23, r23
    15fe:	e1 f7       	brne	.-8      	; 0x15f8 <strrev+0x8>
    1600:	32 97       	sbiw	r30, 0x02	; 2
    1602:	04 c0       	rjmp	.+8      	; 0x160c <strrev+0x1c>
    1604:	7c 91       	ld	r23, X
    1606:	6d 93       	st	X+, r22
    1608:	70 83       	st	Z, r23
    160a:	62 91       	ld	r22, -Z
    160c:	ae 17       	cp	r26, r30
    160e:	bf 07       	cpc	r27, r31
    1610:	c8 f3       	brcs	.-14     	; 0x1604 <strrev+0x14>
    1612:	08 95       	ret

00001614 <__udivmodhi4>:
    1614:	aa 1b       	sub	r26, r26
    1616:	bb 1b       	sub	r27, r27
    1618:	51 e1       	ldi	r21, 0x11	; 17
    161a:	07 c0       	rjmp	.+14     	; 0x162a <__udivmodhi4_ep>

0000161c <__udivmodhi4_loop>:
    161c:	aa 1f       	adc	r26, r26
    161e:	bb 1f       	adc	r27, r27
    1620:	a6 17       	cp	r26, r22
    1622:	b7 07       	cpc	r27, r23
    1624:	10 f0       	brcs	.+4      	; 0x162a <__udivmodhi4_ep>
    1626:	a6 1b       	sub	r26, r22
    1628:	b7 0b       	sbc	r27, r23

0000162a <__udivmodhi4_ep>:
    162a:	88 1f       	adc	r24, r24
    162c:	99 1f       	adc	r25, r25
    162e:	5a 95       	dec	r21
    1630:	a9 f7       	brne	.-22     	; 0x161c <__udivmodhi4_loop>
    1632:	80 95       	com	r24
    1634:	90 95       	com	r25
    1636:	bc 01       	movw	r22, r24
    1638:	cd 01       	movw	r24, r26
    163a:	08 95       	ret

0000163c <_exit>:
    163c:	f8 94       	cli

0000163e <__stop_program>:
    163e:	ff cf       	rjmp	.-2      	; 0x163e <__stop_program>
