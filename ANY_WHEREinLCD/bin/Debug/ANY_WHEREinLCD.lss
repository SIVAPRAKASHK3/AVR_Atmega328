
bin\Debug\ANY_WHEREinLCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00001660  000016f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001660  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00001706  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 00000180  00000000  00000000  00001709  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000231  00000000  00000000  00001889  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002563  00000000  00000000  00001aba  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000012c5  00000000  00000000  0000401d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000014ce  00000000  00000000  000052e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000210  00000000  00000000  000067b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e3  00000000  00000000  000069c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000088e  00000000  00000000  00006da3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00007631  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e0 e6       	ldi	r30, 0x60	; 96
      7c:	f6 e1       	ldi	r31, 0x16	; 22
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	a2 31       	cpi	r26, 0x12	; 18
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>
      8a:	0e 94 15 04 	call	0x82a	; 0x82a <main>
      8e:	0c 94 2e 0b 	jmp	0x165c	; 0x165c <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <lcd_initialization>:
void TEXT(unsigned char INPUT);

int row_lcd [4]={0,64,20,84};

void lcd_initialization(void)
{
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	df 93       	push	r29
      9c:	cf 93       	push	r28
      9e:	cd b7       	in	r28, 0x3d	; 61
      a0:	de b7       	in	r29, 0x3e	; 62
      a2:	cc 54       	subi	r28, 0x4C	; 76
      a4:	d0 40       	sbci	r29, 0x00	; 0
      a6:	0f b6       	in	r0, 0x3f	; 63
      a8:	f8 94       	cli
      aa:	de bf       	out	0x3e, r29	; 62
      ac:	0f be       	out	0x3f, r0	; 63
      ae:	cd bf       	out	0x3d, r28	; 61
CONTROL_DDR |=1<< REGISTR_SEL | 1<<READ_WRITE |1<<ENABLE;
      b0:	a4 e2       	ldi	r26, 0x24	; 36
      b2:	b0 e0       	ldi	r27, 0x00	; 0
      b4:	e4 e2       	ldi	r30, 0x24	; 36
      b6:	f0 e0       	ldi	r31, 0x00	; 0
      b8:	80 81       	ld	r24, Z
      ba:	8e 60       	ori	r24, 0x0E	; 14
      bc:	8c 93       	st	X, r24
      be:	fe 01       	movw	r30, r28
      c0:	e7 5b       	subi	r30, 0xB7	; 183
      c2:	ff 4f       	sbci	r31, 0xFF	; 255
      c4:	80 e0       	ldi	r24, 0x00	; 0
      c6:	90 e0       	ldi	r25, 0x00	; 0
      c8:	a0 e7       	ldi	r26, 0x70	; 112
      ca:	b1 e4       	ldi	r27, 0x41	; 65
      cc:	80 83       	st	Z, r24
      ce:	91 83       	std	Z+1, r25	; 0x01
      d0:	a2 83       	std	Z+2, r26	; 0x02
      d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
      d4:	8e 01       	movw	r16, r28
      d6:	0b 5b       	subi	r16, 0xBB	; 187
      d8:	1f 4f       	sbci	r17, 0xFF	; 255
      da:	fe 01       	movw	r30, r28
      dc:	e7 5b       	subi	r30, 0xB7	; 183
      de:	ff 4f       	sbci	r31, 0xFF	; 255
      e0:	60 81       	ld	r22, Z
      e2:	71 81       	ldd	r23, Z+1	; 0x01
      e4:	82 81       	ldd	r24, Z+2	; 0x02
      e6:	93 81       	ldd	r25, Z+3	; 0x03
      e8:	20 e0       	ldi	r18, 0x00	; 0
      ea:	30 e0       	ldi	r19, 0x00	; 0
      ec:	4a e7       	ldi	r20, 0x7A	; 122
      ee:	55 e4       	ldi	r21, 0x45	; 69
      f0:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__mulsf3>
      f4:	dc 01       	movw	r26, r24
      f6:	cb 01       	movw	r24, r22
      f8:	f8 01       	movw	r30, r16
      fa:	80 83       	st	Z, r24
      fc:	91 83       	std	Z+1, r25	; 0x01
      fe:	a2 83       	std	Z+2, r26	; 0x02
     100:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     102:	fe 01       	movw	r30, r28
     104:	eb 5b       	subi	r30, 0xBB	; 187
     106:	ff 4f       	sbci	r31, 0xFF	; 255
     108:	60 81       	ld	r22, Z
     10a:	71 81       	ldd	r23, Z+1	; 0x01
     10c:	82 81       	ldd	r24, Z+2	; 0x02
     10e:	93 81       	ldd	r25, Z+3	; 0x03
     110:	20 e0       	ldi	r18, 0x00	; 0
     112:	30 e0       	ldi	r19, 0x00	; 0
     114:	40 e8       	ldi	r20, 0x80	; 128
     116:	5f e3       	ldi	r21, 0x3F	; 63
     118:	0e 94 84 08 	call	0x1108	; 0x1108 <__ltsf2>
     11c:	88 23       	and	r24, r24
     11e:	44 f4       	brge	.+16     	; 0x130 <lcd_initialization+0x9a>
		__ticks = 1;
     120:	fe 01       	movw	r30, r28
     122:	ed 5b       	subi	r30, 0xBD	; 189
     124:	ff 4f       	sbci	r31, 0xFF	; 255
     126:	81 e0       	ldi	r24, 0x01	; 1
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	91 83       	std	Z+1, r25	; 0x01
     12c:	80 83       	st	Z, r24
     12e:	64 c0       	rjmp	.+200    	; 0x1f8 <lcd_initialization+0x162>
	else if (__tmp > 65535)
     130:	fe 01       	movw	r30, r28
     132:	eb 5b       	subi	r30, 0xBB	; 187
     134:	ff 4f       	sbci	r31, 0xFF	; 255
     136:	60 81       	ld	r22, Z
     138:	71 81       	ldd	r23, Z+1	; 0x01
     13a:	82 81       	ldd	r24, Z+2	; 0x02
     13c:	93 81       	ldd	r25, Z+3	; 0x03
     13e:	20 e0       	ldi	r18, 0x00	; 0
     140:	3f ef       	ldi	r19, 0xFF	; 255
     142:	4f e7       	ldi	r20, 0x7F	; 127
     144:	57 e4       	ldi	r21, 0x47	; 71
     146:	0e 94 24 08 	call	0x1048	; 0x1048 <__gtsf2>
     14a:	18 16       	cp	r1, r24
     14c:	0c f0       	brlt	.+2      	; 0x150 <lcd_initialization+0xba>
     14e:	43 c0       	rjmp	.+134    	; 0x1d6 <lcd_initialization+0x140>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     150:	fe 01       	movw	r30, r28
     152:	e7 5b       	subi	r30, 0xB7	; 183
     154:	ff 4f       	sbci	r31, 0xFF	; 255
     156:	60 81       	ld	r22, Z
     158:	71 81       	ldd	r23, Z+1	; 0x01
     15a:	82 81       	ldd	r24, Z+2	; 0x02
     15c:	93 81       	ldd	r25, Z+3	; 0x03
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	40 e2       	ldi	r20, 0x20	; 32
     164:	51 e4       	ldi	r21, 0x41	; 65
     166:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__mulsf3>
     16a:	dc 01       	movw	r26, r24
     16c:	cb 01       	movw	r24, r22
     16e:	8e 01       	movw	r16, r28
     170:	0d 5b       	subi	r16, 0xBD	; 189
     172:	1f 4f       	sbci	r17, 0xFF	; 255
     174:	bc 01       	movw	r22, r24
     176:	cd 01       	movw	r24, r26
     178:	0e 94 a8 04 	call	0x950	; 0x950 <__fixunssfsi>
     17c:	dc 01       	movw	r26, r24
     17e:	cb 01       	movw	r24, r22
     180:	f8 01       	movw	r30, r16
     182:	91 83       	std	Z+1, r25	; 0x01
     184:	80 83       	st	Z, r24
     186:	1f c0       	rjmp	.+62     	; 0x1c6 <lcd_initialization+0x130>
     188:	fe 01       	movw	r30, r28
     18a:	ef 5b       	subi	r30, 0xBF	; 191
     18c:	ff 4f       	sbci	r31, 0xFF	; 255
     18e:	80 e9       	ldi	r24, 0x90	; 144
     190:	91 e0       	ldi	r25, 0x01	; 1
     192:	91 83       	std	Z+1, r25	; 0x01
     194:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     196:	fe 01       	movw	r30, r28
     198:	ef 5b       	subi	r30, 0xBF	; 191
     19a:	ff 4f       	sbci	r31, 0xFF	; 255
     19c:	80 81       	ld	r24, Z
     19e:	91 81       	ldd	r25, Z+1	; 0x01
     1a0:	01 97       	sbiw	r24, 0x01	; 1
     1a2:	f1 f7       	brne	.-4      	; 0x1a0 <lcd_initialization+0x10a>
     1a4:	fe 01       	movw	r30, r28
     1a6:	ef 5b       	subi	r30, 0xBF	; 191
     1a8:	ff 4f       	sbci	r31, 0xFF	; 255
     1aa:	91 83       	std	Z+1, r25	; 0x01
     1ac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1ae:	de 01       	movw	r26, r28
     1b0:	ad 5b       	subi	r26, 0xBD	; 189
     1b2:	bf 4f       	sbci	r27, 0xFF	; 255
     1b4:	fe 01       	movw	r30, r28
     1b6:	ed 5b       	subi	r30, 0xBD	; 189
     1b8:	ff 4f       	sbci	r31, 0xFF	; 255
     1ba:	80 81       	ld	r24, Z
     1bc:	91 81       	ldd	r25, Z+1	; 0x01
     1be:	01 97       	sbiw	r24, 0x01	; 1
     1c0:	11 96       	adiw	r26, 0x01	; 1
     1c2:	9c 93       	st	X, r25
     1c4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1c6:	fe 01       	movw	r30, r28
     1c8:	ed 5b       	subi	r30, 0xBD	; 189
     1ca:	ff 4f       	sbci	r31, 0xFF	; 255
     1cc:	80 81       	ld	r24, Z
     1ce:	91 81       	ldd	r25, Z+1	; 0x01
     1d0:	00 97       	sbiw	r24, 0x00	; 0
     1d2:	d1 f6       	brne	.-76     	; 0x188 <lcd_initialization+0xf2>
     1d4:	24 c0       	rjmp	.+72     	; 0x21e <lcd_initialization+0x188>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1d6:	8e 01       	movw	r16, r28
     1d8:	0d 5b       	subi	r16, 0xBD	; 189
     1da:	1f 4f       	sbci	r17, 0xFF	; 255
     1dc:	fe 01       	movw	r30, r28
     1de:	eb 5b       	subi	r30, 0xBB	; 187
     1e0:	ff 4f       	sbci	r31, 0xFF	; 255
     1e2:	60 81       	ld	r22, Z
     1e4:	71 81       	ldd	r23, Z+1	; 0x01
     1e6:	82 81       	ldd	r24, Z+2	; 0x02
     1e8:	93 81       	ldd	r25, Z+3	; 0x03
     1ea:	0e 94 a8 04 	call	0x950	; 0x950 <__fixunssfsi>
     1ee:	dc 01       	movw	r26, r24
     1f0:	cb 01       	movw	r24, r22
     1f2:	f8 01       	movw	r30, r16
     1f4:	91 83       	std	Z+1, r25	; 0x01
     1f6:	80 83       	st	Z, r24
     1f8:	fe 01       	movw	r30, r28
     1fa:	ed 5b       	subi	r30, 0xBD	; 189
     1fc:	ff 4f       	sbci	r31, 0xFF	; 255
     1fe:	80 81       	ld	r24, Z
     200:	91 81       	ldd	r25, Z+1	; 0x01
     202:	fe 01       	movw	r30, r28
     204:	ff 96       	adiw	r30, 0x3f	; 63
     206:	91 83       	std	Z+1, r25	; 0x01
     208:	80 83       	st	Z, r24
     20a:	fe 01       	movw	r30, r28
     20c:	ff 96       	adiw	r30, 0x3f	; 63
     20e:	80 81       	ld	r24, Z
     210:	91 81       	ldd	r25, Z+1	; 0x01
     212:	01 97       	sbiw	r24, 0x01	; 1
     214:	f1 f7       	brne	.-4      	; 0x212 <lcd_initialization+0x17c>
     216:	fe 01       	movw	r30, r28
     218:	ff 96       	adiw	r30, 0x3f	; 63
     21a:	91 83       	std	Z+1, r25	; 0x01
     21c:	80 83       	st	Z, r24
_delay_ms(15);
CURSOUR(0x01);// clear lcd display
     21e:	81 e0       	ldi	r24, 0x01	; 1
     220:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <CURSOUR>
     224:	80 e0       	ldi	r24, 0x00	; 0
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	a0 e0       	ldi	r26, 0x00	; 0
     22a:	b0 e4       	ldi	r27, 0x40	; 64
     22c:	8b af       	std	Y+59, r24	; 0x3b
     22e:	9c af       	std	Y+60, r25	; 0x3c
     230:	ad af       	std	Y+61, r26	; 0x3d
     232:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     234:	6b ad       	ldd	r22, Y+59	; 0x3b
     236:	7c ad       	ldd	r23, Y+60	; 0x3c
     238:	8d ad       	ldd	r24, Y+61	; 0x3d
     23a:	9e ad       	ldd	r25, Y+62	; 0x3e
     23c:	20 e0       	ldi	r18, 0x00	; 0
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	4a e7       	ldi	r20, 0x7A	; 122
     242:	55 e4       	ldi	r21, 0x45	; 69
     244:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__mulsf3>
     248:	dc 01       	movw	r26, r24
     24a:	cb 01       	movw	r24, r22
     24c:	8f ab       	std	Y+55, r24	; 0x37
     24e:	98 af       	std	Y+56, r25	; 0x38
     250:	a9 af       	std	Y+57, r26	; 0x39
     252:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
     254:	6f a9       	ldd	r22, Y+55	; 0x37
     256:	78 ad       	ldd	r23, Y+56	; 0x38
     258:	89 ad       	ldd	r24, Y+57	; 0x39
     25a:	9a ad       	ldd	r25, Y+58	; 0x3a
     25c:	20 e0       	ldi	r18, 0x00	; 0
     25e:	30 e0       	ldi	r19, 0x00	; 0
     260:	40 e8       	ldi	r20, 0x80	; 128
     262:	5f e3       	ldi	r21, 0x3F	; 63
     264:	0e 94 84 08 	call	0x1108	; 0x1108 <__ltsf2>
     268:	88 23       	and	r24, r24
     26a:	2c f4       	brge	.+10     	; 0x276 <lcd_initialization+0x1e0>
		__ticks = 1;
     26c:	81 e0       	ldi	r24, 0x01	; 1
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	9e ab       	std	Y+54, r25	; 0x36
     272:	8d ab       	std	Y+53, r24	; 0x35
     274:	3f c0       	rjmp	.+126    	; 0x2f4 <lcd_initialization+0x25e>
	else if (__tmp > 65535)
     276:	6f a9       	ldd	r22, Y+55	; 0x37
     278:	78 ad       	ldd	r23, Y+56	; 0x38
     27a:	89 ad       	ldd	r24, Y+57	; 0x39
     27c:	9a ad       	ldd	r25, Y+58	; 0x3a
     27e:	20 e0       	ldi	r18, 0x00	; 0
     280:	3f ef       	ldi	r19, 0xFF	; 255
     282:	4f e7       	ldi	r20, 0x7F	; 127
     284:	57 e4       	ldi	r21, 0x47	; 71
     286:	0e 94 24 08 	call	0x1048	; 0x1048 <__gtsf2>
     28a:	18 16       	cp	r1, r24
     28c:	4c f5       	brge	.+82     	; 0x2e0 <lcd_initialization+0x24a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     28e:	6b ad       	ldd	r22, Y+59	; 0x3b
     290:	7c ad       	ldd	r23, Y+60	; 0x3c
     292:	8d ad       	ldd	r24, Y+61	; 0x3d
     294:	9e ad       	ldd	r25, Y+62	; 0x3e
     296:	20 e0       	ldi	r18, 0x00	; 0
     298:	30 e0       	ldi	r19, 0x00	; 0
     29a:	40 e2       	ldi	r20, 0x20	; 32
     29c:	51 e4       	ldi	r21, 0x41	; 65
     29e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__mulsf3>
     2a2:	dc 01       	movw	r26, r24
     2a4:	cb 01       	movw	r24, r22
     2a6:	bc 01       	movw	r22, r24
     2a8:	cd 01       	movw	r24, r26
     2aa:	0e 94 a8 04 	call	0x950	; 0x950 <__fixunssfsi>
     2ae:	dc 01       	movw	r26, r24
     2b0:	cb 01       	movw	r24, r22
     2b2:	9e ab       	std	Y+54, r25	; 0x36
     2b4:	8d ab       	std	Y+53, r24	; 0x35
     2b6:	0f c0       	rjmp	.+30     	; 0x2d6 <lcd_initialization+0x240>
     2b8:	80 e9       	ldi	r24, 0x90	; 144
     2ba:	91 e0       	ldi	r25, 0x01	; 1
     2bc:	9c ab       	std	Y+52, r25	; 0x34
     2be:	8b ab       	std	Y+51, r24	; 0x33
     2c0:	8b a9       	ldd	r24, Y+51	; 0x33
     2c2:	9c a9       	ldd	r25, Y+52	; 0x34
     2c4:	01 97       	sbiw	r24, 0x01	; 1
     2c6:	f1 f7       	brne	.-4      	; 0x2c4 <lcd_initialization+0x22e>
     2c8:	9c ab       	std	Y+52, r25	; 0x34
     2ca:	8b ab       	std	Y+51, r24	; 0x33
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2cc:	8d a9       	ldd	r24, Y+53	; 0x35
     2ce:	9e a9       	ldd	r25, Y+54	; 0x36
     2d0:	01 97       	sbiw	r24, 0x01	; 1
     2d2:	9e ab       	std	Y+54, r25	; 0x36
     2d4:	8d ab       	std	Y+53, r24	; 0x35
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2d6:	8d a9       	ldd	r24, Y+53	; 0x35
     2d8:	9e a9       	ldd	r25, Y+54	; 0x36
     2da:	00 97       	sbiw	r24, 0x00	; 0
     2dc:	69 f7       	brne	.-38     	; 0x2b8 <lcd_initialization+0x222>
     2de:	14 c0       	rjmp	.+40     	; 0x308 <lcd_initialization+0x272>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2e0:	6f a9       	ldd	r22, Y+55	; 0x37
     2e2:	78 ad       	ldd	r23, Y+56	; 0x38
     2e4:	89 ad       	ldd	r24, Y+57	; 0x39
     2e6:	9a ad       	ldd	r25, Y+58	; 0x3a
     2e8:	0e 94 a8 04 	call	0x950	; 0x950 <__fixunssfsi>
     2ec:	dc 01       	movw	r26, r24
     2ee:	cb 01       	movw	r24, r22
     2f0:	9e ab       	std	Y+54, r25	; 0x36
     2f2:	8d ab       	std	Y+53, r24	; 0x35
     2f4:	8d a9       	ldd	r24, Y+53	; 0x35
     2f6:	9e a9       	ldd	r25, Y+54	; 0x36
     2f8:	9a ab       	std	Y+50, r25	; 0x32
     2fa:	89 ab       	std	Y+49, r24	; 0x31
     2fc:	89 a9       	ldd	r24, Y+49	; 0x31
     2fe:	9a a9       	ldd	r25, Y+50	; 0x32
     300:	01 97       	sbiw	r24, 0x01	; 1
     302:	f1 f7       	brne	.-4      	; 0x300 <lcd_initialization+0x26a>
     304:	9a ab       	std	Y+50, r25	; 0x32
     306:	89 ab       	std	Y+49, r24	; 0x31
_delay_ms(2);
CURSOUR(0x38); // set 8 bit 2 line for 1 line 0x30
     308:	88 e3       	ldi	r24, 0x38	; 56
     30a:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <CURSOUR>
     30e:	80 e0       	ldi	r24, 0x00	; 0
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	a8 e4       	ldi	r26, 0x48	; 72
     314:	b2 e4       	ldi	r27, 0x42	; 66
     316:	8d a7       	std	Y+45, r24	; 0x2d
     318:	9e a7       	std	Y+46, r25	; 0x2e
     31a:	af a7       	std	Y+47, r26	; 0x2f
     31c:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     31e:	6d a5       	ldd	r22, Y+45	; 0x2d
     320:	7e a5       	ldd	r23, Y+46	; 0x2e
     322:	8f a5       	ldd	r24, Y+47	; 0x2f
     324:	98 a9       	ldd	r25, Y+48	; 0x30
     326:	2b ea       	ldi	r18, 0xAB	; 171
     328:	3a ea       	ldi	r19, 0xAA	; 170
     32a:	4a ea       	ldi	r20, 0xAA	; 170
     32c:	50 e4       	ldi	r21, 0x40	; 64
     32e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__mulsf3>
     332:	dc 01       	movw	r26, r24
     334:	cb 01       	movw	r24, r22
     336:	89 a7       	std	Y+41, r24	; 0x29
     338:	9a a7       	std	Y+42, r25	; 0x2a
     33a:	ab a7       	std	Y+43, r26	; 0x2b
     33c:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
     33e:	69 a5       	ldd	r22, Y+41	; 0x29
     340:	7a a5       	ldd	r23, Y+42	; 0x2a
     342:	8b a5       	ldd	r24, Y+43	; 0x2b
     344:	9c a5       	ldd	r25, Y+44	; 0x2c
     346:	20 e0       	ldi	r18, 0x00	; 0
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	40 e8       	ldi	r20, 0x80	; 128
     34c:	5f e3       	ldi	r21, 0x3F	; 63
     34e:	0e 94 84 08 	call	0x1108	; 0x1108 <__ltsf2>
     352:	88 23       	and	r24, r24
     354:	1c f4       	brge	.+6      	; 0x35c <lcd_initialization+0x2c6>
		__ticks = 1;
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	88 a7       	std	Y+40, r24	; 0x28
     35a:	91 c0       	rjmp	.+290    	; 0x47e <lcd_initialization+0x3e8>
	else if (__tmp > 255)
     35c:	69 a5       	ldd	r22, Y+41	; 0x29
     35e:	7a a5       	ldd	r23, Y+42	; 0x2a
     360:	8b a5       	ldd	r24, Y+43	; 0x2b
     362:	9c a5       	ldd	r25, Y+44	; 0x2c
     364:	20 e0       	ldi	r18, 0x00	; 0
     366:	30 e0       	ldi	r19, 0x00	; 0
     368:	4f e7       	ldi	r20, 0x7F	; 127
     36a:	53 e4       	ldi	r21, 0x43	; 67
     36c:	0e 94 24 08 	call	0x1048	; 0x1048 <__gtsf2>
     370:	18 16       	cp	r1, r24
     372:	0c f0       	brlt	.+2      	; 0x376 <lcd_initialization+0x2e0>
     374:	7b c0       	rjmp	.+246    	; 0x46c <lcd_initialization+0x3d6>
	{
		_delay_ms(__us / 1000.0);
     376:	6d a5       	ldd	r22, Y+45	; 0x2d
     378:	7e a5       	ldd	r23, Y+46	; 0x2e
     37a:	8f a5       	ldd	r24, Y+47	; 0x2f
     37c:	98 a9       	ldd	r25, Y+48	; 0x30
     37e:	20 e0       	ldi	r18, 0x00	; 0
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	4a e7       	ldi	r20, 0x7A	; 122
     384:	54 e4       	ldi	r21, 0x44	; 68
     386:	0e 94 78 07 	call	0xef0	; 0xef0 <__divsf3>
     38a:	dc 01       	movw	r26, r24
     38c:	cb 01       	movw	r24, r22
     38e:	8c a3       	std	Y+36, r24	; 0x24
     390:	9d a3       	std	Y+37, r25	; 0x25
     392:	ae a3       	std	Y+38, r26	; 0x26
     394:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     396:	6c a1       	ldd	r22, Y+36	; 0x24
     398:	7d a1       	ldd	r23, Y+37	; 0x25
     39a:	8e a1       	ldd	r24, Y+38	; 0x26
     39c:	9f a1       	ldd	r25, Y+39	; 0x27
     39e:	20 e0       	ldi	r18, 0x00	; 0
     3a0:	30 e0       	ldi	r19, 0x00	; 0
     3a2:	4a e7       	ldi	r20, 0x7A	; 122
     3a4:	55 e4       	ldi	r21, 0x45	; 69
     3a6:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__mulsf3>
     3aa:	dc 01       	movw	r26, r24
     3ac:	cb 01       	movw	r24, r22
     3ae:	88 a3       	std	Y+32, r24	; 0x20
     3b0:	99 a3       	std	Y+33, r25	; 0x21
     3b2:	aa a3       	std	Y+34, r26	; 0x22
     3b4:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
     3b6:	68 a1       	ldd	r22, Y+32	; 0x20
     3b8:	79 a1       	ldd	r23, Y+33	; 0x21
     3ba:	8a a1       	ldd	r24, Y+34	; 0x22
     3bc:	9b a1       	ldd	r25, Y+35	; 0x23
     3be:	20 e0       	ldi	r18, 0x00	; 0
     3c0:	30 e0       	ldi	r19, 0x00	; 0
     3c2:	40 e8       	ldi	r20, 0x80	; 128
     3c4:	5f e3       	ldi	r21, 0x3F	; 63
     3c6:	0e 94 84 08 	call	0x1108	; 0x1108 <__ltsf2>
     3ca:	88 23       	and	r24, r24
     3cc:	2c f4       	brge	.+10     	; 0x3d8 <lcd_initialization+0x342>
		__ticks = 1;
     3ce:	81 e0       	ldi	r24, 0x01	; 1
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	9f 8f       	std	Y+31, r25	; 0x1f
     3d4:	8e 8f       	std	Y+30, r24	; 0x1e
     3d6:	3f c0       	rjmp	.+126    	; 0x456 <lcd_initialization+0x3c0>
	else if (__tmp > 65535)
     3d8:	68 a1       	ldd	r22, Y+32	; 0x20
     3da:	79 a1       	ldd	r23, Y+33	; 0x21
     3dc:	8a a1       	ldd	r24, Y+34	; 0x22
     3de:	9b a1       	ldd	r25, Y+35	; 0x23
     3e0:	20 e0       	ldi	r18, 0x00	; 0
     3e2:	3f ef       	ldi	r19, 0xFF	; 255
     3e4:	4f e7       	ldi	r20, 0x7F	; 127
     3e6:	57 e4       	ldi	r21, 0x47	; 71
     3e8:	0e 94 24 08 	call	0x1048	; 0x1048 <__gtsf2>
     3ec:	18 16       	cp	r1, r24
     3ee:	4c f5       	brge	.+82     	; 0x442 <lcd_initialization+0x3ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3f0:	6c a1       	ldd	r22, Y+36	; 0x24
     3f2:	7d a1       	ldd	r23, Y+37	; 0x25
     3f4:	8e a1       	ldd	r24, Y+38	; 0x26
     3f6:	9f a1       	ldd	r25, Y+39	; 0x27
     3f8:	20 e0       	ldi	r18, 0x00	; 0
     3fa:	30 e0       	ldi	r19, 0x00	; 0
     3fc:	40 e2       	ldi	r20, 0x20	; 32
     3fe:	51 e4       	ldi	r21, 0x41	; 65
     400:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__mulsf3>
     404:	dc 01       	movw	r26, r24
     406:	cb 01       	movw	r24, r22
     408:	bc 01       	movw	r22, r24
     40a:	cd 01       	movw	r24, r26
     40c:	0e 94 a8 04 	call	0x950	; 0x950 <__fixunssfsi>
     410:	dc 01       	movw	r26, r24
     412:	cb 01       	movw	r24, r22
     414:	9f 8f       	std	Y+31, r25	; 0x1f
     416:	8e 8f       	std	Y+30, r24	; 0x1e
     418:	0f c0       	rjmp	.+30     	; 0x438 <lcd_initialization+0x3a2>
     41a:	80 e9       	ldi	r24, 0x90	; 144
     41c:	91 e0       	ldi	r25, 0x01	; 1
     41e:	9d 8f       	std	Y+29, r25	; 0x1d
     420:	8c 8f       	std	Y+28, r24	; 0x1c
     422:	8c 8d       	ldd	r24, Y+28	; 0x1c
     424:	9d 8d       	ldd	r25, Y+29	; 0x1d
     426:	01 97       	sbiw	r24, 0x01	; 1
     428:	f1 f7       	brne	.-4      	; 0x426 <lcd_initialization+0x390>
     42a:	9d 8f       	std	Y+29, r25	; 0x1d
     42c:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     42e:	8e 8d       	ldd	r24, Y+30	; 0x1e
     430:	9f 8d       	ldd	r25, Y+31	; 0x1f
     432:	01 97       	sbiw	r24, 0x01	; 1
     434:	9f 8f       	std	Y+31, r25	; 0x1f
     436:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     438:	8e 8d       	ldd	r24, Y+30	; 0x1e
     43a:	9f 8d       	ldd	r25, Y+31	; 0x1f
     43c:	00 97       	sbiw	r24, 0x00	; 0
     43e:	69 f7       	brne	.-38     	; 0x41a <lcd_initialization+0x384>
     440:	24 c0       	rjmp	.+72     	; 0x48a <lcd_initialization+0x3f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     442:	68 a1       	ldd	r22, Y+32	; 0x20
     444:	79 a1       	ldd	r23, Y+33	; 0x21
     446:	8a a1       	ldd	r24, Y+34	; 0x22
     448:	9b a1       	ldd	r25, Y+35	; 0x23
     44a:	0e 94 a8 04 	call	0x950	; 0x950 <__fixunssfsi>
     44e:	dc 01       	movw	r26, r24
     450:	cb 01       	movw	r24, r22
     452:	9f 8f       	std	Y+31, r25	; 0x1f
     454:	8e 8f       	std	Y+30, r24	; 0x1e
     456:	8e 8d       	ldd	r24, Y+30	; 0x1e
     458:	9f 8d       	ldd	r25, Y+31	; 0x1f
     45a:	9b 8f       	std	Y+27, r25	; 0x1b
     45c:	8a 8f       	std	Y+26, r24	; 0x1a
     45e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     460:	9b 8d       	ldd	r25, Y+27	; 0x1b
     462:	01 97       	sbiw	r24, 0x01	; 1
     464:	f1 f7       	brne	.-4      	; 0x462 <lcd_initialization+0x3cc>
     466:	9b 8f       	std	Y+27, r25	; 0x1b
     468:	8a 8f       	std	Y+26, r24	; 0x1a
     46a:	0f c0       	rjmp	.+30     	; 0x48a <lcd_initialization+0x3f4>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     46c:	69 a5       	ldd	r22, Y+41	; 0x29
     46e:	7a a5       	ldd	r23, Y+42	; 0x2a
     470:	8b a5       	ldd	r24, Y+43	; 0x2b
     472:	9c a5       	ldd	r25, Y+44	; 0x2c
     474:	0e 94 a8 04 	call	0x950	; 0x950 <__fixunssfsi>
     478:	dc 01       	movw	r26, r24
     47a:	cb 01       	movw	r24, r22
     47c:	88 a7       	std	Y+40, r24	; 0x28
     47e:	88 a5       	ldd	r24, Y+40	; 0x28
     480:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     482:	89 8d       	ldd	r24, Y+25	; 0x19
     484:	8a 95       	dec	r24
     486:	f1 f7       	brne	.-4      	; 0x484 <lcd_initialization+0x3ee>
     488:	89 8f       	std	Y+25, r24	; 0x19
_delay_us(50);
CURSOUR(0b00001110); // display on cursor on 0x0E
     48a:	8e e0       	ldi	r24, 0x0E	; 14
     48c:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <CURSOUR>
     490:	80 e0       	ldi	r24, 0x00	; 0
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	a8 e4       	ldi	r26, 0x48	; 72
     496:	b2 e4       	ldi	r27, 0x42	; 66
     498:	8d 8b       	std	Y+21, r24	; 0x15
     49a:	9e 8b       	std	Y+22, r25	; 0x16
     49c:	af 8b       	std	Y+23, r26	; 0x17
     49e:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     4a0:	6d 89       	ldd	r22, Y+21	; 0x15
     4a2:	7e 89       	ldd	r23, Y+22	; 0x16
     4a4:	8f 89       	ldd	r24, Y+23	; 0x17
     4a6:	98 8d       	ldd	r25, Y+24	; 0x18
     4a8:	2b ea       	ldi	r18, 0xAB	; 171
     4aa:	3a ea       	ldi	r19, 0xAA	; 170
     4ac:	4a ea       	ldi	r20, 0xAA	; 170
     4ae:	50 e4       	ldi	r21, 0x40	; 64
     4b0:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__mulsf3>
     4b4:	dc 01       	movw	r26, r24
     4b6:	cb 01       	movw	r24, r22
     4b8:	89 8b       	std	Y+17, r24	; 0x11
     4ba:	9a 8b       	std	Y+18, r25	; 0x12
     4bc:	ab 8b       	std	Y+19, r26	; 0x13
     4be:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     4c0:	69 89       	ldd	r22, Y+17	; 0x11
     4c2:	7a 89       	ldd	r23, Y+18	; 0x12
     4c4:	8b 89       	ldd	r24, Y+19	; 0x13
     4c6:	9c 89       	ldd	r25, Y+20	; 0x14
     4c8:	20 e0       	ldi	r18, 0x00	; 0
     4ca:	30 e0       	ldi	r19, 0x00	; 0
     4cc:	40 e8       	ldi	r20, 0x80	; 128
     4ce:	5f e3       	ldi	r21, 0x3F	; 63
     4d0:	0e 94 84 08 	call	0x1108	; 0x1108 <__ltsf2>
     4d4:	88 23       	and	r24, r24
     4d6:	1c f4       	brge	.+6      	; 0x4de <lcd_initialization+0x448>
		__ticks = 1;
     4d8:	81 e0       	ldi	r24, 0x01	; 1
     4da:	88 8b       	std	Y+16, r24	; 0x10
     4dc:	91 c0       	rjmp	.+290    	; 0x600 <lcd_initialization+0x56a>
	else if (__tmp > 255)
     4de:	69 89       	ldd	r22, Y+17	; 0x11
     4e0:	7a 89       	ldd	r23, Y+18	; 0x12
     4e2:	8b 89       	ldd	r24, Y+19	; 0x13
     4e4:	9c 89       	ldd	r25, Y+20	; 0x14
     4e6:	20 e0       	ldi	r18, 0x00	; 0
     4e8:	30 e0       	ldi	r19, 0x00	; 0
     4ea:	4f e7       	ldi	r20, 0x7F	; 127
     4ec:	53 e4       	ldi	r21, 0x43	; 67
     4ee:	0e 94 24 08 	call	0x1048	; 0x1048 <__gtsf2>
     4f2:	18 16       	cp	r1, r24
     4f4:	0c f0       	brlt	.+2      	; 0x4f8 <lcd_initialization+0x462>
     4f6:	7b c0       	rjmp	.+246    	; 0x5ee <lcd_initialization+0x558>
	{
		_delay_ms(__us / 1000.0);
     4f8:	6d 89       	ldd	r22, Y+21	; 0x15
     4fa:	7e 89       	ldd	r23, Y+22	; 0x16
     4fc:	8f 89       	ldd	r24, Y+23	; 0x17
     4fe:	98 8d       	ldd	r25, Y+24	; 0x18
     500:	20 e0       	ldi	r18, 0x00	; 0
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	4a e7       	ldi	r20, 0x7A	; 122
     506:	54 e4       	ldi	r21, 0x44	; 68
     508:	0e 94 78 07 	call	0xef0	; 0xef0 <__divsf3>
     50c:	dc 01       	movw	r26, r24
     50e:	cb 01       	movw	r24, r22
     510:	8c 87       	std	Y+12, r24	; 0x0c
     512:	9d 87       	std	Y+13, r25	; 0x0d
     514:	ae 87       	std	Y+14, r26	; 0x0e
     516:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     518:	6c 85       	ldd	r22, Y+12	; 0x0c
     51a:	7d 85       	ldd	r23, Y+13	; 0x0d
     51c:	8e 85       	ldd	r24, Y+14	; 0x0e
     51e:	9f 85       	ldd	r25, Y+15	; 0x0f
     520:	20 e0       	ldi	r18, 0x00	; 0
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	4a e7       	ldi	r20, 0x7A	; 122
     526:	55 e4       	ldi	r21, 0x45	; 69
     528:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__mulsf3>
     52c:	dc 01       	movw	r26, r24
     52e:	cb 01       	movw	r24, r22
     530:	88 87       	std	Y+8, r24	; 0x08
     532:	99 87       	std	Y+9, r25	; 0x09
     534:	aa 87       	std	Y+10, r26	; 0x0a
     536:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     538:	68 85       	ldd	r22, Y+8	; 0x08
     53a:	79 85       	ldd	r23, Y+9	; 0x09
     53c:	8a 85       	ldd	r24, Y+10	; 0x0a
     53e:	9b 85       	ldd	r25, Y+11	; 0x0b
     540:	20 e0       	ldi	r18, 0x00	; 0
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	40 e8       	ldi	r20, 0x80	; 128
     546:	5f e3       	ldi	r21, 0x3F	; 63
     548:	0e 94 84 08 	call	0x1108	; 0x1108 <__ltsf2>
     54c:	88 23       	and	r24, r24
     54e:	2c f4       	brge	.+10     	; 0x55a <lcd_initialization+0x4c4>
		__ticks = 1;
     550:	81 e0       	ldi	r24, 0x01	; 1
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	9f 83       	std	Y+7, r25	; 0x07
     556:	8e 83       	std	Y+6, r24	; 0x06
     558:	3f c0       	rjmp	.+126    	; 0x5d8 <lcd_initialization+0x542>
	else if (__tmp > 65535)
     55a:	68 85       	ldd	r22, Y+8	; 0x08
     55c:	79 85       	ldd	r23, Y+9	; 0x09
     55e:	8a 85       	ldd	r24, Y+10	; 0x0a
     560:	9b 85       	ldd	r25, Y+11	; 0x0b
     562:	20 e0       	ldi	r18, 0x00	; 0
     564:	3f ef       	ldi	r19, 0xFF	; 255
     566:	4f e7       	ldi	r20, 0x7F	; 127
     568:	57 e4       	ldi	r21, 0x47	; 71
     56a:	0e 94 24 08 	call	0x1048	; 0x1048 <__gtsf2>
     56e:	18 16       	cp	r1, r24
     570:	4c f5       	brge	.+82     	; 0x5c4 <lcd_initialization+0x52e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     572:	6c 85       	ldd	r22, Y+12	; 0x0c
     574:	7d 85       	ldd	r23, Y+13	; 0x0d
     576:	8e 85       	ldd	r24, Y+14	; 0x0e
     578:	9f 85       	ldd	r25, Y+15	; 0x0f
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	40 e2       	ldi	r20, 0x20	; 32
     580:	51 e4       	ldi	r21, 0x41	; 65
     582:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__mulsf3>
     586:	dc 01       	movw	r26, r24
     588:	cb 01       	movw	r24, r22
     58a:	bc 01       	movw	r22, r24
     58c:	cd 01       	movw	r24, r26
     58e:	0e 94 a8 04 	call	0x950	; 0x950 <__fixunssfsi>
     592:	dc 01       	movw	r26, r24
     594:	cb 01       	movw	r24, r22
     596:	9f 83       	std	Y+7, r25	; 0x07
     598:	8e 83       	std	Y+6, r24	; 0x06
     59a:	0f c0       	rjmp	.+30     	; 0x5ba <lcd_initialization+0x524>
     59c:	80 e9       	ldi	r24, 0x90	; 144
     59e:	91 e0       	ldi	r25, 0x01	; 1
     5a0:	9d 83       	std	Y+5, r25	; 0x05
     5a2:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     5a4:	8c 81       	ldd	r24, Y+4	; 0x04
     5a6:	9d 81       	ldd	r25, Y+5	; 0x05
     5a8:	01 97       	sbiw	r24, 0x01	; 1
     5aa:	f1 f7       	brne	.-4      	; 0x5a8 <lcd_initialization+0x512>
     5ac:	9d 83       	std	Y+5, r25	; 0x05
     5ae:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5b0:	8e 81       	ldd	r24, Y+6	; 0x06
     5b2:	9f 81       	ldd	r25, Y+7	; 0x07
     5b4:	01 97       	sbiw	r24, 0x01	; 1
     5b6:	9f 83       	std	Y+7, r25	; 0x07
     5b8:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5ba:	8e 81       	ldd	r24, Y+6	; 0x06
     5bc:	9f 81       	ldd	r25, Y+7	; 0x07
     5be:	00 97       	sbiw	r24, 0x00	; 0
     5c0:	69 f7       	brne	.-38     	; 0x59c <lcd_initialization+0x506>
     5c2:	24 c0       	rjmp	.+72     	; 0x60c <lcd_initialization+0x576>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     5c4:	68 85       	ldd	r22, Y+8	; 0x08
     5c6:	79 85       	ldd	r23, Y+9	; 0x09
     5c8:	8a 85       	ldd	r24, Y+10	; 0x0a
     5ca:	9b 85       	ldd	r25, Y+11	; 0x0b
     5cc:	0e 94 a8 04 	call	0x950	; 0x950 <__fixunssfsi>
     5d0:	dc 01       	movw	r26, r24
     5d2:	cb 01       	movw	r24, r22
     5d4:	9f 83       	std	Y+7, r25	; 0x07
     5d6:	8e 83       	std	Y+6, r24	; 0x06
     5d8:	8e 81       	ldd	r24, Y+6	; 0x06
     5da:	9f 81       	ldd	r25, Y+7	; 0x07
     5dc:	9b 83       	std	Y+3, r25	; 0x03
     5de:	8a 83       	std	Y+2, r24	; 0x02
     5e0:	8a 81       	ldd	r24, Y+2	; 0x02
     5e2:	9b 81       	ldd	r25, Y+3	; 0x03
     5e4:	01 97       	sbiw	r24, 0x01	; 1
     5e6:	f1 f7       	brne	.-4      	; 0x5e4 <lcd_initialization+0x54e>
     5e8:	9b 83       	std	Y+3, r25	; 0x03
     5ea:	8a 83       	std	Y+2, r24	; 0x02
     5ec:	0f c0       	rjmp	.+30     	; 0x60c <lcd_initialization+0x576>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     5ee:	69 89       	ldd	r22, Y+17	; 0x11
     5f0:	7a 89       	ldd	r23, Y+18	; 0x12
     5f2:	8b 89       	ldd	r24, Y+19	; 0x13
     5f4:	9c 89       	ldd	r25, Y+20	; 0x14
     5f6:	0e 94 a8 04 	call	0x950	; 0x950 <__fixunssfsi>
     5fa:	dc 01       	movw	r26, r24
     5fc:	cb 01       	movw	r24, r22
     5fe:	88 8b       	std	Y+16, r24	; 0x10
     600:	88 89       	ldd	r24, Y+16	; 0x10
     602:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     604:	89 81       	ldd	r24, Y+1	; 0x01
     606:	8a 95       	dec	r24
     608:	f1 f7       	brne	.-4      	; 0x606 <lcd_initialization+0x570>
     60a:	89 83       	std	Y+1, r24	; 0x01
_delay_us(50);
}
     60c:	c4 5b       	subi	r28, 0xB4	; 180
     60e:	df 4f       	sbci	r29, 0xFF	; 255
     610:	0f b6       	in	r0, 0x3f	; 63
     612:	f8 94       	cli
     614:	de bf       	out	0x3e, r29	; 62
     616:	0f be       	out	0x3f, r0	; 63
     618:	cd bf       	out	0x3d, r28	; 61
     61a:	cf 91       	pop	r28
     61c:	df 91       	pop	r29
     61e:	1f 91       	pop	r17
     620:	0f 91       	pop	r16
     622:	08 95       	ret

00000624 <STRING>:
void STRING(char *INPUT)
{
     624:	df 93       	push	r29
     626:	cf 93       	push	r28
     628:	00 d0       	rcall	.+0      	; 0x62a <STRING+0x6>
     62a:	cd b7       	in	r28, 0x3d	; 61
     62c:	de b7       	in	r29, 0x3e	; 62
     62e:	9a 83       	std	Y+2, r25	; 0x02
     630:	89 83       	std	Y+1, r24	; 0x01
     632:	0c c0       	rjmp	.+24     	; 0x64c <STRING+0x28>
    while(*INPUT!='\0')
        TEXT(*INPUT++);      // SLCING CHARACTER BY CHARACTER AND SENDING TO TEXT
     634:	e9 81       	ldd	r30, Y+1	; 0x01
     636:	fa 81       	ldd	r31, Y+2	; 0x02
     638:	80 81       	ld	r24, Z
     63a:	28 2f       	mov	r18, r24
     63c:	89 81       	ldd	r24, Y+1	; 0x01
     63e:	9a 81       	ldd	r25, Y+2	; 0x02
     640:	01 96       	adiw	r24, 0x01	; 1
     642:	9a 83       	std	Y+2, r25	; 0x02
     644:	89 83       	std	Y+1, r24	; 0x01
     646:	82 2f       	mov	r24, r18
     648:	0e 94 87 03 	call	0x70e	; 0x70e <TEXT>
CURSOUR(0b00001110); // display on cursor on 0x0E
_delay_us(50);
}
void STRING(char *INPUT)
{
    while(*INPUT!='\0')
     64c:	e9 81       	ldd	r30, Y+1	; 0x01
     64e:	fa 81       	ldd	r31, Y+2	; 0x02
     650:	80 81       	ld	r24, Z
     652:	88 23       	and	r24, r24
     654:	79 f7       	brne	.-34     	; 0x634 <STRING+0x10>
        TEXT(*INPUT++);      // SLCING CHARACTER BY CHARACTER AND SENDING TO TEXT
}
     656:	0f 90       	pop	r0
     658:	0f 90       	pop	r0
     65a:	cf 91       	pop	r28
     65c:	df 91       	pop	r29
     65e:	08 95       	ret

00000660 <ROUTINE>:
void ROUTINE()
{
     660:	df 93       	push	r29
     662:	cf 93       	push	r28
     664:	cd b7       	in	r28, 0x3d	; 61
     666:	de b7       	in	r29, 0x3e	; 62
LCD_CONTROL  |=1<<ENABLE;
     668:	a5 e2       	ldi	r26, 0x25	; 37
     66a:	b0 e0       	ldi	r27, 0x00	; 0
     66c:	e5 e2       	ldi	r30, 0x25	; 37
     66e:	f0 e0       	ldi	r31, 0x00	; 0
     670:	80 81       	ld	r24, Z
     672:	84 60       	ori	r24, 0x04	; 4
     674:	8c 93       	st	X, r24
asm volatile("nop");
     676:	00 00       	nop
asm volatile("nop");
     678:	00 00       	nop
LCD_CONTROL &=~(1<<ENABLE);
     67a:	a5 e2       	ldi	r26, 0x25	; 37
     67c:	b0 e0       	ldi	r27, 0x00	; 0
     67e:	e5 e2       	ldi	r30, 0x25	; 37
     680:	f0 e0       	ldi	r31, 0x00	; 0
     682:	80 81       	ld	r24, Z
     684:	8b 7f       	andi	r24, 0xFB	; 251
     686:	8c 93       	st	X, r24
}
     688:	cf 91       	pop	r28
     68a:	df 91       	pop	r29
     68c:	08 95       	ret

0000068e <BUSYCHECK>:

void BUSYCHECK()      //CHECK LCD DISPLAY IS BUSY OR NOT
{
     68e:	df 93       	push	r29
     690:	cf 93       	push	r28
     692:	cd b7       	in	r28, 0x3d	; 61
     694:	de b7       	in	r29, 0x3e	; 62
PIN_DDR =0;
     696:	ea e2       	ldi	r30, 0x2A	; 42
     698:	f0 e0       	ldi	r31, 0x00	; 0
     69a:	10 82       	st	Z, r1
LCD_CONTROL |=1<<READ_WRITE;
     69c:	a5 e2       	ldi	r26, 0x25	; 37
     69e:	b0 e0       	ldi	r27, 0x00	; 0
     6a0:	e5 e2       	ldi	r30, 0x25	; 37
     6a2:	f0 e0       	ldi	r31, 0x00	; 0
     6a4:	80 81       	ld	r24, Z
     6a6:	82 60       	ori	r24, 0x02	; 2
     6a8:	8c 93       	st	X, r24
LCD_CONTROL &=~(1<<REGISTR_SEL);
     6aa:	a5 e2       	ldi	r26, 0x25	; 37
     6ac:	b0 e0       	ldi	r27, 0x00	; 0
     6ae:	e5 e2       	ldi	r30, 0x25	; 37
     6b0:	f0 e0       	ldi	r31, 0x00	; 0
     6b2:	80 81       	ld	r24, Z
     6b4:	87 7f       	andi	r24, 0xF7	; 247
     6b6:	8c 93       	st	X, r24
     6b8:	02 c0       	rjmp	.+4      	; 0x6be <BUSYCHECK+0x30>
while(LCD_PIN>=0x80)
{
    ROUTINE();
     6ba:	0e 94 30 03 	call	0x660	; 0x660 <ROUTINE>
void BUSYCHECK()      //CHECK LCD DISPLAY IS BUSY OR NOT
{
PIN_DDR =0;
LCD_CONTROL |=1<<READ_WRITE;
LCD_CONTROL &=~(1<<REGISTR_SEL);
while(LCD_PIN>=0x80)
     6be:	eb e2       	ldi	r30, 0x2B	; 43
     6c0:	f0 e0       	ldi	r31, 0x00	; 0
     6c2:	80 81       	ld	r24, Z
     6c4:	88 23       	and	r24, r24
     6c6:	cc f3       	brlt	.-14     	; 0x6ba <BUSYCHECK+0x2c>
{
    ROUTINE();
}
PIN_DDR =0xFF;
     6c8:	ea e2       	ldi	r30, 0x2A	; 42
     6ca:	f0 e0       	ldi	r31, 0x00	; 0
     6cc:	8f ef       	ldi	r24, 0xFF	; 255
     6ce:	80 83       	st	Z, r24
}
     6d0:	cf 91       	pop	r28
     6d2:	df 91       	pop	r29
     6d4:	08 95       	ret

000006d6 <CURSOUR>:

void CURSOUR(unsigned char INPUT)
{
     6d6:	df 93       	push	r29
     6d8:	cf 93       	push	r28
     6da:	0f 92       	push	r0
     6dc:	cd b7       	in	r28, 0x3d	; 61
     6de:	de b7       	in	r29, 0x3e	; 62
     6e0:	89 83       	std	Y+1, r24	; 0x01
BUSYCHECK();
     6e2:	0e 94 47 03 	call	0x68e	; 0x68e <BUSYCHECK>
LCD_PIN=INPUT;
     6e6:	eb e2       	ldi	r30, 0x2B	; 43
     6e8:	f0 e0       	ldi	r31, 0x00	; 0
     6ea:	89 81       	ldd	r24, Y+1	; 0x01
     6ec:	80 83       	st	Z, r24
LCD_CONTROL &=~(1<<READ_WRITE | 1<<REGISTR_SEL);
     6ee:	a5 e2       	ldi	r26, 0x25	; 37
     6f0:	b0 e0       	ldi	r27, 0x00	; 0
     6f2:	e5 e2       	ldi	r30, 0x25	; 37
     6f4:	f0 e0       	ldi	r31, 0x00	; 0
     6f6:	80 81       	ld	r24, Z
     6f8:	85 7f       	andi	r24, 0xF5	; 245
     6fa:	8c 93       	st	X, r24
ROUTINE();
     6fc:	0e 94 30 03 	call	0x660	; 0x660 <ROUTINE>
LCD_PIN=0;
     700:	eb e2       	ldi	r30, 0x2B	; 43
     702:	f0 e0       	ldi	r31, 0x00	; 0
     704:	10 82       	st	Z, r1
}
     706:	0f 90       	pop	r0
     708:	cf 91       	pop	r28
     70a:	df 91       	pop	r29
     70c:	08 95       	ret

0000070e <TEXT>:

void TEXT(unsigned char INPUT)
{
     70e:	df 93       	push	r29
     710:	cf 93       	push	r28
     712:	0f 92       	push	r0
     714:	cd b7       	in	r28, 0x3d	; 61
     716:	de b7       	in	r29, 0x3e	; 62
     718:	89 83       	std	Y+1, r24	; 0x01
    BUSYCHECK();
     71a:	0e 94 47 03 	call	0x68e	; 0x68e <BUSYCHECK>
    LCD_PIN=INPUT;
     71e:	eb e2       	ldi	r30, 0x2B	; 43
     720:	f0 e0       	ldi	r31, 0x00	; 0
     722:	89 81       	ldd	r24, Y+1	; 0x01
     724:	80 83       	st	Z, r24
    LCD_CONTROL &=~(1<<READ_WRITE);
     726:	a5 e2       	ldi	r26, 0x25	; 37
     728:	b0 e0       	ldi	r27, 0x00	; 0
     72a:	e5 e2       	ldi	r30, 0x25	; 37
     72c:	f0 e0       	ldi	r31, 0x00	; 0
     72e:	80 81       	ld	r24, Z
     730:	8d 7f       	andi	r24, 0xFD	; 253
     732:	8c 93       	st	X, r24
    LCD_CONTROL |=1<<REGISTR_SEL ;
     734:	a5 e2       	ldi	r26, 0x25	; 37
     736:	b0 e0       	ldi	r27, 0x00	; 0
     738:	e5 e2       	ldi	r30, 0x25	; 37
     73a:	f0 e0       	ldi	r31, 0x00	; 0
     73c:	80 81       	ld	r24, Z
     73e:	88 60       	ori	r24, 0x08	; 8
     740:	8c 93       	st	X, r24
    ROUTINE();
     742:	0e 94 30 03 	call	0x660	; 0x660 <ROUTINE>
    LCD_PIN=0;
     746:	eb e2       	ldi	r30, 0x2B	; 43
     748:	f0 e0       	ldi	r31, 0x00	; 0
     74a:	10 82       	st	Z, r1
}
     74c:	0f 90       	pop	r0
     74e:	cf 91       	pop	r28
     750:	df 91       	pop	r29
     752:	08 95       	ret

00000754 <POSITION>:
    _delay_ms(200);
    CURSOUR(0x80+(i+row[j]));
    STRING(" ");
    }*/

void POSITION(int row, int col,int data,int data_size){
     754:	ef 92       	push	r14
     756:	ff 92       	push	r15
     758:	0f 93       	push	r16
     75a:	1f 93       	push	r17
     75c:	df 93       	push	r29
     75e:	cf 93       	push	r28
     760:	cd b7       	in	r28, 0x3d	; 61
     762:	de b7       	in	r29, 0x3e	; 62
     764:	2c 97       	sbiw	r28, 0x0c	; 12
     766:	0f b6       	in	r0, 0x3f	; 63
     768:	f8 94       	cli
     76a:	de bf       	out	0x3e, r29	; 62
     76c:	0f be       	out	0x3f, r0	; 63
     76e:	cd bf       	out	0x3d, r28	; 61
     770:	9c 83       	std	Y+4, r25	; 0x04
     772:	8b 83       	std	Y+3, r24	; 0x03
     774:	7e 83       	std	Y+6, r23	; 0x06
     776:	6d 83       	std	Y+5, r22	; 0x05
     778:	58 87       	std	Y+8, r21	; 0x08
     77a:	4f 83       	std	Y+7, r20	; 0x07
     77c:	3a 87       	std	Y+10, r19	; 0x0a
     77e:	29 87       	std	Y+9, r18	; 0x09
char str [data];
CURSOUR(0x80+row_lcd[row]+col);
itoa(data,str,10);
STRING(" ");
STRING(str);
}
     780:	0d b7       	in	r16, 0x3d	; 61
     782:	1e b7       	in	r17, 0x3e	; 62
    _delay_ms(200);
    CURSOUR(0x80+(i+row[j]));
    STRING(" ");
    }*/

void POSITION(int row, int col,int data,int data_size){
     784:	8d b7       	in	r24, 0x3d	; 61
     786:	9e b7       	in	r25, 0x3e	; 62
     788:	7c 01       	movw	r14, r24
char str [data];
     78a:	8f 81       	ldd	r24, Y+7	; 0x07
     78c:	98 85       	ldd	r25, Y+8	; 0x08
     78e:	2d b7       	in	r18, 0x3d	; 61
     790:	3e b7       	in	r19, 0x3e	; 62
     792:	28 1b       	sub	r18, r24
     794:	39 0b       	sbc	r19, r25
     796:	0f b6       	in	r0, 0x3f	; 63
     798:	f8 94       	cli
     79a:	3e bf       	out	0x3e, r19	; 62
     79c:	0f be       	out	0x3f, r0	; 63
     79e:	2d bf       	out	0x3d, r18	; 61
     7a0:	8d b7       	in	r24, 0x3d	; 61
     7a2:	9e b7       	in	r25, 0x3e	; 62
     7a4:	01 96       	adiw	r24, 0x01	; 1
     7a6:	9c 87       	std	Y+12, r25	; 0x0c
     7a8:	8b 87       	std	Y+11, r24	; 0x0b
     7aa:	8b 85       	ldd	r24, Y+11	; 0x0b
     7ac:	9c 85       	ldd	r25, Y+12	; 0x0c
     7ae:	00 96       	adiw	r24, 0x00	; 0
     7b0:	9c 87       	std	Y+12, r25	; 0x0c
     7b2:	8b 87       	std	Y+11, r24	; 0x0b
     7b4:	2b 85       	ldd	r18, Y+11	; 0x0b
     7b6:	3c 85       	ldd	r19, Y+12	; 0x0c
     7b8:	3a 83       	std	Y+2, r19	; 0x02
     7ba:	29 83       	std	Y+1, r18	; 0x01
CURSOUR(0x80+row_lcd[row]+col);
     7bc:	8b 81       	ldd	r24, Y+3	; 0x03
     7be:	9c 81       	ldd	r25, Y+4	; 0x04
     7c0:	88 0f       	add	r24, r24
     7c2:	99 1f       	adc	r25, r25
     7c4:	fc 01       	movw	r30, r24
     7c6:	e0 50       	subi	r30, 0x00	; 0
     7c8:	ff 4f       	sbci	r31, 0xFF	; 255
     7ca:	80 81       	ld	r24, Z
     7cc:	91 81       	ldd	r25, Z+1	; 0x01
     7ce:	98 2f       	mov	r25, r24
     7d0:	8d 81       	ldd	r24, Y+5	; 0x05
     7d2:	89 0f       	add	r24, r25
     7d4:	80 58       	subi	r24, 0x80	; 128
     7d6:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <CURSOUR>
itoa(data,str,10);
     7da:	29 81       	ldd	r18, Y+1	; 0x01
     7dc:	3a 81       	ldd	r19, Y+2	; 0x02
     7de:	8f 81       	ldd	r24, Y+7	; 0x07
     7e0:	98 85       	ldd	r25, Y+8	; 0x08
     7e2:	b9 01       	movw	r22, r18
     7e4:	4a e0       	ldi	r20, 0x0A	; 10
     7e6:	50 e0       	ldi	r21, 0x00	; 0
     7e8:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <itoa>
STRING(" ");
     7ec:	88 e0       	ldi	r24, 0x08	; 8
     7ee:	91 e0       	ldi	r25, 0x01	; 1
     7f0:	0e 94 12 03 	call	0x624	; 0x624 <STRING>
STRING(str);
     7f4:	89 81       	ldd	r24, Y+1	; 0x01
     7f6:	9a 81       	ldd	r25, Y+2	; 0x02
     7f8:	0e 94 12 03 	call	0x624	; 0x624 <STRING>
     7fc:	0f b6       	in	r0, 0x3f	; 63
     7fe:	f8 94       	cli
     800:	fe be       	out	0x3e, r15	; 62
     802:	0f be       	out	0x3f, r0	; 63
     804:	ed be       	out	0x3d, r14	; 61
}
     806:	0f b6       	in	r0, 0x3f	; 63
     808:	f8 94       	cli
     80a:	1e bf       	out	0x3e, r17	; 62
     80c:	0f be       	out	0x3f, r0	; 63
     80e:	0d bf       	out	0x3d, r16	; 61
     810:	2c 96       	adiw	r28, 0x0c	; 12
     812:	0f b6       	in	r0, 0x3f	; 63
     814:	f8 94       	cli
     816:	de bf       	out	0x3e, r29	; 62
     818:	0f be       	out	0x3f, r0	; 63
     81a:	cd bf       	out	0x3d, r28	; 61
     81c:	cf 91       	pop	r28
     81e:	df 91       	pop	r29
     820:	1f 91       	pop	r17
     822:	0f 91       	pop	r16
     824:	ff 90       	pop	r15
     826:	ef 90       	pop	r14
     828:	08 95       	ret

0000082a <main>:
 */

#include <avr/io.h>
#include "lcd_header.h"
int main(void)
{
     82a:	df 93       	push	r29
     82c:	cf 93       	push	r28
     82e:	cd b7       	in	r28, 0x3d	; 61
     830:	de b7       	in	r29, 0x3e	; 62
     832:	2e 97       	sbiw	r28, 0x0e	; 14
     834:	0f b6       	in	r0, 0x3f	; 63
     836:	f8 94       	cli
     838:	de bf       	out	0x3e, r29	; 62
     83a:	0f be       	out	0x3f, r0	; 63
     83c:	cd bf       	out	0x3d, r28	; 61

lcd_initialization();
     83e:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_initialization>
POSITION(1,2,500,4);
     842:	81 e0       	ldi	r24, 0x01	; 1
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	62 e0       	ldi	r22, 0x02	; 2
     848:	70 e0       	ldi	r23, 0x00	; 0
     84a:	44 ef       	ldi	r20, 0xF4	; 244
     84c:	51 e0       	ldi	r21, 0x01	; 1
     84e:	24 e0       	ldi	r18, 0x04	; 4
     850:	30 e0       	ldi	r19, 0x00	; 0
     852:	0e 94 aa 03 	call	0x754	; 0x754 <POSITION>
     856:	80 e0       	ldi	r24, 0x00	; 0
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	a6 e9       	ldi	r26, 0x96	; 150
     85c:	b3 e4       	ldi	r27, 0x43	; 67
     85e:	8b 87       	std	Y+11, r24	; 0x0b
     860:	9c 87       	std	Y+12, r25	; 0x0c
     862:	ad 87       	std	Y+13, r26	; 0x0d
     864:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     866:	6b 85       	ldd	r22, Y+11	; 0x0b
     868:	7c 85       	ldd	r23, Y+12	; 0x0c
     86a:	8d 85       	ldd	r24, Y+13	; 0x0d
     86c:	9e 85       	ldd	r25, Y+14	; 0x0e
     86e:	20 e0       	ldi	r18, 0x00	; 0
     870:	30 e0       	ldi	r19, 0x00	; 0
     872:	4a e7       	ldi	r20, 0x7A	; 122
     874:	55 e4       	ldi	r21, 0x45	; 69
     876:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__mulsf3>
     87a:	dc 01       	movw	r26, r24
     87c:	cb 01       	movw	r24, r22
     87e:	8f 83       	std	Y+7, r24	; 0x07
     880:	98 87       	std	Y+8, r25	; 0x08
     882:	a9 87       	std	Y+9, r26	; 0x09
     884:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     886:	6f 81       	ldd	r22, Y+7	; 0x07
     888:	78 85       	ldd	r23, Y+8	; 0x08
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	9a 85       	ldd	r25, Y+10	; 0x0a
     88e:	20 e0       	ldi	r18, 0x00	; 0
     890:	30 e0       	ldi	r19, 0x00	; 0
     892:	40 e8       	ldi	r20, 0x80	; 128
     894:	5f e3       	ldi	r21, 0x3F	; 63
     896:	0e 94 84 08 	call	0x1108	; 0x1108 <__ltsf2>
     89a:	88 23       	and	r24, r24
     89c:	2c f4       	brge	.+10     	; 0x8a8 <main+0x7e>
		__ticks = 1;
     89e:	81 e0       	ldi	r24, 0x01	; 1
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	9e 83       	std	Y+6, r25	; 0x06
     8a4:	8d 83       	std	Y+5, r24	; 0x05
     8a6:	3f c0       	rjmp	.+126    	; 0x926 <__stack+0x27>
	else if (__tmp > 65535)
     8a8:	6f 81       	ldd	r22, Y+7	; 0x07
     8aa:	78 85       	ldd	r23, Y+8	; 0x08
     8ac:	89 85       	ldd	r24, Y+9	; 0x09
     8ae:	9a 85       	ldd	r25, Y+10	; 0x0a
     8b0:	20 e0       	ldi	r18, 0x00	; 0
     8b2:	3f ef       	ldi	r19, 0xFF	; 255
     8b4:	4f e7       	ldi	r20, 0x7F	; 127
     8b6:	57 e4       	ldi	r21, 0x47	; 71
     8b8:	0e 94 24 08 	call	0x1048	; 0x1048 <__gtsf2>
     8bc:	18 16       	cp	r1, r24
     8be:	4c f5       	brge	.+82     	; 0x912 <__stack+0x13>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8c0:	6b 85       	ldd	r22, Y+11	; 0x0b
     8c2:	7c 85       	ldd	r23, Y+12	; 0x0c
     8c4:	8d 85       	ldd	r24, Y+13	; 0x0d
     8c6:	9e 85       	ldd	r25, Y+14	; 0x0e
     8c8:	20 e0       	ldi	r18, 0x00	; 0
     8ca:	30 e0       	ldi	r19, 0x00	; 0
     8cc:	40 e2       	ldi	r20, 0x20	; 32
     8ce:	51 e4       	ldi	r21, 0x41	; 65
     8d0:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__mulsf3>
     8d4:	dc 01       	movw	r26, r24
     8d6:	cb 01       	movw	r24, r22
     8d8:	bc 01       	movw	r22, r24
     8da:	cd 01       	movw	r24, r26
     8dc:	0e 94 a8 04 	call	0x950	; 0x950 <__fixunssfsi>
     8e0:	dc 01       	movw	r26, r24
     8e2:	cb 01       	movw	r24, r22
     8e4:	9e 83       	std	Y+6, r25	; 0x06
     8e6:	8d 83       	std	Y+5, r24	; 0x05
     8e8:	0f c0       	rjmp	.+30     	; 0x908 <__stack+0x9>
     8ea:	80 e9       	ldi	r24, 0x90	; 144
     8ec:	91 e0       	ldi	r25, 0x01	; 1
     8ee:	9c 83       	std	Y+4, r25	; 0x04
     8f0:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     8f2:	8b 81       	ldd	r24, Y+3	; 0x03
     8f4:	9c 81       	ldd	r25, Y+4	; 0x04
     8f6:	01 97       	sbiw	r24, 0x01	; 1
     8f8:	f1 f7       	brne	.-4      	; 0x8f6 <main+0xcc>
     8fa:	9c 83       	std	Y+4, r25	; 0x04
     8fc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8fe:	8d 81       	ldd	r24, Y+5	; 0x05
     900:	9e 81       	ldd	r25, Y+6	; 0x06
     902:	01 97       	sbiw	r24, 0x01	; 1
     904:	9e 83       	std	Y+6, r25	; 0x06
     906:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     908:	8d 81       	ldd	r24, Y+5	; 0x05
     90a:	9e 81       	ldd	r25, Y+6	; 0x06
     90c:	00 97       	sbiw	r24, 0x00	; 0
     90e:	69 f7       	brne	.-38     	; 0x8ea <main+0xc0>
     910:	14 c0       	rjmp	.+40     	; 0x93a <__stack+0x3b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     912:	6f 81       	ldd	r22, Y+7	; 0x07
     914:	78 85       	ldd	r23, Y+8	; 0x08
     916:	89 85       	ldd	r24, Y+9	; 0x09
     918:	9a 85       	ldd	r25, Y+10	; 0x0a
     91a:	0e 94 a8 04 	call	0x950	; 0x950 <__fixunssfsi>
     91e:	dc 01       	movw	r26, r24
     920:	cb 01       	movw	r24, r22
     922:	9e 83       	std	Y+6, r25	; 0x06
     924:	8d 83       	std	Y+5, r24	; 0x05
     926:	8d 81       	ldd	r24, Y+5	; 0x05
     928:	9e 81       	ldd	r25, Y+6	; 0x06
     92a:	9a 83       	std	Y+2, r25	; 0x02
     92c:	89 83       	std	Y+1, r24	; 0x01
     92e:	89 81       	ldd	r24, Y+1	; 0x01
     930:	9a 81       	ldd	r25, Y+2	; 0x02
     932:	01 97       	sbiw	r24, 0x01	; 1
     934:	f1 f7       	brne	.-4      	; 0x932 <__stack+0x33>
     936:	9a 83       	std	Y+2, r25	; 0x02
     938:	89 83       	std	Y+1, r24	; 0x01
_delay_ms(300);
POSITION(1,2,900,4);
     93a:	81 e0       	ldi	r24, 0x01	; 1
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	62 e0       	ldi	r22, 0x02	; 2
     940:	70 e0       	ldi	r23, 0x00	; 0
     942:	44 e8       	ldi	r20, 0x84	; 132
     944:	53 e0       	ldi	r21, 0x03	; 3
     946:	24 e0       	ldi	r18, 0x04	; 4
     948:	30 e0       	ldi	r19, 0x00	; 0
     94a:	0e 94 aa 03 	call	0x754	; 0x754 <POSITION>
     94e:	ff cf       	rjmp	.-2      	; 0x94e <__stack+0x4f>

00000950 <__fixunssfsi>:
     950:	ef 92       	push	r14
     952:	ff 92       	push	r15
     954:	0f 93       	push	r16
     956:	1f 93       	push	r17
     958:	7b 01       	movw	r14, r22
     95a:	8c 01       	movw	r16, r24
     95c:	20 e0       	ldi	r18, 0x00	; 0
     95e:	30 e0       	ldi	r19, 0x00	; 0
     960:	40 e0       	ldi	r20, 0x00	; 0
     962:	5f e4       	ldi	r21, 0x4F	; 79
     964:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__gesf2>
     968:	88 23       	and	r24, r24
     96a:	8c f0       	brlt	.+34     	; 0x98e <__fixunssfsi+0x3e>
     96c:	c8 01       	movw	r24, r16
     96e:	b7 01       	movw	r22, r14
     970:	20 e0       	ldi	r18, 0x00	; 0
     972:	30 e0       	ldi	r19, 0x00	; 0
     974:	40 e0       	ldi	r20, 0x00	; 0
     976:	5f e4       	ldi	r21, 0x4F	; 79
     978:	0e 94 20 06 	call	0xc40	; 0xc40 <__subsf3>
     97c:	0e 94 b4 08 	call	0x1168	; 0x1168 <__fixsfsi>
     980:	9b 01       	movw	r18, r22
     982:	ac 01       	movw	r20, r24
     984:	20 50       	subi	r18, 0x00	; 0
     986:	30 40       	sbci	r19, 0x00	; 0
     988:	40 40       	sbci	r20, 0x00	; 0
     98a:	50 48       	sbci	r21, 0x80	; 128
     98c:	06 c0       	rjmp	.+12     	; 0x99a <__fixunssfsi+0x4a>
     98e:	c8 01       	movw	r24, r16
     990:	b7 01       	movw	r22, r14
     992:	0e 94 b4 08 	call	0x1168	; 0x1168 <__fixsfsi>
     996:	9b 01       	movw	r18, r22
     998:	ac 01       	movw	r20, r24
     99a:	b9 01       	movw	r22, r18
     99c:	ca 01       	movw	r24, r20
     99e:	1f 91       	pop	r17
     9a0:	0f 91       	pop	r16
     9a2:	ff 90       	pop	r15
     9a4:	ef 90       	pop	r14
     9a6:	08 95       	ret

000009a8 <_fpadd_parts>:
     9a8:	a0 e0       	ldi	r26, 0x00	; 0
     9aa:	b0 e0       	ldi	r27, 0x00	; 0
     9ac:	ea ed       	ldi	r30, 0xDA	; 218
     9ae:	f4 e0       	ldi	r31, 0x04	; 4
     9b0:	0c 94 ae 0a 	jmp	0x155c	; 0x155c <__prologue_saves__>
     9b4:	dc 01       	movw	r26, r24
     9b6:	2b 01       	movw	r4, r22
     9b8:	fa 01       	movw	r30, r20
     9ba:	9c 91       	ld	r25, X
     9bc:	92 30       	cpi	r25, 0x02	; 2
     9be:	08 f4       	brcc	.+2      	; 0x9c2 <_fpadd_parts+0x1a>
     9c0:	39 c1       	rjmp	.+626    	; 0xc34 <_fpadd_parts+0x28c>
     9c2:	eb 01       	movw	r28, r22
     9c4:	88 81       	ld	r24, Y
     9c6:	82 30       	cpi	r24, 0x02	; 2
     9c8:	08 f4       	brcc	.+2      	; 0x9cc <_fpadd_parts+0x24>
     9ca:	33 c1       	rjmp	.+614    	; 0xc32 <_fpadd_parts+0x28a>
     9cc:	94 30       	cpi	r25, 0x04	; 4
     9ce:	69 f4       	brne	.+26     	; 0x9ea <_fpadd_parts+0x42>
     9d0:	84 30       	cpi	r24, 0x04	; 4
     9d2:	09 f0       	breq	.+2      	; 0x9d6 <_fpadd_parts+0x2e>
     9d4:	2f c1       	rjmp	.+606    	; 0xc34 <_fpadd_parts+0x28c>
     9d6:	11 96       	adiw	r26, 0x01	; 1
     9d8:	9c 91       	ld	r25, X
     9da:	11 97       	sbiw	r26, 0x01	; 1
     9dc:	89 81       	ldd	r24, Y+1	; 0x01
     9de:	98 17       	cp	r25, r24
     9e0:	09 f4       	brne	.+2      	; 0x9e4 <_fpadd_parts+0x3c>
     9e2:	28 c1       	rjmp	.+592    	; 0xc34 <_fpadd_parts+0x28c>
     9e4:	aa e0       	ldi	r26, 0x0A	; 10
     9e6:	b1 e0       	ldi	r27, 0x01	; 1
     9e8:	25 c1       	rjmp	.+586    	; 0xc34 <_fpadd_parts+0x28c>
     9ea:	84 30       	cpi	r24, 0x04	; 4
     9ec:	09 f4       	brne	.+2      	; 0x9f0 <_fpadd_parts+0x48>
     9ee:	21 c1       	rjmp	.+578    	; 0xc32 <_fpadd_parts+0x28a>
     9f0:	82 30       	cpi	r24, 0x02	; 2
     9f2:	a9 f4       	brne	.+42     	; 0xa1e <_fpadd_parts+0x76>
     9f4:	92 30       	cpi	r25, 0x02	; 2
     9f6:	09 f0       	breq	.+2      	; 0x9fa <_fpadd_parts+0x52>
     9f8:	1d c1       	rjmp	.+570    	; 0xc34 <_fpadd_parts+0x28c>
     9fa:	9a 01       	movw	r18, r20
     9fc:	ad 01       	movw	r20, r26
     9fe:	88 e0       	ldi	r24, 0x08	; 8
     a00:	ea 01       	movw	r28, r20
     a02:	09 90       	ld	r0, Y+
     a04:	ae 01       	movw	r20, r28
     a06:	e9 01       	movw	r28, r18
     a08:	09 92       	st	Y+, r0
     a0a:	9e 01       	movw	r18, r28
     a0c:	81 50       	subi	r24, 0x01	; 1
     a0e:	c1 f7       	brne	.-16     	; 0xa00 <_fpadd_parts+0x58>
     a10:	e2 01       	movw	r28, r4
     a12:	89 81       	ldd	r24, Y+1	; 0x01
     a14:	11 96       	adiw	r26, 0x01	; 1
     a16:	9c 91       	ld	r25, X
     a18:	89 23       	and	r24, r25
     a1a:	81 83       	std	Z+1, r24	; 0x01
     a1c:	08 c1       	rjmp	.+528    	; 0xc2e <_fpadd_parts+0x286>
     a1e:	92 30       	cpi	r25, 0x02	; 2
     a20:	09 f4       	brne	.+2      	; 0xa24 <_fpadd_parts+0x7c>
     a22:	07 c1       	rjmp	.+526    	; 0xc32 <_fpadd_parts+0x28a>
     a24:	12 96       	adiw	r26, 0x02	; 2
     a26:	2d 90       	ld	r2, X+
     a28:	3c 90       	ld	r3, X
     a2a:	13 97       	sbiw	r26, 0x03	; 3
     a2c:	eb 01       	movw	r28, r22
     a2e:	8a 81       	ldd	r24, Y+2	; 0x02
     a30:	9b 81       	ldd	r25, Y+3	; 0x03
     a32:	14 96       	adiw	r26, 0x04	; 4
     a34:	ad 90       	ld	r10, X+
     a36:	bd 90       	ld	r11, X+
     a38:	cd 90       	ld	r12, X+
     a3a:	dc 90       	ld	r13, X
     a3c:	17 97       	sbiw	r26, 0x07	; 7
     a3e:	ec 80       	ldd	r14, Y+4	; 0x04
     a40:	fd 80       	ldd	r15, Y+5	; 0x05
     a42:	0e 81       	ldd	r16, Y+6	; 0x06
     a44:	1f 81       	ldd	r17, Y+7	; 0x07
     a46:	91 01       	movw	r18, r2
     a48:	28 1b       	sub	r18, r24
     a4a:	39 0b       	sbc	r19, r25
     a4c:	b9 01       	movw	r22, r18
     a4e:	37 ff       	sbrs	r19, 7
     a50:	04 c0       	rjmp	.+8      	; 0xa5a <_fpadd_parts+0xb2>
     a52:	66 27       	eor	r22, r22
     a54:	77 27       	eor	r23, r23
     a56:	62 1b       	sub	r22, r18
     a58:	73 0b       	sbc	r23, r19
     a5a:	60 32       	cpi	r22, 0x20	; 32
     a5c:	71 05       	cpc	r23, r1
     a5e:	0c f0       	brlt	.+2      	; 0xa62 <_fpadd_parts+0xba>
     a60:	61 c0       	rjmp	.+194    	; 0xb24 <_fpadd_parts+0x17c>
     a62:	12 16       	cp	r1, r18
     a64:	13 06       	cpc	r1, r19
     a66:	6c f5       	brge	.+90     	; 0xac2 <_fpadd_parts+0x11a>
     a68:	37 01       	movw	r6, r14
     a6a:	48 01       	movw	r8, r16
     a6c:	06 2e       	mov	r0, r22
     a6e:	04 c0       	rjmp	.+8      	; 0xa78 <_fpadd_parts+0xd0>
     a70:	96 94       	lsr	r9
     a72:	87 94       	ror	r8
     a74:	77 94       	ror	r7
     a76:	67 94       	ror	r6
     a78:	0a 94       	dec	r0
     a7a:	d2 f7       	brpl	.-12     	; 0xa70 <_fpadd_parts+0xc8>
     a7c:	21 e0       	ldi	r18, 0x01	; 1
     a7e:	30 e0       	ldi	r19, 0x00	; 0
     a80:	40 e0       	ldi	r20, 0x00	; 0
     a82:	50 e0       	ldi	r21, 0x00	; 0
     a84:	04 c0       	rjmp	.+8      	; 0xa8e <_fpadd_parts+0xe6>
     a86:	22 0f       	add	r18, r18
     a88:	33 1f       	adc	r19, r19
     a8a:	44 1f       	adc	r20, r20
     a8c:	55 1f       	adc	r21, r21
     a8e:	6a 95       	dec	r22
     a90:	d2 f7       	brpl	.-12     	; 0xa86 <_fpadd_parts+0xde>
     a92:	21 50       	subi	r18, 0x01	; 1
     a94:	30 40       	sbci	r19, 0x00	; 0
     a96:	40 40       	sbci	r20, 0x00	; 0
     a98:	50 40       	sbci	r21, 0x00	; 0
     a9a:	2e 21       	and	r18, r14
     a9c:	3f 21       	and	r19, r15
     a9e:	40 23       	and	r20, r16
     aa0:	51 23       	and	r21, r17
     aa2:	21 15       	cp	r18, r1
     aa4:	31 05       	cpc	r19, r1
     aa6:	41 05       	cpc	r20, r1
     aa8:	51 05       	cpc	r21, r1
     aaa:	21 f0       	breq	.+8      	; 0xab4 <_fpadd_parts+0x10c>
     aac:	21 e0       	ldi	r18, 0x01	; 1
     aae:	30 e0       	ldi	r19, 0x00	; 0
     ab0:	40 e0       	ldi	r20, 0x00	; 0
     ab2:	50 e0       	ldi	r21, 0x00	; 0
     ab4:	79 01       	movw	r14, r18
     ab6:	8a 01       	movw	r16, r20
     ab8:	e6 28       	or	r14, r6
     aba:	f7 28       	or	r15, r7
     abc:	08 29       	or	r16, r8
     abe:	19 29       	or	r17, r9
     ac0:	3c c0       	rjmp	.+120    	; 0xb3a <_fpadd_parts+0x192>
     ac2:	23 2b       	or	r18, r19
     ac4:	d1 f1       	breq	.+116    	; 0xb3a <_fpadd_parts+0x192>
     ac6:	26 0e       	add	r2, r22
     ac8:	37 1e       	adc	r3, r23
     aca:	35 01       	movw	r6, r10
     acc:	46 01       	movw	r8, r12
     ace:	06 2e       	mov	r0, r22
     ad0:	04 c0       	rjmp	.+8      	; 0xada <_fpadd_parts+0x132>
     ad2:	96 94       	lsr	r9
     ad4:	87 94       	ror	r8
     ad6:	77 94       	ror	r7
     ad8:	67 94       	ror	r6
     ada:	0a 94       	dec	r0
     adc:	d2 f7       	brpl	.-12     	; 0xad2 <_fpadd_parts+0x12a>
     ade:	21 e0       	ldi	r18, 0x01	; 1
     ae0:	30 e0       	ldi	r19, 0x00	; 0
     ae2:	40 e0       	ldi	r20, 0x00	; 0
     ae4:	50 e0       	ldi	r21, 0x00	; 0
     ae6:	04 c0       	rjmp	.+8      	; 0xaf0 <_fpadd_parts+0x148>
     ae8:	22 0f       	add	r18, r18
     aea:	33 1f       	adc	r19, r19
     aec:	44 1f       	adc	r20, r20
     aee:	55 1f       	adc	r21, r21
     af0:	6a 95       	dec	r22
     af2:	d2 f7       	brpl	.-12     	; 0xae8 <_fpadd_parts+0x140>
     af4:	21 50       	subi	r18, 0x01	; 1
     af6:	30 40       	sbci	r19, 0x00	; 0
     af8:	40 40       	sbci	r20, 0x00	; 0
     afa:	50 40       	sbci	r21, 0x00	; 0
     afc:	2a 21       	and	r18, r10
     afe:	3b 21       	and	r19, r11
     b00:	4c 21       	and	r20, r12
     b02:	5d 21       	and	r21, r13
     b04:	21 15       	cp	r18, r1
     b06:	31 05       	cpc	r19, r1
     b08:	41 05       	cpc	r20, r1
     b0a:	51 05       	cpc	r21, r1
     b0c:	21 f0       	breq	.+8      	; 0xb16 <_fpadd_parts+0x16e>
     b0e:	21 e0       	ldi	r18, 0x01	; 1
     b10:	30 e0       	ldi	r19, 0x00	; 0
     b12:	40 e0       	ldi	r20, 0x00	; 0
     b14:	50 e0       	ldi	r21, 0x00	; 0
     b16:	59 01       	movw	r10, r18
     b18:	6a 01       	movw	r12, r20
     b1a:	a6 28       	or	r10, r6
     b1c:	b7 28       	or	r11, r7
     b1e:	c8 28       	or	r12, r8
     b20:	d9 28       	or	r13, r9
     b22:	0b c0       	rjmp	.+22     	; 0xb3a <_fpadd_parts+0x192>
     b24:	82 15       	cp	r24, r2
     b26:	93 05       	cpc	r25, r3
     b28:	2c f0       	brlt	.+10     	; 0xb34 <_fpadd_parts+0x18c>
     b2a:	1c 01       	movw	r2, r24
     b2c:	aa 24       	eor	r10, r10
     b2e:	bb 24       	eor	r11, r11
     b30:	65 01       	movw	r12, r10
     b32:	03 c0       	rjmp	.+6      	; 0xb3a <_fpadd_parts+0x192>
     b34:	ee 24       	eor	r14, r14
     b36:	ff 24       	eor	r15, r15
     b38:	87 01       	movw	r16, r14
     b3a:	11 96       	adiw	r26, 0x01	; 1
     b3c:	9c 91       	ld	r25, X
     b3e:	d2 01       	movw	r26, r4
     b40:	11 96       	adiw	r26, 0x01	; 1
     b42:	8c 91       	ld	r24, X
     b44:	98 17       	cp	r25, r24
     b46:	09 f4       	brne	.+2      	; 0xb4a <_fpadd_parts+0x1a2>
     b48:	45 c0       	rjmp	.+138    	; 0xbd4 <_fpadd_parts+0x22c>
     b4a:	99 23       	and	r25, r25
     b4c:	39 f0       	breq	.+14     	; 0xb5c <_fpadd_parts+0x1b4>
     b4e:	a8 01       	movw	r20, r16
     b50:	97 01       	movw	r18, r14
     b52:	2a 19       	sub	r18, r10
     b54:	3b 09       	sbc	r19, r11
     b56:	4c 09       	sbc	r20, r12
     b58:	5d 09       	sbc	r21, r13
     b5a:	06 c0       	rjmp	.+12     	; 0xb68 <_fpadd_parts+0x1c0>
     b5c:	a6 01       	movw	r20, r12
     b5e:	95 01       	movw	r18, r10
     b60:	2e 19       	sub	r18, r14
     b62:	3f 09       	sbc	r19, r15
     b64:	40 0b       	sbc	r20, r16
     b66:	51 0b       	sbc	r21, r17
     b68:	57 fd       	sbrc	r21, 7
     b6a:	08 c0       	rjmp	.+16     	; 0xb7c <_fpadd_parts+0x1d4>
     b6c:	11 82       	std	Z+1, r1	; 0x01
     b6e:	33 82       	std	Z+3, r3	; 0x03
     b70:	22 82       	std	Z+2, r2	; 0x02
     b72:	24 83       	std	Z+4, r18	; 0x04
     b74:	35 83       	std	Z+5, r19	; 0x05
     b76:	46 83       	std	Z+6, r20	; 0x06
     b78:	57 83       	std	Z+7, r21	; 0x07
     b7a:	1d c0       	rjmp	.+58     	; 0xbb6 <_fpadd_parts+0x20e>
     b7c:	81 e0       	ldi	r24, 0x01	; 1
     b7e:	81 83       	std	Z+1, r24	; 0x01
     b80:	33 82       	std	Z+3, r3	; 0x03
     b82:	22 82       	std	Z+2, r2	; 0x02
     b84:	88 27       	eor	r24, r24
     b86:	99 27       	eor	r25, r25
     b88:	dc 01       	movw	r26, r24
     b8a:	82 1b       	sub	r24, r18
     b8c:	93 0b       	sbc	r25, r19
     b8e:	a4 0b       	sbc	r26, r20
     b90:	b5 0b       	sbc	r27, r21
     b92:	84 83       	std	Z+4, r24	; 0x04
     b94:	95 83       	std	Z+5, r25	; 0x05
     b96:	a6 83       	std	Z+6, r26	; 0x06
     b98:	b7 83       	std	Z+7, r27	; 0x07
     b9a:	0d c0       	rjmp	.+26     	; 0xbb6 <_fpadd_parts+0x20e>
     b9c:	22 0f       	add	r18, r18
     b9e:	33 1f       	adc	r19, r19
     ba0:	44 1f       	adc	r20, r20
     ba2:	55 1f       	adc	r21, r21
     ba4:	24 83       	std	Z+4, r18	; 0x04
     ba6:	35 83       	std	Z+5, r19	; 0x05
     ba8:	46 83       	std	Z+6, r20	; 0x06
     baa:	57 83       	std	Z+7, r21	; 0x07
     bac:	82 81       	ldd	r24, Z+2	; 0x02
     bae:	93 81       	ldd	r25, Z+3	; 0x03
     bb0:	01 97       	sbiw	r24, 0x01	; 1
     bb2:	93 83       	std	Z+3, r25	; 0x03
     bb4:	82 83       	std	Z+2, r24	; 0x02
     bb6:	24 81       	ldd	r18, Z+4	; 0x04
     bb8:	35 81       	ldd	r19, Z+5	; 0x05
     bba:	46 81       	ldd	r20, Z+6	; 0x06
     bbc:	57 81       	ldd	r21, Z+7	; 0x07
     bbe:	da 01       	movw	r26, r20
     bc0:	c9 01       	movw	r24, r18
     bc2:	01 97       	sbiw	r24, 0x01	; 1
     bc4:	a1 09       	sbc	r26, r1
     bc6:	b1 09       	sbc	r27, r1
     bc8:	8f 5f       	subi	r24, 0xFF	; 255
     bca:	9f 4f       	sbci	r25, 0xFF	; 255
     bcc:	af 4f       	sbci	r26, 0xFF	; 255
     bce:	bf 43       	sbci	r27, 0x3F	; 63
     bd0:	28 f3       	brcs	.-54     	; 0xb9c <_fpadd_parts+0x1f4>
     bd2:	0b c0       	rjmp	.+22     	; 0xbea <_fpadd_parts+0x242>
     bd4:	91 83       	std	Z+1, r25	; 0x01
     bd6:	33 82       	std	Z+3, r3	; 0x03
     bd8:	22 82       	std	Z+2, r2	; 0x02
     bda:	ea 0c       	add	r14, r10
     bdc:	fb 1c       	adc	r15, r11
     bde:	0c 1d       	adc	r16, r12
     be0:	1d 1d       	adc	r17, r13
     be2:	e4 82       	std	Z+4, r14	; 0x04
     be4:	f5 82       	std	Z+5, r15	; 0x05
     be6:	06 83       	std	Z+6, r16	; 0x06
     be8:	17 83       	std	Z+7, r17	; 0x07
     bea:	83 e0       	ldi	r24, 0x03	; 3
     bec:	80 83       	st	Z, r24
     bee:	24 81       	ldd	r18, Z+4	; 0x04
     bf0:	35 81       	ldd	r19, Z+5	; 0x05
     bf2:	46 81       	ldd	r20, Z+6	; 0x06
     bf4:	57 81       	ldd	r21, Z+7	; 0x07
     bf6:	57 ff       	sbrs	r21, 7
     bf8:	1a c0       	rjmp	.+52     	; 0xc2e <_fpadd_parts+0x286>
     bfa:	c9 01       	movw	r24, r18
     bfc:	aa 27       	eor	r26, r26
     bfe:	97 fd       	sbrc	r25, 7
     c00:	a0 95       	com	r26
     c02:	ba 2f       	mov	r27, r26
     c04:	81 70       	andi	r24, 0x01	; 1
     c06:	90 70       	andi	r25, 0x00	; 0
     c08:	a0 70       	andi	r26, 0x00	; 0
     c0a:	b0 70       	andi	r27, 0x00	; 0
     c0c:	56 95       	lsr	r21
     c0e:	47 95       	ror	r20
     c10:	37 95       	ror	r19
     c12:	27 95       	ror	r18
     c14:	82 2b       	or	r24, r18
     c16:	93 2b       	or	r25, r19
     c18:	a4 2b       	or	r26, r20
     c1a:	b5 2b       	or	r27, r21
     c1c:	84 83       	std	Z+4, r24	; 0x04
     c1e:	95 83       	std	Z+5, r25	; 0x05
     c20:	a6 83       	std	Z+6, r26	; 0x06
     c22:	b7 83       	std	Z+7, r27	; 0x07
     c24:	82 81       	ldd	r24, Z+2	; 0x02
     c26:	93 81       	ldd	r25, Z+3	; 0x03
     c28:	01 96       	adiw	r24, 0x01	; 1
     c2a:	93 83       	std	Z+3, r25	; 0x03
     c2c:	82 83       	std	Z+2, r24	; 0x02
     c2e:	df 01       	movw	r26, r30
     c30:	01 c0       	rjmp	.+2      	; 0xc34 <_fpadd_parts+0x28c>
     c32:	d2 01       	movw	r26, r4
     c34:	cd 01       	movw	r24, r26
     c36:	cd b7       	in	r28, 0x3d	; 61
     c38:	de b7       	in	r29, 0x3e	; 62
     c3a:	e2 e1       	ldi	r30, 0x12	; 18
     c3c:	0c 94 ca 0a 	jmp	0x1594	; 0x1594 <__epilogue_restores__>

00000c40 <__subsf3>:
     c40:	a0 e2       	ldi	r26, 0x20	; 32
     c42:	b0 e0       	ldi	r27, 0x00	; 0
     c44:	e6 e2       	ldi	r30, 0x26	; 38
     c46:	f6 e0       	ldi	r31, 0x06	; 6
     c48:	0c 94 ba 0a 	jmp	0x1574	; 0x1574 <__prologue_saves__+0x18>
     c4c:	69 83       	std	Y+1, r22	; 0x01
     c4e:	7a 83       	std	Y+2, r23	; 0x02
     c50:	8b 83       	std	Y+3, r24	; 0x03
     c52:	9c 83       	std	Y+4, r25	; 0x04
     c54:	2d 83       	std	Y+5, r18	; 0x05
     c56:	3e 83       	std	Y+6, r19	; 0x06
     c58:	4f 83       	std	Y+7, r20	; 0x07
     c5a:	58 87       	std	Y+8, r21	; 0x08
     c5c:	e9 e0       	ldi	r30, 0x09	; 9
     c5e:	ee 2e       	mov	r14, r30
     c60:	f1 2c       	mov	r15, r1
     c62:	ec 0e       	add	r14, r28
     c64:	fd 1e       	adc	r15, r29
     c66:	ce 01       	movw	r24, r28
     c68:	01 96       	adiw	r24, 0x01	; 1
     c6a:	b7 01       	movw	r22, r14
     c6c:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
     c70:	8e 01       	movw	r16, r28
     c72:	0f 5e       	subi	r16, 0xEF	; 239
     c74:	1f 4f       	sbci	r17, 0xFF	; 255
     c76:	ce 01       	movw	r24, r28
     c78:	05 96       	adiw	r24, 0x05	; 5
     c7a:	b8 01       	movw	r22, r16
     c7c:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
     c80:	8a 89       	ldd	r24, Y+18	; 0x12
     c82:	91 e0       	ldi	r25, 0x01	; 1
     c84:	89 27       	eor	r24, r25
     c86:	8a 8b       	std	Y+18, r24	; 0x12
     c88:	c7 01       	movw	r24, r14
     c8a:	b8 01       	movw	r22, r16
     c8c:	ae 01       	movw	r20, r28
     c8e:	47 5e       	subi	r20, 0xE7	; 231
     c90:	5f 4f       	sbci	r21, 0xFF	; 255
     c92:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <_fpadd_parts>
     c96:	0e 94 08 09 	call	0x1210	; 0x1210 <__pack_f>
     c9a:	a0 96       	adiw	r28, 0x20	; 32
     c9c:	e6 e0       	ldi	r30, 0x06	; 6
     c9e:	0c 94 d6 0a 	jmp	0x15ac	; 0x15ac <__epilogue_restores__+0x18>

00000ca2 <__addsf3>:
     ca2:	a0 e2       	ldi	r26, 0x20	; 32
     ca4:	b0 e0       	ldi	r27, 0x00	; 0
     ca6:	e7 e5       	ldi	r30, 0x57	; 87
     ca8:	f6 e0       	ldi	r31, 0x06	; 6
     caa:	0c 94 ba 0a 	jmp	0x1574	; 0x1574 <__prologue_saves__+0x18>
     cae:	69 83       	std	Y+1, r22	; 0x01
     cb0:	7a 83       	std	Y+2, r23	; 0x02
     cb2:	8b 83       	std	Y+3, r24	; 0x03
     cb4:	9c 83       	std	Y+4, r25	; 0x04
     cb6:	2d 83       	std	Y+5, r18	; 0x05
     cb8:	3e 83       	std	Y+6, r19	; 0x06
     cba:	4f 83       	std	Y+7, r20	; 0x07
     cbc:	58 87       	std	Y+8, r21	; 0x08
     cbe:	f9 e0       	ldi	r31, 0x09	; 9
     cc0:	ef 2e       	mov	r14, r31
     cc2:	f1 2c       	mov	r15, r1
     cc4:	ec 0e       	add	r14, r28
     cc6:	fd 1e       	adc	r15, r29
     cc8:	ce 01       	movw	r24, r28
     cca:	01 96       	adiw	r24, 0x01	; 1
     ccc:	b7 01       	movw	r22, r14
     cce:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
     cd2:	8e 01       	movw	r16, r28
     cd4:	0f 5e       	subi	r16, 0xEF	; 239
     cd6:	1f 4f       	sbci	r17, 0xFF	; 255
     cd8:	ce 01       	movw	r24, r28
     cda:	05 96       	adiw	r24, 0x05	; 5
     cdc:	b8 01       	movw	r22, r16
     cde:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
     ce2:	c7 01       	movw	r24, r14
     ce4:	b8 01       	movw	r22, r16
     ce6:	ae 01       	movw	r20, r28
     ce8:	47 5e       	subi	r20, 0xE7	; 231
     cea:	5f 4f       	sbci	r21, 0xFF	; 255
     cec:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <_fpadd_parts>
     cf0:	0e 94 08 09 	call	0x1210	; 0x1210 <__pack_f>
     cf4:	a0 96       	adiw	r28, 0x20	; 32
     cf6:	e6 e0       	ldi	r30, 0x06	; 6
     cf8:	0c 94 d6 0a 	jmp	0x15ac	; 0x15ac <__epilogue_restores__+0x18>

00000cfc <__mulsf3>:
     cfc:	a0 e2       	ldi	r26, 0x20	; 32
     cfe:	b0 e0       	ldi	r27, 0x00	; 0
     d00:	e4 e8       	ldi	r30, 0x84	; 132
     d02:	f6 e0       	ldi	r31, 0x06	; 6
     d04:	0c 94 ae 0a 	jmp	0x155c	; 0x155c <__prologue_saves__>
     d08:	69 83       	std	Y+1, r22	; 0x01
     d0a:	7a 83       	std	Y+2, r23	; 0x02
     d0c:	8b 83       	std	Y+3, r24	; 0x03
     d0e:	9c 83       	std	Y+4, r25	; 0x04
     d10:	2d 83       	std	Y+5, r18	; 0x05
     d12:	3e 83       	std	Y+6, r19	; 0x06
     d14:	4f 83       	std	Y+7, r20	; 0x07
     d16:	58 87       	std	Y+8, r21	; 0x08
     d18:	ce 01       	movw	r24, r28
     d1a:	01 96       	adiw	r24, 0x01	; 1
     d1c:	be 01       	movw	r22, r28
     d1e:	67 5f       	subi	r22, 0xF7	; 247
     d20:	7f 4f       	sbci	r23, 0xFF	; 255
     d22:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
     d26:	ce 01       	movw	r24, r28
     d28:	05 96       	adiw	r24, 0x05	; 5
     d2a:	be 01       	movw	r22, r28
     d2c:	6f 5e       	subi	r22, 0xEF	; 239
     d2e:	7f 4f       	sbci	r23, 0xFF	; 255
     d30:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
     d34:	99 85       	ldd	r25, Y+9	; 0x09
     d36:	92 30       	cpi	r25, 0x02	; 2
     d38:	88 f0       	brcs	.+34     	; 0xd5c <__mulsf3+0x60>
     d3a:	89 89       	ldd	r24, Y+17	; 0x11
     d3c:	82 30       	cpi	r24, 0x02	; 2
     d3e:	c8 f0       	brcs	.+50     	; 0xd72 <__mulsf3+0x76>
     d40:	94 30       	cpi	r25, 0x04	; 4
     d42:	19 f4       	brne	.+6      	; 0xd4a <__mulsf3+0x4e>
     d44:	82 30       	cpi	r24, 0x02	; 2
     d46:	51 f4       	brne	.+20     	; 0xd5c <__mulsf3+0x60>
     d48:	04 c0       	rjmp	.+8      	; 0xd52 <__mulsf3+0x56>
     d4a:	84 30       	cpi	r24, 0x04	; 4
     d4c:	29 f4       	brne	.+10     	; 0xd58 <__mulsf3+0x5c>
     d4e:	92 30       	cpi	r25, 0x02	; 2
     d50:	81 f4       	brne	.+32     	; 0xd72 <__mulsf3+0x76>
     d52:	8a e0       	ldi	r24, 0x0A	; 10
     d54:	91 e0       	ldi	r25, 0x01	; 1
     d56:	c6 c0       	rjmp	.+396    	; 0xee4 <__mulsf3+0x1e8>
     d58:	92 30       	cpi	r25, 0x02	; 2
     d5a:	49 f4       	brne	.+18     	; 0xd6e <__mulsf3+0x72>
     d5c:	20 e0       	ldi	r18, 0x00	; 0
     d5e:	9a 85       	ldd	r25, Y+10	; 0x0a
     d60:	8a 89       	ldd	r24, Y+18	; 0x12
     d62:	98 13       	cpse	r25, r24
     d64:	21 e0       	ldi	r18, 0x01	; 1
     d66:	2a 87       	std	Y+10, r18	; 0x0a
     d68:	ce 01       	movw	r24, r28
     d6a:	09 96       	adiw	r24, 0x09	; 9
     d6c:	bb c0       	rjmp	.+374    	; 0xee4 <__mulsf3+0x1e8>
     d6e:	82 30       	cpi	r24, 0x02	; 2
     d70:	49 f4       	brne	.+18     	; 0xd84 <__mulsf3+0x88>
     d72:	20 e0       	ldi	r18, 0x00	; 0
     d74:	9a 85       	ldd	r25, Y+10	; 0x0a
     d76:	8a 89       	ldd	r24, Y+18	; 0x12
     d78:	98 13       	cpse	r25, r24
     d7a:	21 e0       	ldi	r18, 0x01	; 1
     d7c:	2a 8b       	std	Y+18, r18	; 0x12
     d7e:	ce 01       	movw	r24, r28
     d80:	41 96       	adiw	r24, 0x11	; 17
     d82:	b0 c0       	rjmp	.+352    	; 0xee4 <__mulsf3+0x1e8>
     d84:	2d 84       	ldd	r2, Y+13	; 0x0d
     d86:	3e 84       	ldd	r3, Y+14	; 0x0e
     d88:	4f 84       	ldd	r4, Y+15	; 0x0f
     d8a:	58 88       	ldd	r5, Y+16	; 0x10
     d8c:	6d 88       	ldd	r6, Y+21	; 0x15
     d8e:	7e 88       	ldd	r7, Y+22	; 0x16
     d90:	8f 88       	ldd	r8, Y+23	; 0x17
     d92:	98 8c       	ldd	r9, Y+24	; 0x18
     d94:	ee 24       	eor	r14, r14
     d96:	ff 24       	eor	r15, r15
     d98:	87 01       	movw	r16, r14
     d9a:	aa 24       	eor	r10, r10
     d9c:	bb 24       	eor	r11, r11
     d9e:	65 01       	movw	r12, r10
     da0:	40 e0       	ldi	r20, 0x00	; 0
     da2:	50 e0       	ldi	r21, 0x00	; 0
     da4:	60 e0       	ldi	r22, 0x00	; 0
     da6:	70 e0       	ldi	r23, 0x00	; 0
     da8:	e0 e0       	ldi	r30, 0x00	; 0
     daa:	f0 e0       	ldi	r31, 0x00	; 0
     dac:	c1 01       	movw	r24, r2
     dae:	81 70       	andi	r24, 0x01	; 1
     db0:	90 70       	andi	r25, 0x00	; 0
     db2:	89 2b       	or	r24, r25
     db4:	e9 f0       	breq	.+58     	; 0xdf0 <__mulsf3+0xf4>
     db6:	e6 0c       	add	r14, r6
     db8:	f7 1c       	adc	r15, r7
     dba:	08 1d       	adc	r16, r8
     dbc:	19 1d       	adc	r17, r9
     dbe:	9a 01       	movw	r18, r20
     dc0:	ab 01       	movw	r20, r22
     dc2:	2a 0d       	add	r18, r10
     dc4:	3b 1d       	adc	r19, r11
     dc6:	4c 1d       	adc	r20, r12
     dc8:	5d 1d       	adc	r21, r13
     dca:	80 e0       	ldi	r24, 0x00	; 0
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	a0 e0       	ldi	r26, 0x00	; 0
     dd0:	b0 e0       	ldi	r27, 0x00	; 0
     dd2:	e6 14       	cp	r14, r6
     dd4:	f7 04       	cpc	r15, r7
     dd6:	08 05       	cpc	r16, r8
     dd8:	19 05       	cpc	r17, r9
     dda:	20 f4       	brcc	.+8      	; 0xde4 <__mulsf3+0xe8>
     ddc:	81 e0       	ldi	r24, 0x01	; 1
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	a0 e0       	ldi	r26, 0x00	; 0
     de2:	b0 e0       	ldi	r27, 0x00	; 0
     de4:	ba 01       	movw	r22, r20
     de6:	a9 01       	movw	r20, r18
     de8:	48 0f       	add	r20, r24
     dea:	59 1f       	adc	r21, r25
     dec:	6a 1f       	adc	r22, r26
     dee:	7b 1f       	adc	r23, r27
     df0:	aa 0c       	add	r10, r10
     df2:	bb 1c       	adc	r11, r11
     df4:	cc 1c       	adc	r12, r12
     df6:	dd 1c       	adc	r13, r13
     df8:	97 fe       	sbrs	r9, 7
     dfa:	08 c0       	rjmp	.+16     	; 0xe0c <__mulsf3+0x110>
     dfc:	81 e0       	ldi	r24, 0x01	; 1
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	a0 e0       	ldi	r26, 0x00	; 0
     e02:	b0 e0       	ldi	r27, 0x00	; 0
     e04:	a8 2a       	or	r10, r24
     e06:	b9 2a       	or	r11, r25
     e08:	ca 2a       	or	r12, r26
     e0a:	db 2a       	or	r13, r27
     e0c:	31 96       	adiw	r30, 0x01	; 1
     e0e:	e0 32       	cpi	r30, 0x20	; 32
     e10:	f1 05       	cpc	r31, r1
     e12:	49 f0       	breq	.+18     	; 0xe26 <__mulsf3+0x12a>
     e14:	66 0c       	add	r6, r6
     e16:	77 1c       	adc	r7, r7
     e18:	88 1c       	adc	r8, r8
     e1a:	99 1c       	adc	r9, r9
     e1c:	56 94       	lsr	r5
     e1e:	47 94       	ror	r4
     e20:	37 94       	ror	r3
     e22:	27 94       	ror	r2
     e24:	c3 cf       	rjmp	.-122    	; 0xdac <__mulsf3+0xb0>
     e26:	fa 85       	ldd	r31, Y+10	; 0x0a
     e28:	ea 89       	ldd	r30, Y+18	; 0x12
     e2a:	2b 89       	ldd	r18, Y+19	; 0x13
     e2c:	3c 89       	ldd	r19, Y+20	; 0x14
     e2e:	8b 85       	ldd	r24, Y+11	; 0x0b
     e30:	9c 85       	ldd	r25, Y+12	; 0x0c
     e32:	28 0f       	add	r18, r24
     e34:	39 1f       	adc	r19, r25
     e36:	2e 5f       	subi	r18, 0xFE	; 254
     e38:	3f 4f       	sbci	r19, 0xFF	; 255
     e3a:	17 c0       	rjmp	.+46     	; 0xe6a <__mulsf3+0x16e>
     e3c:	ca 01       	movw	r24, r20
     e3e:	81 70       	andi	r24, 0x01	; 1
     e40:	90 70       	andi	r25, 0x00	; 0
     e42:	89 2b       	or	r24, r25
     e44:	61 f0       	breq	.+24     	; 0xe5e <__mulsf3+0x162>
     e46:	16 95       	lsr	r17
     e48:	07 95       	ror	r16
     e4a:	f7 94       	ror	r15
     e4c:	e7 94       	ror	r14
     e4e:	80 e0       	ldi	r24, 0x00	; 0
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	a0 e0       	ldi	r26, 0x00	; 0
     e54:	b0 e8       	ldi	r27, 0x80	; 128
     e56:	e8 2a       	or	r14, r24
     e58:	f9 2a       	or	r15, r25
     e5a:	0a 2b       	or	r16, r26
     e5c:	1b 2b       	or	r17, r27
     e5e:	76 95       	lsr	r23
     e60:	67 95       	ror	r22
     e62:	57 95       	ror	r21
     e64:	47 95       	ror	r20
     e66:	2f 5f       	subi	r18, 0xFF	; 255
     e68:	3f 4f       	sbci	r19, 0xFF	; 255
     e6a:	77 fd       	sbrc	r23, 7
     e6c:	e7 cf       	rjmp	.-50     	; 0xe3c <__mulsf3+0x140>
     e6e:	0c c0       	rjmp	.+24     	; 0xe88 <__mulsf3+0x18c>
     e70:	44 0f       	add	r20, r20
     e72:	55 1f       	adc	r21, r21
     e74:	66 1f       	adc	r22, r22
     e76:	77 1f       	adc	r23, r23
     e78:	17 fd       	sbrc	r17, 7
     e7a:	41 60       	ori	r20, 0x01	; 1
     e7c:	ee 0c       	add	r14, r14
     e7e:	ff 1c       	adc	r15, r15
     e80:	00 1f       	adc	r16, r16
     e82:	11 1f       	adc	r17, r17
     e84:	21 50       	subi	r18, 0x01	; 1
     e86:	30 40       	sbci	r19, 0x00	; 0
     e88:	40 30       	cpi	r20, 0x00	; 0
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	59 07       	cpc	r21, r25
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	69 07       	cpc	r22, r25
     e92:	90 e4       	ldi	r25, 0x40	; 64
     e94:	79 07       	cpc	r23, r25
     e96:	60 f3       	brcs	.-40     	; 0xe70 <__mulsf3+0x174>
     e98:	2b 8f       	std	Y+27, r18	; 0x1b
     e9a:	3c 8f       	std	Y+28, r19	; 0x1c
     e9c:	db 01       	movw	r26, r22
     e9e:	ca 01       	movw	r24, r20
     ea0:	8f 77       	andi	r24, 0x7F	; 127
     ea2:	90 70       	andi	r25, 0x00	; 0
     ea4:	a0 70       	andi	r26, 0x00	; 0
     ea6:	b0 70       	andi	r27, 0x00	; 0
     ea8:	80 34       	cpi	r24, 0x40	; 64
     eaa:	91 05       	cpc	r25, r1
     eac:	a1 05       	cpc	r26, r1
     eae:	b1 05       	cpc	r27, r1
     eb0:	61 f4       	brne	.+24     	; 0xeca <__mulsf3+0x1ce>
     eb2:	47 fd       	sbrc	r20, 7
     eb4:	0a c0       	rjmp	.+20     	; 0xeca <__mulsf3+0x1ce>
     eb6:	e1 14       	cp	r14, r1
     eb8:	f1 04       	cpc	r15, r1
     eba:	01 05       	cpc	r16, r1
     ebc:	11 05       	cpc	r17, r1
     ebe:	29 f0       	breq	.+10     	; 0xeca <__mulsf3+0x1ce>
     ec0:	40 5c       	subi	r20, 0xC0	; 192
     ec2:	5f 4f       	sbci	r21, 0xFF	; 255
     ec4:	6f 4f       	sbci	r22, 0xFF	; 255
     ec6:	7f 4f       	sbci	r23, 0xFF	; 255
     ec8:	40 78       	andi	r20, 0x80	; 128
     eca:	1a 8e       	std	Y+26, r1	; 0x1a
     ecc:	fe 17       	cp	r31, r30
     ece:	11 f0       	breq	.+4      	; 0xed4 <__mulsf3+0x1d8>
     ed0:	81 e0       	ldi	r24, 0x01	; 1
     ed2:	8a 8f       	std	Y+26, r24	; 0x1a
     ed4:	4d 8f       	std	Y+29, r20	; 0x1d
     ed6:	5e 8f       	std	Y+30, r21	; 0x1e
     ed8:	6f 8f       	std	Y+31, r22	; 0x1f
     eda:	78 a3       	std	Y+32, r23	; 0x20
     edc:	83 e0       	ldi	r24, 0x03	; 3
     ede:	89 8f       	std	Y+25, r24	; 0x19
     ee0:	ce 01       	movw	r24, r28
     ee2:	49 96       	adiw	r24, 0x19	; 25
     ee4:	0e 94 08 09 	call	0x1210	; 0x1210 <__pack_f>
     ee8:	a0 96       	adiw	r28, 0x20	; 32
     eea:	e2 e1       	ldi	r30, 0x12	; 18
     eec:	0c 94 ca 0a 	jmp	0x1594	; 0x1594 <__epilogue_restores__>

00000ef0 <__divsf3>:
     ef0:	a8 e1       	ldi	r26, 0x18	; 24
     ef2:	b0 e0       	ldi	r27, 0x00	; 0
     ef4:	ee e7       	ldi	r30, 0x7E	; 126
     ef6:	f7 e0       	ldi	r31, 0x07	; 7
     ef8:	0c 94 b6 0a 	jmp	0x156c	; 0x156c <__prologue_saves__+0x10>
     efc:	69 83       	std	Y+1, r22	; 0x01
     efe:	7a 83       	std	Y+2, r23	; 0x02
     f00:	8b 83       	std	Y+3, r24	; 0x03
     f02:	9c 83       	std	Y+4, r25	; 0x04
     f04:	2d 83       	std	Y+5, r18	; 0x05
     f06:	3e 83       	std	Y+6, r19	; 0x06
     f08:	4f 83       	std	Y+7, r20	; 0x07
     f0a:	58 87       	std	Y+8, r21	; 0x08
     f0c:	b9 e0       	ldi	r27, 0x09	; 9
     f0e:	eb 2e       	mov	r14, r27
     f10:	f1 2c       	mov	r15, r1
     f12:	ec 0e       	add	r14, r28
     f14:	fd 1e       	adc	r15, r29
     f16:	ce 01       	movw	r24, r28
     f18:	01 96       	adiw	r24, 0x01	; 1
     f1a:	b7 01       	movw	r22, r14
     f1c:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
     f20:	8e 01       	movw	r16, r28
     f22:	0f 5e       	subi	r16, 0xEF	; 239
     f24:	1f 4f       	sbci	r17, 0xFF	; 255
     f26:	ce 01       	movw	r24, r28
     f28:	05 96       	adiw	r24, 0x05	; 5
     f2a:	b8 01       	movw	r22, r16
     f2c:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
     f30:	29 85       	ldd	r18, Y+9	; 0x09
     f32:	22 30       	cpi	r18, 0x02	; 2
     f34:	08 f4       	brcc	.+2      	; 0xf38 <__divsf3+0x48>
     f36:	7e c0       	rjmp	.+252    	; 0x1034 <__divsf3+0x144>
     f38:	39 89       	ldd	r19, Y+17	; 0x11
     f3a:	32 30       	cpi	r19, 0x02	; 2
     f3c:	10 f4       	brcc	.+4      	; 0xf42 <__divsf3+0x52>
     f3e:	b8 01       	movw	r22, r16
     f40:	7c c0       	rjmp	.+248    	; 0x103a <__divsf3+0x14a>
     f42:	8a 85       	ldd	r24, Y+10	; 0x0a
     f44:	9a 89       	ldd	r25, Y+18	; 0x12
     f46:	89 27       	eor	r24, r25
     f48:	8a 87       	std	Y+10, r24	; 0x0a
     f4a:	24 30       	cpi	r18, 0x04	; 4
     f4c:	11 f0       	breq	.+4      	; 0xf52 <__divsf3+0x62>
     f4e:	22 30       	cpi	r18, 0x02	; 2
     f50:	31 f4       	brne	.+12     	; 0xf5e <__divsf3+0x6e>
     f52:	23 17       	cp	r18, r19
     f54:	09 f0       	breq	.+2      	; 0xf58 <__divsf3+0x68>
     f56:	6e c0       	rjmp	.+220    	; 0x1034 <__divsf3+0x144>
     f58:	6a e0       	ldi	r22, 0x0A	; 10
     f5a:	71 e0       	ldi	r23, 0x01	; 1
     f5c:	6e c0       	rjmp	.+220    	; 0x103a <__divsf3+0x14a>
     f5e:	34 30       	cpi	r19, 0x04	; 4
     f60:	39 f4       	brne	.+14     	; 0xf70 <__divsf3+0x80>
     f62:	1d 86       	std	Y+13, r1	; 0x0d
     f64:	1e 86       	std	Y+14, r1	; 0x0e
     f66:	1f 86       	std	Y+15, r1	; 0x0f
     f68:	18 8a       	std	Y+16, r1	; 0x10
     f6a:	1c 86       	std	Y+12, r1	; 0x0c
     f6c:	1b 86       	std	Y+11, r1	; 0x0b
     f6e:	04 c0       	rjmp	.+8      	; 0xf78 <__divsf3+0x88>
     f70:	32 30       	cpi	r19, 0x02	; 2
     f72:	21 f4       	brne	.+8      	; 0xf7c <__divsf3+0x8c>
     f74:	84 e0       	ldi	r24, 0x04	; 4
     f76:	89 87       	std	Y+9, r24	; 0x09
     f78:	b7 01       	movw	r22, r14
     f7a:	5f c0       	rjmp	.+190    	; 0x103a <__divsf3+0x14a>
     f7c:	2b 85       	ldd	r18, Y+11	; 0x0b
     f7e:	3c 85       	ldd	r19, Y+12	; 0x0c
     f80:	8b 89       	ldd	r24, Y+19	; 0x13
     f82:	9c 89       	ldd	r25, Y+20	; 0x14
     f84:	28 1b       	sub	r18, r24
     f86:	39 0b       	sbc	r19, r25
     f88:	3c 87       	std	Y+12, r19	; 0x0c
     f8a:	2b 87       	std	Y+11, r18	; 0x0b
     f8c:	ed 84       	ldd	r14, Y+13	; 0x0d
     f8e:	fe 84       	ldd	r15, Y+14	; 0x0e
     f90:	0f 85       	ldd	r16, Y+15	; 0x0f
     f92:	18 89       	ldd	r17, Y+16	; 0x10
     f94:	ad 88       	ldd	r10, Y+21	; 0x15
     f96:	be 88       	ldd	r11, Y+22	; 0x16
     f98:	cf 88       	ldd	r12, Y+23	; 0x17
     f9a:	d8 8c       	ldd	r13, Y+24	; 0x18
     f9c:	ea 14       	cp	r14, r10
     f9e:	fb 04       	cpc	r15, r11
     fa0:	0c 05       	cpc	r16, r12
     fa2:	1d 05       	cpc	r17, r13
     fa4:	40 f4       	brcc	.+16     	; 0xfb6 <__divsf3+0xc6>
     fa6:	ee 0c       	add	r14, r14
     fa8:	ff 1c       	adc	r15, r15
     faa:	00 1f       	adc	r16, r16
     fac:	11 1f       	adc	r17, r17
     fae:	21 50       	subi	r18, 0x01	; 1
     fb0:	30 40       	sbci	r19, 0x00	; 0
     fb2:	3c 87       	std	Y+12, r19	; 0x0c
     fb4:	2b 87       	std	Y+11, r18	; 0x0b
     fb6:	20 e0       	ldi	r18, 0x00	; 0
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	40 e0       	ldi	r20, 0x00	; 0
     fbc:	50 e0       	ldi	r21, 0x00	; 0
     fbe:	80 e0       	ldi	r24, 0x00	; 0
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	a0 e0       	ldi	r26, 0x00	; 0
     fc4:	b0 e4       	ldi	r27, 0x40	; 64
     fc6:	60 e0       	ldi	r22, 0x00	; 0
     fc8:	70 e0       	ldi	r23, 0x00	; 0
     fca:	ea 14       	cp	r14, r10
     fcc:	fb 04       	cpc	r15, r11
     fce:	0c 05       	cpc	r16, r12
     fd0:	1d 05       	cpc	r17, r13
     fd2:	40 f0       	brcs	.+16     	; 0xfe4 <__divsf3+0xf4>
     fd4:	28 2b       	or	r18, r24
     fd6:	39 2b       	or	r19, r25
     fd8:	4a 2b       	or	r20, r26
     fda:	5b 2b       	or	r21, r27
     fdc:	ea 18       	sub	r14, r10
     fde:	fb 08       	sbc	r15, r11
     fe0:	0c 09       	sbc	r16, r12
     fe2:	1d 09       	sbc	r17, r13
     fe4:	b6 95       	lsr	r27
     fe6:	a7 95       	ror	r26
     fe8:	97 95       	ror	r25
     fea:	87 95       	ror	r24
     fec:	ee 0c       	add	r14, r14
     fee:	ff 1c       	adc	r15, r15
     ff0:	00 1f       	adc	r16, r16
     ff2:	11 1f       	adc	r17, r17
     ff4:	6f 5f       	subi	r22, 0xFF	; 255
     ff6:	7f 4f       	sbci	r23, 0xFF	; 255
     ff8:	6f 31       	cpi	r22, 0x1F	; 31
     ffa:	71 05       	cpc	r23, r1
     ffc:	31 f7       	brne	.-52     	; 0xfca <__divsf3+0xda>
     ffe:	da 01       	movw	r26, r20
    1000:	c9 01       	movw	r24, r18
    1002:	8f 77       	andi	r24, 0x7F	; 127
    1004:	90 70       	andi	r25, 0x00	; 0
    1006:	a0 70       	andi	r26, 0x00	; 0
    1008:	b0 70       	andi	r27, 0x00	; 0
    100a:	80 34       	cpi	r24, 0x40	; 64
    100c:	91 05       	cpc	r25, r1
    100e:	a1 05       	cpc	r26, r1
    1010:	b1 05       	cpc	r27, r1
    1012:	61 f4       	brne	.+24     	; 0x102c <__divsf3+0x13c>
    1014:	27 fd       	sbrc	r18, 7
    1016:	0a c0       	rjmp	.+20     	; 0x102c <__divsf3+0x13c>
    1018:	e1 14       	cp	r14, r1
    101a:	f1 04       	cpc	r15, r1
    101c:	01 05       	cpc	r16, r1
    101e:	11 05       	cpc	r17, r1
    1020:	29 f0       	breq	.+10     	; 0x102c <__divsf3+0x13c>
    1022:	20 5c       	subi	r18, 0xC0	; 192
    1024:	3f 4f       	sbci	r19, 0xFF	; 255
    1026:	4f 4f       	sbci	r20, 0xFF	; 255
    1028:	5f 4f       	sbci	r21, 0xFF	; 255
    102a:	20 78       	andi	r18, 0x80	; 128
    102c:	2d 87       	std	Y+13, r18	; 0x0d
    102e:	3e 87       	std	Y+14, r19	; 0x0e
    1030:	4f 87       	std	Y+15, r20	; 0x0f
    1032:	58 8b       	std	Y+16, r21	; 0x10
    1034:	be 01       	movw	r22, r28
    1036:	67 5f       	subi	r22, 0xF7	; 247
    1038:	7f 4f       	sbci	r23, 0xFF	; 255
    103a:	cb 01       	movw	r24, r22
    103c:	0e 94 08 09 	call	0x1210	; 0x1210 <__pack_f>
    1040:	68 96       	adiw	r28, 0x18	; 24
    1042:	ea e0       	ldi	r30, 0x0A	; 10
    1044:	0c 94 d2 0a 	jmp	0x15a4	; 0x15a4 <__epilogue_restores__+0x10>

00001048 <__gtsf2>:
    1048:	a8 e1       	ldi	r26, 0x18	; 24
    104a:	b0 e0       	ldi	r27, 0x00	; 0
    104c:	ea e2       	ldi	r30, 0x2A	; 42
    104e:	f8 e0       	ldi	r31, 0x08	; 8
    1050:	0c 94 ba 0a 	jmp	0x1574	; 0x1574 <__prologue_saves__+0x18>
    1054:	69 83       	std	Y+1, r22	; 0x01
    1056:	7a 83       	std	Y+2, r23	; 0x02
    1058:	8b 83       	std	Y+3, r24	; 0x03
    105a:	9c 83       	std	Y+4, r25	; 0x04
    105c:	2d 83       	std	Y+5, r18	; 0x05
    105e:	3e 83       	std	Y+6, r19	; 0x06
    1060:	4f 83       	std	Y+7, r20	; 0x07
    1062:	58 87       	std	Y+8, r21	; 0x08
    1064:	89 e0       	ldi	r24, 0x09	; 9
    1066:	e8 2e       	mov	r14, r24
    1068:	f1 2c       	mov	r15, r1
    106a:	ec 0e       	add	r14, r28
    106c:	fd 1e       	adc	r15, r29
    106e:	ce 01       	movw	r24, r28
    1070:	01 96       	adiw	r24, 0x01	; 1
    1072:	b7 01       	movw	r22, r14
    1074:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
    1078:	8e 01       	movw	r16, r28
    107a:	0f 5e       	subi	r16, 0xEF	; 239
    107c:	1f 4f       	sbci	r17, 0xFF	; 255
    107e:	ce 01       	movw	r24, r28
    1080:	05 96       	adiw	r24, 0x05	; 5
    1082:	b8 01       	movw	r22, r16
    1084:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
    1088:	89 85       	ldd	r24, Y+9	; 0x09
    108a:	82 30       	cpi	r24, 0x02	; 2
    108c:	40 f0       	brcs	.+16     	; 0x109e <__gtsf2+0x56>
    108e:	89 89       	ldd	r24, Y+17	; 0x11
    1090:	82 30       	cpi	r24, 0x02	; 2
    1092:	28 f0       	brcs	.+10     	; 0x109e <__gtsf2+0x56>
    1094:	c7 01       	movw	r24, r14
    1096:	b8 01       	movw	r22, r16
    1098:	0e 94 55 0a 	call	0x14aa	; 0x14aa <__fpcmp_parts_f>
    109c:	01 c0       	rjmp	.+2      	; 0x10a0 <__gtsf2+0x58>
    109e:	8f ef       	ldi	r24, 0xFF	; 255
    10a0:	68 96       	adiw	r28, 0x18	; 24
    10a2:	e6 e0       	ldi	r30, 0x06	; 6
    10a4:	0c 94 d6 0a 	jmp	0x15ac	; 0x15ac <__epilogue_restores__+0x18>

000010a8 <__gesf2>:
    10a8:	a8 e1       	ldi	r26, 0x18	; 24
    10aa:	b0 e0       	ldi	r27, 0x00	; 0
    10ac:	ea e5       	ldi	r30, 0x5A	; 90
    10ae:	f8 e0       	ldi	r31, 0x08	; 8
    10b0:	0c 94 ba 0a 	jmp	0x1574	; 0x1574 <__prologue_saves__+0x18>
    10b4:	69 83       	std	Y+1, r22	; 0x01
    10b6:	7a 83       	std	Y+2, r23	; 0x02
    10b8:	8b 83       	std	Y+3, r24	; 0x03
    10ba:	9c 83       	std	Y+4, r25	; 0x04
    10bc:	2d 83       	std	Y+5, r18	; 0x05
    10be:	3e 83       	std	Y+6, r19	; 0x06
    10c0:	4f 83       	std	Y+7, r20	; 0x07
    10c2:	58 87       	std	Y+8, r21	; 0x08
    10c4:	89 e0       	ldi	r24, 0x09	; 9
    10c6:	e8 2e       	mov	r14, r24
    10c8:	f1 2c       	mov	r15, r1
    10ca:	ec 0e       	add	r14, r28
    10cc:	fd 1e       	adc	r15, r29
    10ce:	ce 01       	movw	r24, r28
    10d0:	01 96       	adiw	r24, 0x01	; 1
    10d2:	b7 01       	movw	r22, r14
    10d4:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
    10d8:	8e 01       	movw	r16, r28
    10da:	0f 5e       	subi	r16, 0xEF	; 239
    10dc:	1f 4f       	sbci	r17, 0xFF	; 255
    10de:	ce 01       	movw	r24, r28
    10e0:	05 96       	adiw	r24, 0x05	; 5
    10e2:	b8 01       	movw	r22, r16
    10e4:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
    10e8:	89 85       	ldd	r24, Y+9	; 0x09
    10ea:	82 30       	cpi	r24, 0x02	; 2
    10ec:	40 f0       	brcs	.+16     	; 0x10fe <__gesf2+0x56>
    10ee:	89 89       	ldd	r24, Y+17	; 0x11
    10f0:	82 30       	cpi	r24, 0x02	; 2
    10f2:	28 f0       	brcs	.+10     	; 0x10fe <__gesf2+0x56>
    10f4:	c7 01       	movw	r24, r14
    10f6:	b8 01       	movw	r22, r16
    10f8:	0e 94 55 0a 	call	0x14aa	; 0x14aa <__fpcmp_parts_f>
    10fc:	01 c0       	rjmp	.+2      	; 0x1100 <__gesf2+0x58>
    10fe:	8f ef       	ldi	r24, 0xFF	; 255
    1100:	68 96       	adiw	r28, 0x18	; 24
    1102:	e6 e0       	ldi	r30, 0x06	; 6
    1104:	0c 94 d6 0a 	jmp	0x15ac	; 0x15ac <__epilogue_restores__+0x18>

00001108 <__ltsf2>:
    1108:	a8 e1       	ldi	r26, 0x18	; 24
    110a:	b0 e0       	ldi	r27, 0x00	; 0
    110c:	ea e8       	ldi	r30, 0x8A	; 138
    110e:	f8 e0       	ldi	r31, 0x08	; 8
    1110:	0c 94 ba 0a 	jmp	0x1574	; 0x1574 <__prologue_saves__+0x18>
    1114:	69 83       	std	Y+1, r22	; 0x01
    1116:	7a 83       	std	Y+2, r23	; 0x02
    1118:	8b 83       	std	Y+3, r24	; 0x03
    111a:	9c 83       	std	Y+4, r25	; 0x04
    111c:	2d 83       	std	Y+5, r18	; 0x05
    111e:	3e 83       	std	Y+6, r19	; 0x06
    1120:	4f 83       	std	Y+7, r20	; 0x07
    1122:	58 87       	std	Y+8, r21	; 0x08
    1124:	89 e0       	ldi	r24, 0x09	; 9
    1126:	e8 2e       	mov	r14, r24
    1128:	f1 2c       	mov	r15, r1
    112a:	ec 0e       	add	r14, r28
    112c:	fd 1e       	adc	r15, r29
    112e:	ce 01       	movw	r24, r28
    1130:	01 96       	adiw	r24, 0x01	; 1
    1132:	b7 01       	movw	r22, r14
    1134:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
    1138:	8e 01       	movw	r16, r28
    113a:	0f 5e       	subi	r16, 0xEF	; 239
    113c:	1f 4f       	sbci	r17, 0xFF	; 255
    113e:	ce 01       	movw	r24, r28
    1140:	05 96       	adiw	r24, 0x05	; 5
    1142:	b8 01       	movw	r22, r16
    1144:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
    1148:	89 85       	ldd	r24, Y+9	; 0x09
    114a:	82 30       	cpi	r24, 0x02	; 2
    114c:	40 f0       	brcs	.+16     	; 0x115e <__ltsf2+0x56>
    114e:	89 89       	ldd	r24, Y+17	; 0x11
    1150:	82 30       	cpi	r24, 0x02	; 2
    1152:	28 f0       	brcs	.+10     	; 0x115e <__ltsf2+0x56>
    1154:	c7 01       	movw	r24, r14
    1156:	b8 01       	movw	r22, r16
    1158:	0e 94 55 0a 	call	0x14aa	; 0x14aa <__fpcmp_parts_f>
    115c:	01 c0       	rjmp	.+2      	; 0x1160 <__ltsf2+0x58>
    115e:	81 e0       	ldi	r24, 0x01	; 1
    1160:	68 96       	adiw	r28, 0x18	; 24
    1162:	e6 e0       	ldi	r30, 0x06	; 6
    1164:	0c 94 d6 0a 	jmp	0x15ac	; 0x15ac <__epilogue_restores__+0x18>

00001168 <__fixsfsi>:
    1168:	ac e0       	ldi	r26, 0x0C	; 12
    116a:	b0 e0       	ldi	r27, 0x00	; 0
    116c:	ea eb       	ldi	r30, 0xBA	; 186
    116e:	f8 e0       	ldi	r31, 0x08	; 8
    1170:	0c 94 be 0a 	jmp	0x157c	; 0x157c <__prologue_saves__+0x20>
    1174:	69 83       	std	Y+1, r22	; 0x01
    1176:	7a 83       	std	Y+2, r23	; 0x02
    1178:	8b 83       	std	Y+3, r24	; 0x03
    117a:	9c 83       	std	Y+4, r25	; 0x04
    117c:	ce 01       	movw	r24, r28
    117e:	01 96       	adiw	r24, 0x01	; 1
    1180:	be 01       	movw	r22, r28
    1182:	6b 5f       	subi	r22, 0xFB	; 251
    1184:	7f 4f       	sbci	r23, 0xFF	; 255
    1186:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__unpack_f>
    118a:	8d 81       	ldd	r24, Y+5	; 0x05
    118c:	82 30       	cpi	r24, 0x02	; 2
    118e:	61 f1       	breq	.+88     	; 0x11e8 <__fixsfsi+0x80>
    1190:	82 30       	cpi	r24, 0x02	; 2
    1192:	50 f1       	brcs	.+84     	; 0x11e8 <__fixsfsi+0x80>
    1194:	84 30       	cpi	r24, 0x04	; 4
    1196:	21 f4       	brne	.+8      	; 0x11a0 <__fixsfsi+0x38>
    1198:	8e 81       	ldd	r24, Y+6	; 0x06
    119a:	88 23       	and	r24, r24
    119c:	51 f1       	breq	.+84     	; 0x11f2 <__fixsfsi+0x8a>
    119e:	2e c0       	rjmp	.+92     	; 0x11fc <__fixsfsi+0x94>
    11a0:	2f 81       	ldd	r18, Y+7	; 0x07
    11a2:	38 85       	ldd	r19, Y+8	; 0x08
    11a4:	37 fd       	sbrc	r19, 7
    11a6:	20 c0       	rjmp	.+64     	; 0x11e8 <__fixsfsi+0x80>
    11a8:	6e 81       	ldd	r22, Y+6	; 0x06
    11aa:	2f 31       	cpi	r18, 0x1F	; 31
    11ac:	31 05       	cpc	r19, r1
    11ae:	1c f0       	brlt	.+6      	; 0x11b6 <__fixsfsi+0x4e>
    11b0:	66 23       	and	r22, r22
    11b2:	f9 f0       	breq	.+62     	; 0x11f2 <__fixsfsi+0x8a>
    11b4:	23 c0       	rjmp	.+70     	; 0x11fc <__fixsfsi+0x94>
    11b6:	8e e1       	ldi	r24, 0x1E	; 30
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	82 1b       	sub	r24, r18
    11bc:	93 0b       	sbc	r25, r19
    11be:	29 85       	ldd	r18, Y+9	; 0x09
    11c0:	3a 85       	ldd	r19, Y+10	; 0x0a
    11c2:	4b 85       	ldd	r20, Y+11	; 0x0b
    11c4:	5c 85       	ldd	r21, Y+12	; 0x0c
    11c6:	04 c0       	rjmp	.+8      	; 0x11d0 <__fixsfsi+0x68>
    11c8:	56 95       	lsr	r21
    11ca:	47 95       	ror	r20
    11cc:	37 95       	ror	r19
    11ce:	27 95       	ror	r18
    11d0:	8a 95       	dec	r24
    11d2:	d2 f7       	brpl	.-12     	; 0x11c8 <__fixsfsi+0x60>
    11d4:	66 23       	and	r22, r22
    11d6:	b1 f0       	breq	.+44     	; 0x1204 <__fixsfsi+0x9c>
    11d8:	50 95       	com	r21
    11da:	40 95       	com	r20
    11dc:	30 95       	com	r19
    11de:	21 95       	neg	r18
    11e0:	3f 4f       	sbci	r19, 0xFF	; 255
    11e2:	4f 4f       	sbci	r20, 0xFF	; 255
    11e4:	5f 4f       	sbci	r21, 0xFF	; 255
    11e6:	0e c0       	rjmp	.+28     	; 0x1204 <__fixsfsi+0x9c>
    11e8:	20 e0       	ldi	r18, 0x00	; 0
    11ea:	30 e0       	ldi	r19, 0x00	; 0
    11ec:	40 e0       	ldi	r20, 0x00	; 0
    11ee:	50 e0       	ldi	r21, 0x00	; 0
    11f0:	09 c0       	rjmp	.+18     	; 0x1204 <__fixsfsi+0x9c>
    11f2:	2f ef       	ldi	r18, 0xFF	; 255
    11f4:	3f ef       	ldi	r19, 0xFF	; 255
    11f6:	4f ef       	ldi	r20, 0xFF	; 255
    11f8:	5f e7       	ldi	r21, 0x7F	; 127
    11fa:	04 c0       	rjmp	.+8      	; 0x1204 <__fixsfsi+0x9c>
    11fc:	20 e0       	ldi	r18, 0x00	; 0
    11fe:	30 e0       	ldi	r19, 0x00	; 0
    1200:	40 e0       	ldi	r20, 0x00	; 0
    1202:	50 e8       	ldi	r21, 0x80	; 128
    1204:	b9 01       	movw	r22, r18
    1206:	ca 01       	movw	r24, r20
    1208:	2c 96       	adiw	r28, 0x0c	; 12
    120a:	e2 e0       	ldi	r30, 0x02	; 2
    120c:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__epilogue_restores__+0x20>

00001210 <__pack_f>:
    1210:	df 92       	push	r13
    1212:	ef 92       	push	r14
    1214:	ff 92       	push	r15
    1216:	0f 93       	push	r16
    1218:	1f 93       	push	r17
    121a:	fc 01       	movw	r30, r24
    121c:	e4 80       	ldd	r14, Z+4	; 0x04
    121e:	f5 80       	ldd	r15, Z+5	; 0x05
    1220:	06 81       	ldd	r16, Z+6	; 0x06
    1222:	17 81       	ldd	r17, Z+7	; 0x07
    1224:	d1 80       	ldd	r13, Z+1	; 0x01
    1226:	80 81       	ld	r24, Z
    1228:	82 30       	cpi	r24, 0x02	; 2
    122a:	48 f4       	brcc	.+18     	; 0x123e <__pack_f+0x2e>
    122c:	80 e0       	ldi	r24, 0x00	; 0
    122e:	90 e0       	ldi	r25, 0x00	; 0
    1230:	a0 e1       	ldi	r26, 0x10	; 16
    1232:	b0 e0       	ldi	r27, 0x00	; 0
    1234:	e8 2a       	or	r14, r24
    1236:	f9 2a       	or	r15, r25
    1238:	0a 2b       	or	r16, r26
    123a:	1b 2b       	or	r17, r27
    123c:	a5 c0       	rjmp	.+330    	; 0x1388 <__pack_f+0x178>
    123e:	84 30       	cpi	r24, 0x04	; 4
    1240:	09 f4       	brne	.+2      	; 0x1244 <__pack_f+0x34>
    1242:	9f c0       	rjmp	.+318    	; 0x1382 <__pack_f+0x172>
    1244:	82 30       	cpi	r24, 0x02	; 2
    1246:	21 f4       	brne	.+8      	; 0x1250 <__pack_f+0x40>
    1248:	ee 24       	eor	r14, r14
    124a:	ff 24       	eor	r15, r15
    124c:	87 01       	movw	r16, r14
    124e:	05 c0       	rjmp	.+10     	; 0x125a <__pack_f+0x4a>
    1250:	e1 14       	cp	r14, r1
    1252:	f1 04       	cpc	r15, r1
    1254:	01 05       	cpc	r16, r1
    1256:	11 05       	cpc	r17, r1
    1258:	19 f4       	brne	.+6      	; 0x1260 <__pack_f+0x50>
    125a:	e0 e0       	ldi	r30, 0x00	; 0
    125c:	f0 e0       	ldi	r31, 0x00	; 0
    125e:	96 c0       	rjmp	.+300    	; 0x138c <__pack_f+0x17c>
    1260:	62 81       	ldd	r22, Z+2	; 0x02
    1262:	73 81       	ldd	r23, Z+3	; 0x03
    1264:	9f ef       	ldi	r25, 0xFF	; 255
    1266:	62 38       	cpi	r22, 0x82	; 130
    1268:	79 07       	cpc	r23, r25
    126a:	0c f0       	brlt	.+2      	; 0x126e <__pack_f+0x5e>
    126c:	5b c0       	rjmp	.+182    	; 0x1324 <__pack_f+0x114>
    126e:	22 e8       	ldi	r18, 0x82	; 130
    1270:	3f ef       	ldi	r19, 0xFF	; 255
    1272:	26 1b       	sub	r18, r22
    1274:	37 0b       	sbc	r19, r23
    1276:	2a 31       	cpi	r18, 0x1A	; 26
    1278:	31 05       	cpc	r19, r1
    127a:	2c f0       	brlt	.+10     	; 0x1286 <__pack_f+0x76>
    127c:	20 e0       	ldi	r18, 0x00	; 0
    127e:	30 e0       	ldi	r19, 0x00	; 0
    1280:	40 e0       	ldi	r20, 0x00	; 0
    1282:	50 e0       	ldi	r21, 0x00	; 0
    1284:	2a c0       	rjmp	.+84     	; 0x12da <__pack_f+0xca>
    1286:	b8 01       	movw	r22, r16
    1288:	a7 01       	movw	r20, r14
    128a:	02 2e       	mov	r0, r18
    128c:	04 c0       	rjmp	.+8      	; 0x1296 <__pack_f+0x86>
    128e:	76 95       	lsr	r23
    1290:	67 95       	ror	r22
    1292:	57 95       	ror	r21
    1294:	47 95       	ror	r20
    1296:	0a 94       	dec	r0
    1298:	d2 f7       	brpl	.-12     	; 0x128e <__pack_f+0x7e>
    129a:	81 e0       	ldi	r24, 0x01	; 1
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	a0 e0       	ldi	r26, 0x00	; 0
    12a0:	b0 e0       	ldi	r27, 0x00	; 0
    12a2:	04 c0       	rjmp	.+8      	; 0x12ac <__pack_f+0x9c>
    12a4:	88 0f       	add	r24, r24
    12a6:	99 1f       	adc	r25, r25
    12a8:	aa 1f       	adc	r26, r26
    12aa:	bb 1f       	adc	r27, r27
    12ac:	2a 95       	dec	r18
    12ae:	d2 f7       	brpl	.-12     	; 0x12a4 <__pack_f+0x94>
    12b0:	01 97       	sbiw	r24, 0x01	; 1
    12b2:	a1 09       	sbc	r26, r1
    12b4:	b1 09       	sbc	r27, r1
    12b6:	8e 21       	and	r24, r14
    12b8:	9f 21       	and	r25, r15
    12ba:	a0 23       	and	r26, r16
    12bc:	b1 23       	and	r27, r17
    12be:	00 97       	sbiw	r24, 0x00	; 0
    12c0:	a1 05       	cpc	r26, r1
    12c2:	b1 05       	cpc	r27, r1
    12c4:	21 f0       	breq	.+8      	; 0x12ce <__pack_f+0xbe>
    12c6:	81 e0       	ldi	r24, 0x01	; 1
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	a0 e0       	ldi	r26, 0x00	; 0
    12cc:	b0 e0       	ldi	r27, 0x00	; 0
    12ce:	9a 01       	movw	r18, r20
    12d0:	ab 01       	movw	r20, r22
    12d2:	28 2b       	or	r18, r24
    12d4:	39 2b       	or	r19, r25
    12d6:	4a 2b       	or	r20, r26
    12d8:	5b 2b       	or	r21, r27
    12da:	da 01       	movw	r26, r20
    12dc:	c9 01       	movw	r24, r18
    12de:	8f 77       	andi	r24, 0x7F	; 127
    12e0:	90 70       	andi	r25, 0x00	; 0
    12e2:	a0 70       	andi	r26, 0x00	; 0
    12e4:	b0 70       	andi	r27, 0x00	; 0
    12e6:	80 34       	cpi	r24, 0x40	; 64
    12e8:	91 05       	cpc	r25, r1
    12ea:	a1 05       	cpc	r26, r1
    12ec:	b1 05       	cpc	r27, r1
    12ee:	39 f4       	brne	.+14     	; 0x12fe <__pack_f+0xee>
    12f0:	27 ff       	sbrs	r18, 7
    12f2:	09 c0       	rjmp	.+18     	; 0x1306 <__pack_f+0xf6>
    12f4:	20 5c       	subi	r18, 0xC0	; 192
    12f6:	3f 4f       	sbci	r19, 0xFF	; 255
    12f8:	4f 4f       	sbci	r20, 0xFF	; 255
    12fa:	5f 4f       	sbci	r21, 0xFF	; 255
    12fc:	04 c0       	rjmp	.+8      	; 0x1306 <__pack_f+0xf6>
    12fe:	21 5c       	subi	r18, 0xC1	; 193
    1300:	3f 4f       	sbci	r19, 0xFF	; 255
    1302:	4f 4f       	sbci	r20, 0xFF	; 255
    1304:	5f 4f       	sbci	r21, 0xFF	; 255
    1306:	e0 e0       	ldi	r30, 0x00	; 0
    1308:	f0 e0       	ldi	r31, 0x00	; 0
    130a:	20 30       	cpi	r18, 0x00	; 0
    130c:	a0 e0       	ldi	r26, 0x00	; 0
    130e:	3a 07       	cpc	r19, r26
    1310:	a0 e0       	ldi	r26, 0x00	; 0
    1312:	4a 07       	cpc	r20, r26
    1314:	a0 e4       	ldi	r26, 0x40	; 64
    1316:	5a 07       	cpc	r21, r26
    1318:	10 f0       	brcs	.+4      	; 0x131e <__pack_f+0x10e>
    131a:	e1 e0       	ldi	r30, 0x01	; 1
    131c:	f0 e0       	ldi	r31, 0x00	; 0
    131e:	79 01       	movw	r14, r18
    1320:	8a 01       	movw	r16, r20
    1322:	27 c0       	rjmp	.+78     	; 0x1372 <__pack_f+0x162>
    1324:	60 38       	cpi	r22, 0x80	; 128
    1326:	71 05       	cpc	r23, r1
    1328:	64 f5       	brge	.+88     	; 0x1382 <__pack_f+0x172>
    132a:	fb 01       	movw	r30, r22
    132c:	e1 58       	subi	r30, 0x81	; 129
    132e:	ff 4f       	sbci	r31, 0xFF	; 255
    1330:	d8 01       	movw	r26, r16
    1332:	c7 01       	movw	r24, r14
    1334:	8f 77       	andi	r24, 0x7F	; 127
    1336:	90 70       	andi	r25, 0x00	; 0
    1338:	a0 70       	andi	r26, 0x00	; 0
    133a:	b0 70       	andi	r27, 0x00	; 0
    133c:	80 34       	cpi	r24, 0x40	; 64
    133e:	91 05       	cpc	r25, r1
    1340:	a1 05       	cpc	r26, r1
    1342:	b1 05       	cpc	r27, r1
    1344:	39 f4       	brne	.+14     	; 0x1354 <__pack_f+0x144>
    1346:	e7 fe       	sbrs	r14, 7
    1348:	0d c0       	rjmp	.+26     	; 0x1364 <__pack_f+0x154>
    134a:	80 e4       	ldi	r24, 0x40	; 64
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	a0 e0       	ldi	r26, 0x00	; 0
    1350:	b0 e0       	ldi	r27, 0x00	; 0
    1352:	04 c0       	rjmp	.+8      	; 0x135c <__pack_f+0x14c>
    1354:	8f e3       	ldi	r24, 0x3F	; 63
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	a0 e0       	ldi	r26, 0x00	; 0
    135a:	b0 e0       	ldi	r27, 0x00	; 0
    135c:	e8 0e       	add	r14, r24
    135e:	f9 1e       	adc	r15, r25
    1360:	0a 1f       	adc	r16, r26
    1362:	1b 1f       	adc	r17, r27
    1364:	17 ff       	sbrs	r17, 7
    1366:	05 c0       	rjmp	.+10     	; 0x1372 <__pack_f+0x162>
    1368:	16 95       	lsr	r17
    136a:	07 95       	ror	r16
    136c:	f7 94       	ror	r15
    136e:	e7 94       	ror	r14
    1370:	31 96       	adiw	r30, 0x01	; 1
    1372:	87 e0       	ldi	r24, 0x07	; 7
    1374:	16 95       	lsr	r17
    1376:	07 95       	ror	r16
    1378:	f7 94       	ror	r15
    137a:	e7 94       	ror	r14
    137c:	8a 95       	dec	r24
    137e:	d1 f7       	brne	.-12     	; 0x1374 <__pack_f+0x164>
    1380:	05 c0       	rjmp	.+10     	; 0x138c <__pack_f+0x17c>
    1382:	ee 24       	eor	r14, r14
    1384:	ff 24       	eor	r15, r15
    1386:	87 01       	movw	r16, r14
    1388:	ef ef       	ldi	r30, 0xFF	; 255
    138a:	f0 e0       	ldi	r31, 0x00	; 0
    138c:	6e 2f       	mov	r22, r30
    138e:	67 95       	ror	r22
    1390:	66 27       	eor	r22, r22
    1392:	67 95       	ror	r22
    1394:	90 2f       	mov	r25, r16
    1396:	9f 77       	andi	r25, 0x7F	; 127
    1398:	d7 94       	ror	r13
    139a:	dd 24       	eor	r13, r13
    139c:	d7 94       	ror	r13
    139e:	8e 2f       	mov	r24, r30
    13a0:	86 95       	lsr	r24
    13a2:	49 2f       	mov	r20, r25
    13a4:	46 2b       	or	r20, r22
    13a6:	58 2f       	mov	r21, r24
    13a8:	5d 29       	or	r21, r13
    13aa:	b7 01       	movw	r22, r14
    13ac:	ca 01       	movw	r24, r20
    13ae:	1f 91       	pop	r17
    13b0:	0f 91       	pop	r16
    13b2:	ff 90       	pop	r15
    13b4:	ef 90       	pop	r14
    13b6:	df 90       	pop	r13
    13b8:	08 95       	ret

000013ba <__unpack_f>:
    13ba:	fc 01       	movw	r30, r24
    13bc:	db 01       	movw	r26, r22
    13be:	40 81       	ld	r20, Z
    13c0:	51 81       	ldd	r21, Z+1	; 0x01
    13c2:	22 81       	ldd	r18, Z+2	; 0x02
    13c4:	62 2f       	mov	r22, r18
    13c6:	6f 77       	andi	r22, 0x7F	; 127
    13c8:	70 e0       	ldi	r23, 0x00	; 0
    13ca:	22 1f       	adc	r18, r18
    13cc:	22 27       	eor	r18, r18
    13ce:	22 1f       	adc	r18, r18
    13d0:	93 81       	ldd	r25, Z+3	; 0x03
    13d2:	89 2f       	mov	r24, r25
    13d4:	88 0f       	add	r24, r24
    13d6:	82 2b       	or	r24, r18
    13d8:	28 2f       	mov	r18, r24
    13da:	30 e0       	ldi	r19, 0x00	; 0
    13dc:	99 1f       	adc	r25, r25
    13de:	99 27       	eor	r25, r25
    13e0:	99 1f       	adc	r25, r25
    13e2:	11 96       	adiw	r26, 0x01	; 1
    13e4:	9c 93       	st	X, r25
    13e6:	11 97       	sbiw	r26, 0x01	; 1
    13e8:	21 15       	cp	r18, r1
    13ea:	31 05       	cpc	r19, r1
    13ec:	a9 f5       	brne	.+106    	; 0x1458 <__unpack_f+0x9e>
    13ee:	41 15       	cp	r20, r1
    13f0:	51 05       	cpc	r21, r1
    13f2:	61 05       	cpc	r22, r1
    13f4:	71 05       	cpc	r23, r1
    13f6:	11 f4       	brne	.+4      	; 0x13fc <__unpack_f+0x42>
    13f8:	82 e0       	ldi	r24, 0x02	; 2
    13fa:	37 c0       	rjmp	.+110    	; 0x146a <__unpack_f+0xb0>
    13fc:	82 e8       	ldi	r24, 0x82	; 130
    13fe:	9f ef       	ldi	r25, 0xFF	; 255
    1400:	13 96       	adiw	r26, 0x03	; 3
    1402:	9c 93       	st	X, r25
    1404:	8e 93       	st	-X, r24
    1406:	12 97       	sbiw	r26, 0x02	; 2
    1408:	9a 01       	movw	r18, r20
    140a:	ab 01       	movw	r20, r22
    140c:	67 e0       	ldi	r22, 0x07	; 7
    140e:	22 0f       	add	r18, r18
    1410:	33 1f       	adc	r19, r19
    1412:	44 1f       	adc	r20, r20
    1414:	55 1f       	adc	r21, r21
    1416:	6a 95       	dec	r22
    1418:	d1 f7       	brne	.-12     	; 0x140e <__unpack_f+0x54>
    141a:	83 e0       	ldi	r24, 0x03	; 3
    141c:	8c 93       	st	X, r24
    141e:	0d c0       	rjmp	.+26     	; 0x143a <__unpack_f+0x80>
    1420:	22 0f       	add	r18, r18
    1422:	33 1f       	adc	r19, r19
    1424:	44 1f       	adc	r20, r20
    1426:	55 1f       	adc	r21, r21
    1428:	12 96       	adiw	r26, 0x02	; 2
    142a:	8d 91       	ld	r24, X+
    142c:	9c 91       	ld	r25, X
    142e:	13 97       	sbiw	r26, 0x03	; 3
    1430:	01 97       	sbiw	r24, 0x01	; 1
    1432:	13 96       	adiw	r26, 0x03	; 3
    1434:	9c 93       	st	X, r25
    1436:	8e 93       	st	-X, r24
    1438:	12 97       	sbiw	r26, 0x02	; 2
    143a:	20 30       	cpi	r18, 0x00	; 0
    143c:	80 e0       	ldi	r24, 0x00	; 0
    143e:	38 07       	cpc	r19, r24
    1440:	80 e0       	ldi	r24, 0x00	; 0
    1442:	48 07       	cpc	r20, r24
    1444:	80 e4       	ldi	r24, 0x40	; 64
    1446:	58 07       	cpc	r21, r24
    1448:	58 f3       	brcs	.-42     	; 0x1420 <__unpack_f+0x66>
    144a:	14 96       	adiw	r26, 0x04	; 4
    144c:	2d 93       	st	X+, r18
    144e:	3d 93       	st	X+, r19
    1450:	4d 93       	st	X+, r20
    1452:	5c 93       	st	X, r21
    1454:	17 97       	sbiw	r26, 0x07	; 7
    1456:	08 95       	ret
    1458:	2f 3f       	cpi	r18, 0xFF	; 255
    145a:	31 05       	cpc	r19, r1
    145c:	79 f4       	brne	.+30     	; 0x147c <__unpack_f+0xc2>
    145e:	41 15       	cp	r20, r1
    1460:	51 05       	cpc	r21, r1
    1462:	61 05       	cpc	r22, r1
    1464:	71 05       	cpc	r23, r1
    1466:	19 f4       	brne	.+6      	; 0x146e <__unpack_f+0xb4>
    1468:	84 e0       	ldi	r24, 0x04	; 4
    146a:	8c 93       	st	X, r24
    146c:	08 95       	ret
    146e:	64 ff       	sbrs	r22, 4
    1470:	03 c0       	rjmp	.+6      	; 0x1478 <__unpack_f+0xbe>
    1472:	81 e0       	ldi	r24, 0x01	; 1
    1474:	8c 93       	st	X, r24
    1476:	12 c0       	rjmp	.+36     	; 0x149c <__unpack_f+0xe2>
    1478:	1c 92       	st	X, r1
    147a:	10 c0       	rjmp	.+32     	; 0x149c <__unpack_f+0xe2>
    147c:	2f 57       	subi	r18, 0x7F	; 127
    147e:	30 40       	sbci	r19, 0x00	; 0
    1480:	13 96       	adiw	r26, 0x03	; 3
    1482:	3c 93       	st	X, r19
    1484:	2e 93       	st	-X, r18
    1486:	12 97       	sbiw	r26, 0x02	; 2
    1488:	83 e0       	ldi	r24, 0x03	; 3
    148a:	8c 93       	st	X, r24
    148c:	87 e0       	ldi	r24, 0x07	; 7
    148e:	44 0f       	add	r20, r20
    1490:	55 1f       	adc	r21, r21
    1492:	66 1f       	adc	r22, r22
    1494:	77 1f       	adc	r23, r23
    1496:	8a 95       	dec	r24
    1498:	d1 f7       	brne	.-12     	; 0x148e <__unpack_f+0xd4>
    149a:	70 64       	ori	r23, 0x40	; 64
    149c:	14 96       	adiw	r26, 0x04	; 4
    149e:	4d 93       	st	X+, r20
    14a0:	5d 93       	st	X+, r21
    14a2:	6d 93       	st	X+, r22
    14a4:	7c 93       	st	X, r23
    14a6:	17 97       	sbiw	r26, 0x07	; 7
    14a8:	08 95       	ret

000014aa <__fpcmp_parts_f>:
    14aa:	1f 93       	push	r17
    14ac:	dc 01       	movw	r26, r24
    14ae:	fb 01       	movw	r30, r22
    14b0:	9c 91       	ld	r25, X
    14b2:	92 30       	cpi	r25, 0x02	; 2
    14b4:	08 f4       	brcc	.+2      	; 0x14b8 <__fpcmp_parts_f+0xe>
    14b6:	47 c0       	rjmp	.+142    	; 0x1546 <__fpcmp_parts_f+0x9c>
    14b8:	80 81       	ld	r24, Z
    14ba:	82 30       	cpi	r24, 0x02	; 2
    14bc:	08 f4       	brcc	.+2      	; 0x14c0 <__fpcmp_parts_f+0x16>
    14be:	43 c0       	rjmp	.+134    	; 0x1546 <__fpcmp_parts_f+0x9c>
    14c0:	94 30       	cpi	r25, 0x04	; 4
    14c2:	51 f4       	brne	.+20     	; 0x14d8 <__fpcmp_parts_f+0x2e>
    14c4:	11 96       	adiw	r26, 0x01	; 1
    14c6:	1c 91       	ld	r17, X
    14c8:	84 30       	cpi	r24, 0x04	; 4
    14ca:	99 f5       	brne	.+102    	; 0x1532 <__fpcmp_parts_f+0x88>
    14cc:	81 81       	ldd	r24, Z+1	; 0x01
    14ce:	68 2f       	mov	r22, r24
    14d0:	70 e0       	ldi	r23, 0x00	; 0
    14d2:	61 1b       	sub	r22, r17
    14d4:	71 09       	sbc	r23, r1
    14d6:	3f c0       	rjmp	.+126    	; 0x1556 <__fpcmp_parts_f+0xac>
    14d8:	84 30       	cpi	r24, 0x04	; 4
    14da:	21 f0       	breq	.+8      	; 0x14e4 <__fpcmp_parts_f+0x3a>
    14dc:	92 30       	cpi	r25, 0x02	; 2
    14de:	31 f4       	brne	.+12     	; 0x14ec <__fpcmp_parts_f+0x42>
    14e0:	82 30       	cpi	r24, 0x02	; 2
    14e2:	b9 f1       	breq	.+110    	; 0x1552 <__fpcmp_parts_f+0xa8>
    14e4:	81 81       	ldd	r24, Z+1	; 0x01
    14e6:	88 23       	and	r24, r24
    14e8:	89 f1       	breq	.+98     	; 0x154c <__fpcmp_parts_f+0xa2>
    14ea:	2d c0       	rjmp	.+90     	; 0x1546 <__fpcmp_parts_f+0x9c>
    14ec:	11 96       	adiw	r26, 0x01	; 1
    14ee:	1c 91       	ld	r17, X
    14f0:	11 97       	sbiw	r26, 0x01	; 1
    14f2:	82 30       	cpi	r24, 0x02	; 2
    14f4:	f1 f0       	breq	.+60     	; 0x1532 <__fpcmp_parts_f+0x88>
    14f6:	81 81       	ldd	r24, Z+1	; 0x01
    14f8:	18 17       	cp	r17, r24
    14fa:	d9 f4       	brne	.+54     	; 0x1532 <__fpcmp_parts_f+0x88>
    14fc:	12 96       	adiw	r26, 0x02	; 2
    14fe:	2d 91       	ld	r18, X+
    1500:	3c 91       	ld	r19, X
    1502:	13 97       	sbiw	r26, 0x03	; 3
    1504:	82 81       	ldd	r24, Z+2	; 0x02
    1506:	93 81       	ldd	r25, Z+3	; 0x03
    1508:	82 17       	cp	r24, r18
    150a:	93 07       	cpc	r25, r19
    150c:	94 f0       	brlt	.+36     	; 0x1532 <__fpcmp_parts_f+0x88>
    150e:	28 17       	cp	r18, r24
    1510:	39 07       	cpc	r19, r25
    1512:	bc f0       	brlt	.+46     	; 0x1542 <__fpcmp_parts_f+0x98>
    1514:	14 96       	adiw	r26, 0x04	; 4
    1516:	8d 91       	ld	r24, X+
    1518:	9d 91       	ld	r25, X+
    151a:	0d 90       	ld	r0, X+
    151c:	bc 91       	ld	r27, X
    151e:	a0 2d       	mov	r26, r0
    1520:	24 81       	ldd	r18, Z+4	; 0x04
    1522:	35 81       	ldd	r19, Z+5	; 0x05
    1524:	46 81       	ldd	r20, Z+6	; 0x06
    1526:	57 81       	ldd	r21, Z+7	; 0x07
    1528:	28 17       	cp	r18, r24
    152a:	39 07       	cpc	r19, r25
    152c:	4a 07       	cpc	r20, r26
    152e:	5b 07       	cpc	r21, r27
    1530:	18 f4       	brcc	.+6      	; 0x1538 <__fpcmp_parts_f+0x8e>
    1532:	11 23       	and	r17, r17
    1534:	41 f0       	breq	.+16     	; 0x1546 <__fpcmp_parts_f+0x9c>
    1536:	0a c0       	rjmp	.+20     	; 0x154c <__fpcmp_parts_f+0xa2>
    1538:	82 17       	cp	r24, r18
    153a:	93 07       	cpc	r25, r19
    153c:	a4 07       	cpc	r26, r20
    153e:	b5 07       	cpc	r27, r21
    1540:	40 f4       	brcc	.+16     	; 0x1552 <__fpcmp_parts_f+0xa8>
    1542:	11 23       	and	r17, r17
    1544:	19 f0       	breq	.+6      	; 0x154c <__fpcmp_parts_f+0xa2>
    1546:	61 e0       	ldi	r22, 0x01	; 1
    1548:	70 e0       	ldi	r23, 0x00	; 0
    154a:	05 c0       	rjmp	.+10     	; 0x1556 <__fpcmp_parts_f+0xac>
    154c:	6f ef       	ldi	r22, 0xFF	; 255
    154e:	7f ef       	ldi	r23, 0xFF	; 255
    1550:	02 c0       	rjmp	.+4      	; 0x1556 <__fpcmp_parts_f+0xac>
    1552:	60 e0       	ldi	r22, 0x00	; 0
    1554:	70 e0       	ldi	r23, 0x00	; 0
    1556:	cb 01       	movw	r24, r22
    1558:	1f 91       	pop	r17
    155a:	08 95       	ret

0000155c <__prologue_saves__>:
    155c:	2f 92       	push	r2
    155e:	3f 92       	push	r3
    1560:	4f 92       	push	r4
    1562:	5f 92       	push	r5
    1564:	6f 92       	push	r6
    1566:	7f 92       	push	r7
    1568:	8f 92       	push	r8
    156a:	9f 92       	push	r9
    156c:	af 92       	push	r10
    156e:	bf 92       	push	r11
    1570:	cf 92       	push	r12
    1572:	df 92       	push	r13
    1574:	ef 92       	push	r14
    1576:	ff 92       	push	r15
    1578:	0f 93       	push	r16
    157a:	1f 93       	push	r17
    157c:	cf 93       	push	r28
    157e:	df 93       	push	r29
    1580:	cd b7       	in	r28, 0x3d	; 61
    1582:	de b7       	in	r29, 0x3e	; 62
    1584:	ca 1b       	sub	r28, r26
    1586:	db 0b       	sbc	r29, r27
    1588:	0f b6       	in	r0, 0x3f	; 63
    158a:	f8 94       	cli
    158c:	de bf       	out	0x3e, r29	; 62
    158e:	0f be       	out	0x3f, r0	; 63
    1590:	cd bf       	out	0x3d, r28	; 61
    1592:	09 94       	ijmp

00001594 <__epilogue_restores__>:
    1594:	2a 88       	ldd	r2, Y+18	; 0x12
    1596:	39 88       	ldd	r3, Y+17	; 0x11
    1598:	48 88       	ldd	r4, Y+16	; 0x10
    159a:	5f 84       	ldd	r5, Y+15	; 0x0f
    159c:	6e 84       	ldd	r6, Y+14	; 0x0e
    159e:	7d 84       	ldd	r7, Y+13	; 0x0d
    15a0:	8c 84       	ldd	r8, Y+12	; 0x0c
    15a2:	9b 84       	ldd	r9, Y+11	; 0x0b
    15a4:	aa 84       	ldd	r10, Y+10	; 0x0a
    15a6:	b9 84       	ldd	r11, Y+9	; 0x09
    15a8:	c8 84       	ldd	r12, Y+8	; 0x08
    15aa:	df 80       	ldd	r13, Y+7	; 0x07
    15ac:	ee 80       	ldd	r14, Y+6	; 0x06
    15ae:	fd 80       	ldd	r15, Y+5	; 0x05
    15b0:	0c 81       	ldd	r16, Y+4	; 0x04
    15b2:	1b 81       	ldd	r17, Y+3	; 0x03
    15b4:	aa 81       	ldd	r26, Y+2	; 0x02
    15b6:	b9 81       	ldd	r27, Y+1	; 0x01
    15b8:	ce 0f       	add	r28, r30
    15ba:	d1 1d       	adc	r29, r1
    15bc:	0f b6       	in	r0, 0x3f	; 63
    15be:	f8 94       	cli
    15c0:	de bf       	out	0x3e, r29	; 62
    15c2:	0f be       	out	0x3f, r0	; 63
    15c4:	cd bf       	out	0x3d, r28	; 61
    15c6:	ed 01       	movw	r28, r26
    15c8:	08 95       	ret

000015ca <itoa>:
    15ca:	e6 2f       	mov	r30, r22
    15cc:	f7 2f       	mov	r31, r23
    15ce:	2e 2f       	mov	r18, r30
    15d0:	3f 2f       	mov	r19, r31
    15d2:	e8 94       	clt
    15d4:	42 30       	cpi	r20, 0x02	; 2
    15d6:	c4 f0       	brlt	.+48     	; 0x1608 <itoa+0x3e>
    15d8:	45 32       	cpi	r20, 0x25	; 37
    15da:	b4 f4       	brge	.+44     	; 0x1608 <itoa+0x3e>
    15dc:	4a 30       	cpi	r20, 0x0A	; 10
    15de:	29 f4       	brne	.+10     	; 0x15ea <itoa+0x20>
    15e0:	97 fb       	bst	r25, 7
    15e2:	1e f4       	brtc	.+6      	; 0x15ea <itoa+0x20>
    15e4:	90 95       	com	r25
    15e6:	81 95       	neg	r24
    15e8:	9f 4f       	sbci	r25, 0xFF	; 255
    15ea:	64 2f       	mov	r22, r20
    15ec:	77 27       	eor	r23, r23
    15ee:	22 d0       	rcall	.+68     	; 0x1634 <__udivmodhi4>
    15f0:	80 5d       	subi	r24, 0xD0	; 208
    15f2:	8a 33       	cpi	r24, 0x3A	; 58
    15f4:	0c f0       	brlt	.+2      	; 0x15f8 <itoa+0x2e>
    15f6:	89 5d       	subi	r24, 0xD9	; 217
    15f8:	81 93       	st	Z+, r24
    15fa:	86 2f       	mov	r24, r22
    15fc:	97 2f       	mov	r25, r23
    15fe:	00 97       	sbiw	r24, 0x00	; 0
    1600:	a1 f7       	brne	.-24     	; 0x15ea <itoa+0x20>
    1602:	16 f4       	brtc	.+4      	; 0x1608 <itoa+0x3e>
    1604:	5d e2       	ldi	r21, 0x2D	; 45
    1606:	51 93       	st	Z+, r21
    1608:	10 82       	st	Z, r1
    160a:	82 2f       	mov	r24, r18
    160c:	93 2f       	mov	r25, r19
    160e:	00 c0       	rjmp	.+0      	; 0x1610 <strrev>

00001610 <strrev>:
    1610:	a8 2f       	mov	r26, r24
    1612:	b9 2f       	mov	r27, r25
    1614:	e8 2f       	mov	r30, r24
    1616:	f9 2f       	mov	r31, r25
    1618:	67 2f       	mov	r22, r23
    161a:	71 91       	ld	r23, Z+
    161c:	77 23       	and	r23, r23
    161e:	e1 f7       	brne	.-8      	; 0x1618 <strrev+0x8>
    1620:	32 97       	sbiw	r30, 0x02	; 2
    1622:	04 c0       	rjmp	.+8      	; 0x162c <strrev+0x1c>
    1624:	7c 91       	ld	r23, X
    1626:	6d 93       	st	X+, r22
    1628:	70 83       	st	Z, r23
    162a:	62 91       	ld	r22, -Z
    162c:	ae 17       	cp	r26, r30
    162e:	bf 07       	cpc	r27, r31
    1630:	c8 f3       	brcs	.-14     	; 0x1624 <strrev+0x14>
    1632:	08 95       	ret

00001634 <__udivmodhi4>:
    1634:	aa 1b       	sub	r26, r26
    1636:	bb 1b       	sub	r27, r27
    1638:	51 e1       	ldi	r21, 0x11	; 17
    163a:	07 c0       	rjmp	.+14     	; 0x164a <__udivmodhi4_ep>

0000163c <__udivmodhi4_loop>:
    163c:	aa 1f       	adc	r26, r26
    163e:	bb 1f       	adc	r27, r27
    1640:	a6 17       	cp	r26, r22
    1642:	b7 07       	cpc	r27, r23
    1644:	10 f0       	brcs	.+4      	; 0x164a <__udivmodhi4_ep>
    1646:	a6 1b       	sub	r26, r22
    1648:	b7 0b       	sbc	r27, r23

0000164a <__udivmodhi4_ep>:
    164a:	88 1f       	adc	r24, r24
    164c:	99 1f       	adc	r25, r25
    164e:	5a 95       	dec	r21
    1650:	a9 f7       	brne	.-22     	; 0x163c <__udivmodhi4_loop>
    1652:	80 95       	com	r24
    1654:	90 95       	com	r25
    1656:	bc 01       	movw	r22, r24
    1658:	cd 01       	movw	r24, r26
    165a:	08 95       	ret

0000165c <_exit>:
    165c:	f8 94       	cli

0000165e <__stop_program>:
    165e:	ff cf       	rjmp	.-2      	; 0x165e <__stop_program>
